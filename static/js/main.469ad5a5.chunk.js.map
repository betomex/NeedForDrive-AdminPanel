{"version":3,"sources":["assets/Logo Icon.svg","assets/avatar.png","api/restapi.js","redux/actions/ordersActions.js","redux/ordersReducer.js","pages/adminPage/components/Order.jsx","pages/adminPage/tabs/orders/OrdersList.jsx","redux/actions/carsActions.js","redux/carsReducer.js","redux/actions/citiesActions.js","redux/citiesReducer.js","redux/actions/pointsActions.js","redux/pointsReducer.js","pages/adminPage/tablesColumns.jsx","pages/adminPage/tabs/cars/CarsTable.jsx","pages/adminPage/tabs/cities/CitiesTable.jsx","pages/adminPage/tabs/points/PointsTable.jsx","pages/adminPage/AdminPage.jsx","api/api.js","redux/actions/authActions.js","redux/authReducer.js","pages/loginPage/Login.jsx","assets/blankCar.png","pages/entityEditPage/carEdit/CarEditForm.jsx","pages/entityEditPage/carEdit/CarEditPage.jsx","pages/entityEditPage/cityEdit/CityEditForm.jsx","pages/entityEditPage/cityEdit/CityEditPage.jsx","pages/entityEditPage/pointEdit/PointEditForm.jsx","pages/entityEditPage/pointEdit/PointEditPage.jsx","App.jsx","redux/reduxStore.js","reportWebVitals.js","index.jsx"],"names":["instance","axios","create","baseURL","headers","localStorage","getItem","ordersAPI","page","limit","get","carsAPI","then","r","data","citiesAPI","pointsAPI","ordersActions","type","payload","count","initialState","orders","totalCount","ordersReducer","state","action","carOption","condition","text","className","CheckSquareOutlined","CloseSquareOutlined","Order","props","order","dateFrom","Date","dateTo","src","carId","thumbnail","path","alt","name","cityId","pointId","address","toLocaleString","color","isFullTank","isNeedChildChair","isRightWheel","price","OrdersList","useState","currentPage","setCurrentPage","dispatch","useDispatch","ordersData","useSelector","useEffect","a","response","sizeOfPage","useBreakpoint","Content","map","id","total","pageSize","current","showQuickJumper","showSizeChanger","showTotal","onChange","simple","xs","size","lg","carsActions","car","cars","carToEdit","categories","carAction","getCars","setCarToEdit","setCarAction","carsReducer","citiesActions","city","cities","cityAction","cityToEdit","getCities","setCityToEdit","setCityAction","citiesReducer","pointsActions","point","points","pointToEdit","pointAction","setPointToEdit","setPointAction","pointsReducer","carsColumns","title","dataIndex","key","render","categoryId","colors","index","toUpperCase","length","preview","width","to","onClick","citiesColumns","pointsColumns","CarsTable","loading","setLoading","carsData","bordered","columns","dataSource","rowKey","pagination","range","CitiesTable","citiesData","PointsTable","pointsData","AdminPage","currentMenuItem","setCurrentMenuItem","siderWidth","md","span","xl","logo","offset","BellFilled","avatar","Sider","mode","defaultSelectedKeys","defaultOpenKeys","style","height","borderRight","onSelect","e","Number","Item","icon","EditOutlined","CarOutlined","EnvironmentOutlined","HomeOutlined","alphabet","rs","Math","floor","random","window","btoa","getBasicHash","authAPI","login","password","body","username","post","catch","status","authActions","isAuth","authStatus","authReducer","setItem","access_token","refresh_token","Login","auth","onFinish","values","initialValues","remember","rules","required","message","validateStatus","prefix","UserOutlined","placeholder","allowClear","help","LockOutlined","htmlType","CarEditForm","image","value","setColors","options","category","addColor","useRef","labelCol","priceMin","priceMax","number","description","i","console","log","label","TextArea","showCount","maxLength","autoSize","filterOption","inputValue","option","indexOf","List","ref","block","PlusOutlined","Group","danger","CarEditPage","setImage","align","blankCar","beforeUpload","UploadOutlined","CityEditForm","CityEditPage","PointEditForm","PointEditPage","App","exact","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.469ad5a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo Icon.830257bf.svg\";","export default __webpack_public_path__ + \"static/media/avatar.8845cada.png\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\r\n  },\r\n});\r\n\r\nexport const ordersAPI = {\r\n  getOrders(page = 1, limit = 20) {\r\n    return instance.get(`db/order?page=${page}&limit=${limit}`)\r\n  }\r\n}\r\n\r\nexport const carsAPI = {\r\n  getCars(page = 1, limit = 10) {\r\n    return instance.get(`db/car?page=${page}&limit=${limit}`)\r\n  },\r\n  getCategories() {\r\n    return instance.get(`db/category`).then(r => r.data.data)\r\n  }\r\n}\r\n\r\nexport const citiesAPI = {\r\n  getCities() {\r\n    return instance.get(`db/city`)\r\n  }\r\n}\r\n\r\nexport const pointsAPI = {\r\n  getPoints() {\r\n    return instance.get(`db/point`)\r\n  }\r\n}","export const ordersActions = {\r\n  setOrdersPortion: (data) => ({type: \"ORDERS/SET_ORDERS_PORTION\", payload: data}),\r\n  setTotalOrdersCount: (count) => ({type: \"ORDERS/ORDERS_TOTAL_COUNT\", payload: count}),\r\n}","import {ordersAPI} from \"../api/restapi\";\r\nimport {ordersActions} from \"./actions/ordersActions\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  totalCount: null\r\n};\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ORDERS/SET_ORDERS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        orders: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/ORDERS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getOrders = (page) => async (dispatch) => {\r\n  const response = await ordersAPI.getOrders(page)\r\n  if (!initialState.totalCount) {\r\n    dispatch(ordersActions.setTotalOrdersCount(response.data.count))\r\n  }\r\n  dispatch(ordersActions.setOrdersPortion(response.data.data))\r\n}\r\n\r\nexport default ordersReducer;","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport './Order.css'\r\nimport {CheckSquareOutlined, CloseSquareOutlined} from \"@ant-design/icons\";\r\n\r\nconst carOption = (condition, text) => {\r\n  return condition\r\n    ? <div className=\"orderCarOption\">\r\n      <CheckSquareOutlined className=\"isCarOption\"/>\r\n      <p>{text}</p>\r\n    </div>\r\n    : <div className=\"orderCarOption\">\r\n      <CloseSquareOutlined className=\"isNotCarOption\"/>\r\n      <p className=\"isNotCarOptionText\">{text}</p>\r\n    </div>\r\n}\r\n\r\nexport const Order = (props) => {\r\n  const {order} = props\r\n  const dateFrom = new Date(order?.dateFrom)\r\n  const dateTo = new Date(order?.dateTo)\r\n\r\n  return <div className=\"orderContent\">\r\n    <div className=\"orderImageBlock\">\r\n      <img\r\n        src={order?.carId?.thumbnail.path}\r\n        alt=\"carImage\"\r\n        className=\"orderCarImage\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"orderInfoBlock\">\r\n      <p><span>{order?.carId?.name}</span> в <span>{order?.cityId?.name}</span>, {order?.pointId?.address}</p>\r\n      <p>{dateFrom.toLocaleString()} — {dateTo.toLocaleString()}</p>\r\n      <p>Цвет: <span>{order?.color}</span></p>\r\n    </div>\r\n\r\n    <div className=\"orderOptionsBlock\">\r\n      {carOption(order?.isFullTank, \"Полный бак\")}\r\n      {carOption(order?.isNeedChildChair, \"Детское кресло\")}\r\n      {carOption(order?.isRightWheel, \"Правый руль\")}\r\n    </div>\r\n\r\n    <div className=\"orderPriceBlock\">\r\n      <p className=\"orderPrice\">{order?.price} ₽</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Layout, Pagination} from \"antd\";\r\nimport './OrdersList.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {getOrders} from \"../../../../redux/ordersReducer\";\r\nimport {Order} from \"../../components/Order\";\r\n\r\nexport const OrdersList = () => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const ordersData = useSelector(state => state.orders)\r\n  const {orders, totalCount} = ordersData\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders(currentPage))\r\n  }, [currentPage])\r\n\r\n  const paginationHandler = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Заказы</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      <div className=\"ordersList\">\r\n        {orders.map(order => <Order order={order} key={order.id}/>)}\r\n      </div>\r\n      <Pagination\r\n        total={totalCount}\r\n        pageSize={20}\r\n        current={currentPage}\r\n        showQuickJumper\r\n        showSizeChanger={false}\r\n        showTotal={total => `Всего ${total} заказов`}\r\n        onChange={paginationHandler}\r\n        simple={sizeOfPage.xs}\r\n        size={sizeOfPage.lg ? \"default\" : \"small\"}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","export const carsActions = {\r\n  setCarsPortion: (data) => ({type: \"CARS/SET_CARS_PORTION\", payload: data}),\r\n  setTotalCarsCount: (count) => ({type: \"CARS/CARS_TOTAL_COUNT\", payload: count}),\r\n  setCarToEdit: (car) => ({type: \"CARS/SET_CAR_TO_EDIT\", payload: car}),\r\n  setCategories: (data) => ({type: \"CARS/SET_CATEGORIES\", payload: data}),\r\n  setCarAction: (action) => ({type: \"CARS/SET_CAR_ACTION\", payload: action}),\r\n}","import {carsAPI} from \"../api/restapi\";\r\nimport {carsActions} from \"./actions/carsActions\";\r\n\r\nconst initialState = {\r\n  cars: [],\r\n  carToEdit: null,\r\n  totalCount: null,\r\n  categories: [],\r\n  carAction: null\r\n};\r\n\r\nconst carsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CARS/SET_CARS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        cars: action.payload\r\n      }\r\n    }\r\n    case \"CARS/CARS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CAR_TO_EDIT\": {\r\n      return {\r\n        ...state,\r\n        carToEdit: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CATEGORIES\": {\r\n      return {\r\n        ...state,\r\n        categories: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CAR_ACTION\": {\r\n      return {\r\n        ...state,\r\n        carAction: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getCars = (page) => async (dispatch) => {\r\n  const response = await carsAPI.getCars(page)\r\n  if (!initialState.totalCount) {\r\n    dispatch(carsActions.setTotalCarsCount(response.data.count))\r\n  }\r\n  dispatch(carsActions.setCarsPortion(response.data.data))\r\n}\r\n\r\nexport const getCategories = () => async (dispatch) => {\r\n  const data = await carsAPI.getCategories()\r\n  dispatch(carsActions.setCategories(data))\r\n}\r\n\r\nexport const setCarToEdit = (car) => async (dispatch) => {\r\n  dispatch(carsActions.setCarToEdit(car))\r\n}\r\n\r\nexport const setCarAction = (action) => async (dispatch) => {\r\n  dispatch(carsActions.setCarAction(action))\r\n}\r\n\r\nexport default carsReducer;","export const citiesActions = {\r\n  setCitiesPortion: (data) => ({type: \"CITIES/SET_CITIES_PORTION\", payload: data}),\r\n  setTotalCitiesCount: (count) => ({type: \"CITIES/CITIES_TOTAL_COUNT\", payload: count}),\r\n  setCityToEdit: (city) => ({type: \"CITIES/SET_CITY_TO_EDIT\", payload: city}),\r\n  setCityAction: (action) => ({type: \"CITIES/SET_CITY_ACTION\", payload: action}),\r\n}","import {citiesAPI} from \"../api/restapi\";\r\nimport {citiesActions} from \"./actions/citiesActions\";\r\n\r\nconst initialState = {\r\n  cities: [],\r\n  totalCount: null,\r\n  cityAction: null,\r\n  cityToEdit: null\r\n};\r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CITIES/SET_CITIES_PORTION\": {\r\n      return {\r\n        ...state,\r\n        cities: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/CITIES_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/SET_CITY_TO_EDIT\": {\r\n      return {\r\n        ...state,\r\n        cityToEdit: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/SET_CITY_ACTION\": {\r\n      return {\r\n        ...state,\r\n        cityAction: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getCities = () => async (dispatch) => {\r\n  const response = await citiesAPI.getCities()\r\n  if (!initialState.totalCount) {\r\n    dispatch(citiesActions.setTotalCitiesCount(response.data.count))\r\n  }\r\n  dispatch(citiesActions.setCitiesPortion(response.data.data))\r\n}\r\n\r\nexport const setCityToEdit = (city) => async (dispatch) => {\r\n  dispatch(citiesActions.setCityToEdit(city))\r\n}\r\n\r\nexport const setCityAction = (action) => async (dispatch) => {\r\n  dispatch(citiesActions.setCityAction(action))\r\n}\r\n\r\nexport default citiesReducer;","export const pointsActions = {\r\n  setPointsPortion: (data) => ({type: \"POINTS/SET_POINTS_PORTION\", payload: data}),\r\n  setTotalPointsCount: (count) => ({type: \"POINTS/POINTS_TOTAL_COUNT\", payload: count}),\r\n  setPointToEdit: (point) => ({type: \"POINTS/SET_POINT_TO_EDIT\", payload: point}),\r\n  setPointAction: (action) => ({type: \"POINTS/SET_POINT_ACTION\", payload: action}),\r\n}","import {pointsAPI} from \"../api/restapi\";\r\nimport {pointsActions} from \"./actions/pointsActions\";\r\n\r\nconst initialState = {\r\n  points: [],\r\n  totalCount: null,\r\n  pointToEdit: null,\r\n  pointAction: null\r\n};\r\n\r\nconst pointsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"POINTS/SET_POINTS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        points: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/POINTS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/SET_POINT_TO_EDIT\": {\r\n      return {\r\n        ...state,\r\n        pointToEdit: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/SET_POINT_ACTION\": {\r\n      return {\r\n        ...state,\r\n        pointAction: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getPoints = () => async (dispatch) => {\r\n  const response = await pointsAPI.getPoints()\r\n  if (!initialState.totalCount) {\r\n    dispatch(pointsActions.setTotalPointsCount(response.data.count))\r\n  }\r\n  dispatch(pointsActions.setPointsPortion(response.data.data))\r\n}\r\n\r\nexport const setPointToEdit = (point) => async (dispatch) => {\r\n  dispatch(pointsActions.setPointToEdit(point))\r\n}\r\n\r\nexport const setPointAction = (action) => async (dispatch) => {\r\n  dispatch(pointsActions.setPointAction(action))\r\n}\r\n\r\nexport default pointsReducer;","import React from \"react\";\r\nimport {Image} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCarAction, setCarToEdit} from \"../../redux/carsReducer\";\r\nimport {setCityAction, setCityToEdit} from \"../../redux/citiesReducer\";\r\nimport {setPointAction, setPointToEdit} from \"../../redux/pointsReducer\";\r\n\r\nexport const carsColumns = [\r\n  {\r\n    title: 'Категория',\r\n    dataIndex: 'categoryId',\r\n    key: 'categoryId',\r\n    render: categoryId => `${categoryId?.name}`\r\n  },\r\n  {\r\n    title: 'Цвета',\r\n    dataIndex: 'colors',\r\n    key: 'colors',\r\n    render: colors => colors.map((color, index) => {\r\n      return `${color.toUpperCase()} ${index !== colors.length - 1 ? \", \" : \"\"}`\r\n    })\r\n  },\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Номер авто',\r\n    key: 'number',\r\n    dataIndex: 'number',\r\n  },\r\n  {\r\n    title: 'Цена',\r\n    key: 'priceMin',\r\n    dataIndex: 'priceMin',\r\n  },\r\n  {\r\n    title: 'Фото',\r\n    key: 'thumbnail',\r\n    dataIndex: 'thumbnail',\r\n    render: thumbnail => (\r\n      <Image\r\n        src={thumbnail?.path}\r\n        alt=\"carImage\"\r\n        preview={false}\r\n        width={100}\r\n      />\r\n    )\r\n  },\r\n  {\r\n    title: 'Действия',\r\n    key: 'actions',\r\n    render: (car) => {\r\n      const dispatch = useDispatch()\r\n\r\n      return <Link to=\"car-edit\" onClick={() => {\r\n        dispatch(setCarAction(\"update\"))\r\n        dispatch(setCarToEdit(car))\r\n      }}>Изменить</Link>\r\n    }\r\n  },\r\n];\r\n\r\nexport const citiesColumns = [\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Действия',\r\n    key: 'actions',\r\n    render: (city) => {\r\n      const dispatch = useDispatch()\r\n\r\n      return <Link to=\"city-edit\" onClick={() => {\r\n        dispatch(setCityAction(\"update\"))\r\n        dispatch(setCityToEdit(city))\r\n      }}>Изменить</Link>\r\n    }\r\n  },\r\n];\r\n\r\nexport const pointsColumns = [\r\n  {\r\n    title: 'Город',\r\n    dataIndex: 'cityId',\r\n    key: 'cityId',\r\n    render: cityId => cityId?.name\r\n  },\r\n  {\r\n    title: 'Адрес',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'Описание',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Действия',\r\n    key: 'actions',\r\n    render: (point) => {\r\n      const dispatch = useDispatch()\r\n\r\n      return <Link to=\"point-edit\" onClick={() => {\r\n        dispatch(setPointAction(\"update\"))\r\n        dispatch(setPointToEdit(point))\r\n      }}>Изменить</Link>\r\n    }\r\n  },\r\n];","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Layout, Table} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getCars, setCarAction, setCarToEdit} from \"../../../../redux/carsReducer\";\r\nimport {carsColumns} from \"../../tablesColumns\";\r\nimport './CarsTable.css'\r\n\r\nexport const CarsTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const carsData = useSelector(state => state.cars)\r\n  const {cars, totalCount} = carsData\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getCars(currentPage))\r\n    setLoading(false)\r\n  }, [currentPage])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Автомобили</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      <Link to=\"car-edit\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"addEntityButton\"\r\n          onClick={() => {\r\n            dispatch(setCarAction(\"create\"))\r\n            dispatch(setCarToEdit(null))\r\n          }}\r\n        >Добавить авто</Button>\r\n      </Link>\r\n      <div className=\"entityTable\">\r\n        <Table\r\n          bordered\r\n          columns={carsColumns}\r\n          dataSource={cars}\r\n          loading={loading}\r\n          rowKey={car => car.id}\r\n          pagination={{\r\n            total: totalCount - 10, // Из-за какой-то ошибки в базе (безолаберности интернов) там аж 10 пустых записей\r\n            pageSize: 10,\r\n            current: currentPage,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} авто`,\r\n            onChange: page => {\r\n              setCurrentPage(page)\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout.Content>\r\n  </>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Layout, Table} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getCities, setCityAction, setCityToEdit} from \"../../../../redux/citiesReducer\";\r\nimport {citiesColumns} from \"../../tablesColumns\";\r\nimport './CitiesTable.css'\r\n\r\nexport const CitiesTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const citiesData = useSelector(state => state.cities)\r\n  const {cities, totalCount} = citiesData\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getCities())\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Города</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      <Link to=\"city-edit\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"addEntityButton\"\r\n          onClick={() => {\r\n            dispatch(setCityAction(\"create\"))\r\n            dispatch(setCityToEdit(null))\r\n          }}\r\n        >Добавить город</Button>\r\n      </Link>\r\n      <Table\r\n        className=\"cityTable\"\r\n        bordered\r\n        columns={citiesColumns}\r\n        dataSource={cities}\r\n        loading={loading}\r\n        rowKey={city => city.id}\r\n        pagination={{\r\n          total: totalCount,\r\n          showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} городов`,\r\n        }}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Layout, Table} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getPoints, setPointAction, setPointToEdit} from \"../../../../redux/pointsReducer\";\r\nimport {pointsColumns} from \"../../tablesColumns\";\r\nimport './PointsTable.css'\r\n\r\nexport const PointsTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const pointsData = useSelector(state => state.points)\r\n  const {points, totalCount} = pointsData\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getPoints())\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Пункты</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      <Link to=\"point-edit\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"addEntityButton\"\r\n          onClick={() => {\r\n            dispatch(setPointAction(\"create\"))\r\n            dispatch(setPointToEdit(null))\r\n          }}\r\n        >Добавить пункт</Button>\r\n      </Link>\r\n      <Table\r\n        className=\"pointTable\"\r\n        bordered\r\n        columns={pointsColumns}\r\n        dataSource={points}\r\n        loading={loading}\r\n        rowKey={point => point.id}\r\n        pagination={{\r\n          total: totalCount,\r\n          showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} пунктов`,\r\n        }}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","import React, {useState} from \"react\";\r\nimport {Avatar, Badge, Col, Layout, Menu, Row} from 'antd';\r\nimport {BellFilled, CarOutlined, EditOutlined, EnvironmentOutlined, HomeOutlined} from \"@ant-design/icons\";\r\nimport './AdminPage.css'\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport logo from '../../assets/Logo Icon.svg'\r\nimport avatar from '../../assets/avatar.png'\r\nimport {OrdersList} from \"./tabs/orders/OrdersList\";\r\nimport {CarsTable} from \"./tabs/cars/CarsTable\";\r\nimport {CitiesTable} from \"./tabs/cities/CitiesTable\";\r\nimport {PointsTable} from \"./tabs/points/PointsTable\";\r\n\r\nexport const AdminPage = () => {\r\n  const [currentMenuItem, setCurrentMenuItem] = useState(1)\r\n\r\n  const onSelectHandler = (e) => {\r\n    setCurrentMenuItem(Number(e.key))\r\n  }\r\n\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  let siderWidth = 0\r\n  if (sizeOfPage.xs) siderWidth = 35\r\n  else if (sizeOfPage.md) siderWidth = 200\r\n\r\n  return <Layout>\r\n    <Row className=\"adminPageHeader\">\r\n      <Col\r\n        xs={{span: 13}}\r\n        md={{span: 6}}\r\n        lg={{span: 5}}\r\n        xl={{span: 3}}\r\n        className=\"adminPageCompany\"\r\n      >\r\n        <img\r\n          src={logo}\r\n          alt=\"logo\"\r\n          className=\"logoImg\"\r\n        />\r\n        <p className=\"logoTitle\">Need For Drive</p>\r\n      </Col>\r\n      <Col\r\n        xs={{offset: 5, span: 3}}\r\n        md={{offset: 14, span: 2}}\r\n        lg={{offset: 15}}\r\n        xl={{offset: 19, span: 1}}\r\n        className=\"adminPageHeaderNotification\"\r\n      >\r\n        <Badge\r\n          count={2}\r\n          size=\"small\"\r\n        >\r\n          <BellFilled className=\"notificationIcon\"/>\r\n        </Badge>\r\n      </Col>\r\n      <Col\r\n        xs={{span: 3}}\r\n        md={{span: 2}}\r\n        xl={{span: 1}}\r\n        className=\"adminUserAccount\"\r\n      >\r\n        <Avatar src={avatar}/>\r\n      </Col>\r\n    </Row>\r\n\r\n    <Layout>\r\n      <Layout.Sider\r\n        width={siderWidth}\r\n        className=\"adminPageSider\"\r\n      >\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          style={{height: '100%', borderRight: 0}}\r\n          onSelect={onSelectHandler}\r\n        >\r\n          <Menu.Item\r\n            key=\"1\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EditOutlined/>}\r\n          >Список заказов</Menu.Item>\r\n          <Menu.Item\r\n            key=\"2\"\r\n            className=\"sideMenuItem\"\r\n            icon={<CarOutlined/>}\r\n          >Таблица авто</Menu.Item>\r\n          <Menu.Item\r\n            key=\"3\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EnvironmentOutlined/>}\r\n          >Таблица городов</Menu.Item>\r\n          <Menu.Item\r\n            key=\"4\"\r\n            className=\"sideMenuItem\"\r\n            icon={<HomeOutlined/>}\r\n          >Таблица пунктов</Menu.Item>\r\n        </Menu>\r\n      </Layout.Sider>\r\n\r\n      <Layout className=\"adminPageContainer\">\r\n        {currentMenuItem === 1 && <OrdersList/>}\r\n        {currentMenuItem === 2 && <CarsTable/>}\r\n        {currentMenuItem === 3 && <CitiesTable/>}\r\n        {currentMenuItem === 4 && <PointsTable/>}\r\n      </Layout>\r\n\r\n    </Layout>\r\n  </Layout>\r\n}","import axios from \"axios\";\r\n\r\nconst clientSecret = \"4cbcea96de\"\r\nconst alphabet = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\nconst getBasicHash = () => {\r\n  let rs = \"\";\r\n  while (rs.length < 7) {\r\n    rs += alphabet[Math.floor(Math.random() * alphabet.length)];\r\n  }\r\n  return `Basic ${window.btoa(`${rs}:${clientSecret}`)}`\r\n}\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": getBasicHash()\r\n  },\r\n});\r\n\r\nexport const authAPI = {\r\n  postLogin(login, password) {\r\n    const body = {\r\n      username: login,\r\n      password\r\n    }\r\n    return instance.post(`auth/login`, body).catch(r => {\r\n      return {...r, status: 401}\r\n    })\r\n  }\r\n}","export const authActions = {\r\n  setAuthData: (data) => ({type: \"AUTH/SET_AUTH_DATA\", payload: data}),\r\n  setAuthStatus: (status) => ({type: \"AUTH/SET_AUTH_STATUS\", payload: status})\r\n}","import {authAPI} from \"../api/api\";\r\nimport {authActions} from \"./actions/authActions\";\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  authStatus: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"AUTH/SET_AUTH_DATA\": {\r\n      localStorage.setItem(\"access_token\", action.payload.access_token)\r\n      localStorage.setItem(\"refresh_token\", action.payload.refresh_token)\r\n\r\n      return {\r\n        ...state,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case \"AUTH/SET_AUTH_STATUS\": {\r\n      return {\r\n        ...state,\r\n        authStatus: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const postLogin = (login, password) => async (dispatch) => {\r\n  const response = await authAPI.postLogin(login, password)\r\n  if (response.status === 200) {\r\n    dispatch(authActions.setAuthData(response.data))\r\n  } else {\r\n    dispatch(authActions.setAuthStatus(response.status))\r\n  }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport './Login.css'\r\nimport {Button, Form, Input, Space} from \"antd\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {postLogin} from \"../../redux/authReducer\";\r\nimport logo from '../../assets/Logo Icon.svg'\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onFinish = (values) => {\r\n    dispatch(postLogin(values.username, values.password))\r\n  };\r\n\r\n  const authStatus = useSelector(state => state.auth.authStatus)\r\n\r\n  return <div className=\"loginContainer\">\r\n    <div className=\"loginContent\">\r\n      <Space\r\n        className=\"loginHeader\"\r\n        size=\"middle\"\r\n      >\r\n        <img\r\n          className=\"logo\"\r\n          src={logo}\r\n          alt=\"logo\"\r\n        />\r\n        <p className=\"company\">Need For Drive</p>\r\n      </Space>\r\n      <div className=\"loginCard\">\r\n        <p className=\"loginTitle\">Вход</p>\r\n        <Form\r\n          name=\"loginForm\"\r\n          onFinish={onFinish}\r\n          initialValues={{remember: true}} // intern intern-S!\r\n        >\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"username\"\r\n            rules={[{required: true, message: 'Введите логин'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined/>}\r\n              placeholder=\"Username\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"password\"\r\n            rules={[{required: true, message: 'Введите пароль'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n            help={authStatus === 401 ? \"Неверный логин или пароль\" : null}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined/>}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <div className=\"loginCardFooter\">\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a>Запросить доступ</a>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"submitButton\"\r\n            >Войти</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","export default __webpack_public_path__ + \"static/media/blankCar.55f3fbcd.png\";","/* eslint-disable react/prop-types */\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {AutoComplete, Button, Checkbox, Form, Input} from \"antd\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCategories} from \"../../../redux/carsReducer\";\r\n\r\nexport const CarEditForm = (props) => {\r\n  const {image, carToEdit} = props\r\n\r\n  const [colors, setColors] = useState(carToEdit?.colors.map((color, index) => ({\r\n    id: color + index,\r\n    value: color\r\n  })) || [])\r\n\r\n  const carsData = useSelector(state => state.cars)\r\n  const {categories, carAction} = carsData\r\n  const options = categories.map(category => ({value: category.name}))\r\n  const dispatch = useDispatch()\r\n  const addColor = useRef()\r\n\r\n  const onFormSubmitHandle = (values) => {\r\n    let categoryId = null\r\n    for (let i = 0; i < categories.length; i += 1) {\r\n      if (categories[i].name === values.categoryId) {\r\n        categoryId = categories[i].id\r\n        break\r\n      }\r\n    }\r\n    console.log({...values, image, categoryId})\r\n    console.log(carAction)\r\n    /* POST | PUT REQUEST */\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories())\r\n  }, [])\r\n\r\n  return <Form\r\n    name=\"editCar\"\r\n    labelCol={{span: 6}}\r\n    initialValues={{\r\n      priceMin: carToEdit?.priceMin || null,\r\n      priceMax: carToEdit?.priceMax || null,\r\n      name: carToEdit?.name || null,\r\n      number: carToEdit?.number || null,\r\n      description: carToEdit?.description || null,\r\n      categoryId: carToEdit?.categoryId?.name || null,\r\n    }}\r\n    onFinish={onFormSubmitHandle}\r\n  >\r\n    <Form.Item\r\n      label=\"Минимальная цена\"\r\n      name=\"priceMin\"\r\n      rules={[{required: true, message: 'Введите минимальную смоимость аренды авто'}]}\r\n    >\r\n      <Input placeholder=\"0\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Максимальная цена\"\r\n      name=\"priceMax\"\r\n      rules={[{required: true, message: 'Введите максимальную смоимость аренды авто'}]}\r\n    >\r\n      <Input placeholder=\"0\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Наименование\"\r\n      name=\"name\"\r\n      rules={[{required: true, message: 'Введите наименование авто'}]}\r\n    >\r\n      <Input placeholder=\"Ford Focus\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Номер\"\r\n      name=\"number\"\r\n      rules={[{required: true, message: 'Введите автомобильный номер'}]}\r\n    >\r\n      <Input placeholder=\"A000AA\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Описание\"\r\n      name=\"description\"\r\n    >\r\n      <Input.TextArea\r\n        showCount\r\n        maxLength={200}\r\n        autoSize\r\n        placeholder=\"Премиум-класс\"\r\n      />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Категория\"\r\n      name=\"categoryId\"\r\n      rules={[{required: true, message: 'Выберите категорию'}]}\r\n    >\r\n      <AutoComplete\r\n        style={{width: 200}}\r\n        options={options}\r\n        allowClear\r\n        placeholder=\"Выберите категорию...\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n      />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"carColorItem\"\r\n      label=\"Цвета\"\r\n    >\r\n      <Form.List name=\"colors\">\r\n        {() => (\r\n          <>\r\n            <Form.Item>\r\n              <Input placeholder=\"Добавьте цвет\" allowClear ref={addColor} className=\"carColorInput\"/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"dashed\" className=\"carColorAddButton\" onClick={() => {\r\n                setColors([\r\n                  ...colors,\r\n                  {\r\n                    id: colors.length,\r\n                    value: addColor.current.state.value\r\n                  }\r\n                ])\r\n                addColor.current.state.value = \"\"\r\n              }} block>\r\n                <PlusOutlined/>\r\n              </Button>\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n      </Form.List>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      name=\"colorsList\"\r\n      label=\"Выберите цвета\"\r\n    >\r\n      <Checkbox.Group className=\"colorsList\">\r\n        {colors.map((color) => <Checkbox value={color.value} key={color.id}>\r\n          {color.value}\r\n        </Checkbox>)}\r\n      </Checkbox.Group>\r\n    </Form.Item>\r\n\r\n    <div className=\"formButtons\">\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Сохранить\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      <Link to=\"/admin\"><Button danger className=\"cancelButton\">Отменить</Button></Link>\r\n    </div>\r\n  </Form>\r\n}","import React, {useState} from \"react\";\r\nimport {Button, Layout, Row, Upload} from 'antd';\r\nimport './CarEditPage.css'\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\nimport {useSelector} from \"react-redux\";\r\nimport blankCar from '../../../assets/blankCar.png'\r\nimport {CarEditForm} from \"./CarEditForm\";\r\n\r\nexport const CarEditPage = () => {\r\n  const [image, setImage] = useState()\r\n\r\n  const carToEdit = useSelector(state => state.cars.carToEdit)\r\n\r\n  return <Layout className=\"editingContainer\">\r\n    <h1 className=\"pageTitle editingTitle\">Карточка автомобиля</h1>\r\n    <Row align=\"top\">\r\n      <div className=\"editingContent editingOne\">\r\n        <img\r\n          className=\"cardImage\"\r\n          src={carToEdit?.thumbnail?.path || blankCar}\r\n          alt=\"carImage\"\r\n        />\r\n        <p className=\"carName\">{carToEdit?.name || \"Марка авто\"}</p>\r\n        <p className=\"carCategory\">{carToEdit?.categoryId?.name || \"Категория\"}</p>\r\n        <Upload\r\n          name=\"file\"\r\n          beforeUpload={(e) => {\r\n            setImage(e)\r\n            return false\r\n          }}\r\n        >\r\n          <Button icon={<UploadOutlined/>}>Выберите файл...</Button>\r\n        </Upload>\r\n      </div>\r\n      <div className=\"editingContent editingTwo\">\r\n        <p className=\"EntityFormTitle\">Настройки автомобиля</p>\r\n        <CarEditForm image={image} carToEdit={carToEdit}/>\r\n      </div>\r\n    </Row>\r\n  </Layout>\r\n}","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Button, Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const CityEditForm = (props) => {\r\n  const {cityToEdit} = props\r\n\r\n  const cityAction = useSelector(state => state.cities.cityAction)\r\n\r\n  const onFormSubmitHandle = (values) => {\r\n    console.log(values)\r\n    console.log(cityAction)\r\n    /* POST | PUT REQUEST */\r\n  }\r\n\r\n  return <Form\r\n    name=\"editCity\"\r\n    labelCol={{span: 5}}\r\n    initialValues={{\r\n      name: cityToEdit?.name || null\r\n    }}\r\n    onFinish={onFormSubmitHandle}\r\n  >\r\n    <Form.Item\r\n      label=\"Наименование\"\r\n      name=\"name\"\r\n      rules={[{required: true, message: 'Введите название города'}]}\r\n    >\r\n      <Input placeholder=\"Москва...\"/>\r\n    </Form.Item>\r\n\r\n    <div className=\"formButtons cityFormButtons\">\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Сохранить\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      <Link to=\"/admin\"><Button danger className=\"cancelButton\">Отменить</Button></Link>\r\n    </div>\r\n  </Form>\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Layout} from \"antd\";\r\nimport {CityEditForm} from \"./CityEditForm\";\r\nimport './CityEditPage.css'\r\n\r\nexport const CityEditPage = () => {\r\n  const cityToEdit = useSelector(state => state.cities.cityToEdit)\r\n\r\n  return <Layout className=\"editingContainer\">\r\n    <h1 className=\"pageTitle editingTitle\">Карточка города</h1>\r\n    <div className=\"editingContent cityEditContent\">\r\n      <p className=\"EntityFormTitle\">Настройки города</p>\r\n      <CityEditForm cityToEdit={cityToEdit}/>\r\n    </div>\r\n  </Layout>\r\n}","/* eslint-disable react/prop-types */\r\nimport React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AutoComplete, Button, Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getCities} from \"../../../redux/citiesReducer\";\r\n\r\nexport const PointEditForm = (props) => {\r\n  const {pointToEdit} = props\r\n\r\n  const pointAction = useSelector(state => state.points.pointAction)\r\n  const cities = useSelector(state => state.cities.cities)\r\n  const options = cities.map(city => ({value: city.name}))\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmitHandle = (values) => {\r\n    let cityId = null\r\n    for (let i = 0; i < cities.length; i += 1) {\r\n      if (cities[i].name === values.cityId) {\r\n        cityId = cities[i].id\r\n        break\r\n      }\r\n    }\r\n    console.log({...values, cityId})\r\n    console.log(pointAction)\r\n    /* POST | PUT REQUEST */\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getCities())\r\n  }, [])\r\n\r\n  return <Form\r\n    name=\"editPoint\"\r\n    labelCol={{span: 4}}\r\n    initialValues={{\r\n      name: pointToEdit?.name || null,\r\n      address: pointToEdit?.address || null,\r\n      cityId: pointToEdit?.cityId?.name || null,\r\n    }}\r\n    onFinish={onFormSubmitHandle}\r\n  >\r\n    <Form.Item\r\n      label=\"Наименование\"\r\n      name=\"name\"\r\n      rules={[{required: true, message: 'Введите наименование пункта'}]}\r\n    >\r\n      <Input placeholder=\"Пункт...\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Адрес\"\r\n      name=\"address\"\r\n      rules={[{required: true, message: 'Введите адрес пункта'}]}\r\n    >\r\n      <Input placeholder=\"ул. Стахановская, 29/1\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Город\"\r\n      name=\"cityId\"\r\n      rules={[{required: true, message: 'Выберите город'}]}\r\n    >\r\n      <AutoComplete\r\n        style={{width: 200}}\r\n        options={options}\r\n        allowClear\r\n        placeholder=\"Выберите город...\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n      />\r\n    </Form.Item>\r\n\r\n    <div className=\"formButtons pointFormButtons\">\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Сохранить\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      <Link to=\"/admin\"><Button danger className=\"cancelButton\">Отменить</Button></Link>\r\n    </div>\r\n  </Form>\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Layout} from \"antd\";\r\nimport {PointEditForm} from \"./PointEditForm\";\r\nimport './PointEditPage.css'\r\n\r\nexport const PointEditPage = () => {\r\n  const pointToEdit = useSelector(state => state.points.pointToEdit)\r\n\r\n  return <Layout className=\"editingContainer\">\r\n    <h1 className=\"pageTitle editingTitle\">Карточка пункта</h1>\r\n    <div className=\"editingContent pointEditContent\">\r\n      <p className=\"EntityFormTitle\">Настройки пункта</p>\r\n      <PointEditForm pointToEdit={pointToEdit}/>\r\n    </div>\r\n  </Layout>\r\n}","import React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AdminPage} from \"./pages/adminPage/AdminPage\";\r\nimport {Login} from \"./pages/loginPage/Login\";\r\nimport {CarEditPage} from \"./pages/entityEditPage/carEdit/CarEditPage\";\r\nimport {CityEditPage} from \"./pages/entityEditPage/cityEdit/CityEditPage\";\r\nimport {PointEditPage} from \"./pages/entityEditPage/pointEdit/PointEditPage\";\r\n\r\nconst App = () => {\r\n  const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n  return <Switch>\r\n    <Route\r\n      exact\r\n      path=\"/\"\r\n      render={() => <Redirect to=\"/admin\"/>}\r\n    />\r\n    <Route\r\n      path=\"/admin\"\r\n      render={() => {\r\n        return isAuth ? <AdminPage/> : <Redirect to=\"/login\"/>\r\n      }}\r\n    />\r\n    <Route\r\n      path=\"/login\"\r\n      render={() => {\r\n        return !isAuth ? <Login/> : <Redirect to=\"/admin\"/>\r\n      }}\r\n    />\r\n    <Route\r\n      path=\"/car-edit\"\r\n      render={() => {\r\n        return isAuth ? <CarEditPage/> : <Redirect to=\"/login\"/>\r\n      }}\r\n    />\r\n    <Route\r\n      path=\"/city-edit\"\r\n      render={() => {\r\n        return isAuth ? <CityEditPage/> : <Redirect to=\"/login\"/>\r\n      }}\r\n    />\r\n    <Route\r\n      path=\"/point-edit\"\r\n      render={() => {\r\n        return isAuth ? <PointEditPage/> : <Redirect to=\"/login\"/>\r\n      }}\r\n    />\r\n  </Switch>\r\n}\r\n\r\nexport default App\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport authReducer from \"./authReducer\";\r\nimport ordersReducer from \"./ordersReducer\";\r\nimport carsReducer from \"./carsReducer\";\r\nimport citiesReducer from \"./citiesReducer\";\r\nimport pointsReducer from \"./pointsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  orders: ordersReducer,\r\n  cars: carsReducer,\r\n  cities: citiesReducer,\r\n  points: pointsReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from './App';\r\nimport store from \"./redux/reduxStore\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}