{"version":3,"sources":["assets/Logo Icon.svg","assets/avatar.png","api/restapi.js","redux/actions/ordersActions.js","redux/ordersReducer.js","pages/adminPage/components/Order.jsx","pages/adminPage/tabs/orders/OrdersList.jsx","redux/actions/carsActions.js","redux/carsReducer.js","pages/adminPage/tablesColumns.jsx","pages/adminPage/tabs/cars/CarsTable.jsx","redux/actions/citiesActions.js","redux/citiesReducer.js","pages/adminPage/tabs/cities/CitiesTable.jsx","redux/actions/pointsActions.js","redux/pointsReducer.js","pages/adminPage/tabs/points/PointsTable.jsx","pages/adminPage/AdminPage.jsx","api/api.js","redux/actions/authActions.js","redux/authReducer.js","pages/loginPage/Login.jsx","App.jsx","redux/reduxStore.js","reportWebVitals.js","index.jsx"],"names":["instance","axios","create","baseURL","headers","localStorage","getItem","ordersAPI","page","limit","get","carsAPI","citiesAPI","pointsAPI","ordersActions","data","type","payload","count","initialState","orders","totalCount","ordersReducer","state","action","carOption","condition","text","className","CheckSquareOutlined","CloseSquareOutlined","Order","props","order","dateFrom","Date","dateTo","src","carId","thumbnail","path","alt","name","cityId","pointId","address","toLocaleString","color","isFullTank","isNeedChildChair","isRightWheel","price","OrdersList","useState","currentPage","setCurrentPage","dispatch","useDispatch","ordersData","useSelector","useEffect","a","response","sizeOfPage","useBreakpoint","Content","map","id","total","pageSize","current","showQuickJumper","showTotal","onChange","simple","xs","size","lg","carsActions","cars","getCars","carsReducer","carsColumns","title","dataIndex","key","render","categoryId","colors","index","toUpperCase","length","preview","width","citiesColumns","pointsColumns","CarsTable","loading","setLoading","carsData","bordered","columns","dataSource","rowKey","car","pagination","range","citiesActions","cities","citiesReducer","CitiesTable","citiesData","city","pointsActions","points","pointsReducer","PointsTable","pointsData","point","AdminPage","currentMenuItem","setCurrentMenuItem","siderWidth","md","span","xl","logo","offset","BellFilled","avatar","Sider","mode","defaultSelectedKeys","defaultOpenKeys","style","height","borderRight","onSelect","e","Number","Item","icon","EditOutlined","CarOutlined","EnvironmentOutlined","HomeOutlined","alphabet","rs","Math","floor","random","window","btoa","getBasicHash","authAPI","login","password","body","username","post","catch","r","status","authActions","isAuth","authStatus","authReducer","setItem","access_token","refresh_token","Login","auth","onFinish","values","initialValues","remember","rules","required","message","validateStatus","prefix","UserOutlined","placeholder","allowClear","help","LockOutlined","htmlType","App","exact","to","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cb65c3f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo Icon.830257bf.svg\";","export default __webpack_public_path__ + \"static/media/avatar.8845cada.png\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `Bearer ${localStorage.getItem(\"access_token\")}`\r\n  },\r\n});\r\n\r\nexport const ordersAPI = {\r\n  getOrders(page = 1, limit = 20) {\r\n    return instance.get(`db/order?page=${page}&limit=${limit}`)\r\n  }\r\n}\r\n\r\nexport const carsAPI = {\r\n  getCars(page = 1, limit = 10) {\r\n    return instance.get(`db/car?page=${page}&limit=${limit}`)\r\n  }\r\n}\r\n\r\nexport const citiesAPI = {\r\n  getCities() {\r\n    return instance.get(`db/city`)\r\n  }\r\n}\r\n\r\nexport const pointsAPI = {\r\n  getPoints() {\r\n    return instance.get(`db/point`)\r\n  }\r\n}","export const ordersActions = {\r\n  setOrdersPortion: (data) => ({type: \"ORDERS/SET_ORDERS_PORTION\", payload: data}),\r\n  setTotalOrdersCount: (count) => ({type: \"ORDERS/ORDERS_TOTAL_COUNT\", payload: count}),\r\n}","import {ordersAPI} from \"../api/restapi\";\r\nimport {ordersActions} from \"./actions/ordersActions\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  totalCount: null\r\n};\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ORDERS/SET_ORDERS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        orders: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/ORDERS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getOrders = (page) => async (dispatch) => {\r\n  const response = await ordersAPI.getOrders(page)\r\n  if (!initialState.totalCount) {\r\n    dispatch(ordersActions.setTotalOrdersCount(response.data.count))\r\n  }\r\n  dispatch(ordersActions.setOrdersPortion(response.data.data))\r\n}\r\n\r\nexport default ordersReducer;","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport './Order.css'\r\nimport {CheckSquareOutlined, CloseSquareOutlined} from \"@ant-design/icons\";\r\n\r\nconst carOption = (condition, text) => {\r\n  return condition\r\n    ? <div className=\"orderCarOption\">\r\n      <CheckSquareOutlined className=\"isCarOption\"/>\r\n      <p>{text}</p>\r\n    </div>\r\n    : <div className=\"orderCarOption\">\r\n      <CloseSquareOutlined className=\"isNotCarOption\"/>\r\n      <p className=\"isNotCarOptionText\">{text}</p>\r\n    </div>\r\n}\r\n\r\nexport const Order = (props) => {\r\n  const {order} = props\r\n  const dateFrom = new Date(order?.dateFrom)\r\n  const dateTo = new Date(order?.dateTo)\r\n\r\n  return <div className=\"orderContent\">\r\n    <div className=\"orderImageBlock\">\r\n      <img\r\n        src={order?.carId?.thumbnail.path}\r\n        alt=\"carImage\"\r\n        className=\"orderCarImage\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"orderInfoBlock\">\r\n      <p><span>{order?.carId?.name}</span> в <span>{order?.cityId?.name}</span>, {order?.pointId?.address}</p>\r\n      <p>{dateFrom.toLocaleString()} — {dateTo.toLocaleString()}</p>\r\n      <p>Цвет: <span>{order?.color}</span></p>\r\n    </div>\r\n\r\n    <div className=\"orderOptionsBlock\">\r\n      {carOption(order?.isFullTank, \"Полный бак\")}\r\n      {carOption(order?.isNeedChildChair, \"Детское кресло\")}\r\n      {carOption(order?.isRightWheel, \"Правый руль\")}\r\n    </div>\r\n\r\n    <div className=\"orderPriceBlock\">\r\n      <p className=\"orderPrice\">{order?.price} ₽</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Layout, Pagination} from \"antd\";\r\nimport './OrdersList.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {getOrders} from \"../../../../redux/ordersReducer\";\r\nimport {Order} from \"../../components/Order\";\r\n\r\nexport const OrdersList = () => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const ordersData = useSelector(state => state.orders)\r\n  const {orders, totalCount} = ordersData\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders(currentPage))\r\n  }, [currentPage])\r\n\r\n  const paginationHandler = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Заказы</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      <div className=\"ordersList\">\r\n        {orders.map(order => <Order order={order} key={order.id}/>)}\r\n      </div>\r\n      <Pagination\r\n        total={totalCount}\r\n        pageSize={20}\r\n        current={currentPage}\r\n        showQuickJumper\r\n        showTotal={total => `Всего ${total} заказов`}\r\n        onChange={paginationHandler}\r\n        simple={sizeOfPage.xs}\r\n        size={sizeOfPage.lg ? \"default\" : \"small\"}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","export const carsActions = {\r\n  setCarsPortion: (data) => ({type: \"CARS/SET_CARS_PORTION\", payload: data}),\r\n  setTotalCarsCount: (count) => ({type: \"CARS/CARS_TOTAL_COUNT\", payload: count}),\r\n}","import {carsAPI} from \"../api/restapi\";\r\nimport {carsActions} from \"./actions/carsActions\";\r\n\r\nconst initialState = {\r\n  cars: [],\r\n  totalCount: null,\r\n};\r\n\r\nconst carsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CARS/SET_CARS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        cars: action.payload\r\n      }\r\n    }\r\n    case \"CARS/CARS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getCars = (page) => async (dispatch) => {\r\n  const response = await carsAPI.getCars(page)\r\n  if (!initialState.totalCount) {\r\n    dispatch(carsActions.setTotalCarsCount(response.data.count))\r\n  }\r\n  dispatch(carsActions.setCarsPortion(response.data.data))\r\n}\r\n\r\nexport default carsReducer;","import React from \"react\";\r\nimport {Image} from \"antd\";\r\n\r\nexport const carsColumns = [\r\n  {\r\n    title: 'Категория',\r\n    dataIndex: 'categoryId',\r\n    key: 'categoryId',\r\n    render: categoryId => `${categoryId?.name}`\r\n  },\r\n  {\r\n    title: 'Цвета',\r\n    dataIndex: 'colors',\r\n    key: 'colors',\r\n    render: colors => colors.map((color, index) => {\r\n      return `${color.toUpperCase()} ${index !== colors.length - 1 ? \", \" : \"\"}`\r\n    })\r\n  },\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Номер авто',\r\n    key: 'number',\r\n    dataIndex: 'number',\r\n  },\r\n  {\r\n    title: 'Цена',\r\n    key: 'priceMin',\r\n    dataIndex: 'priceMin',\r\n  },\r\n  {\r\n    title: 'Фото',\r\n    key: 'thumbnail',\r\n    dataIndex: 'thumbnail',\r\n    render: thumbnail => (\r\n      <Image\r\n        src={thumbnail?.path}\r\n        alt=\"carImage\"\r\n        preview={false}\r\n        width={100}\r\n      />\r\n    )\r\n  },\r\n];\r\n\r\nexport const citiesColumns = [\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  }\r\n];\r\n\r\nexport const pointsColumns = [\r\n  {\r\n    title: 'Город',\r\n    dataIndex: 'cityId',\r\n    key: 'cityId',\r\n    render: cityId => cityId?.name\r\n  },\r\n  {\r\n    title: 'Адрес',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'Описание',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  }\r\n];","import React, {useEffect, useState} from \"react\";\r\nimport './CarsTable.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Layout, Table} from \"antd\";\r\nimport {getCars} from \"../../../../redux/carsReducer\";\r\nimport {carsColumns} from \"../../tablesColumns\";\r\n\r\nexport const CarsTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const carsData = useSelector(state => state.cars)\r\n  const {cars, totalCount} = carsData\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getCars(currentPage))\r\n    setLoading(false)\r\n  }, [currentPage])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Автомобили</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      <Table\r\n        bordered\r\n        columns={carsColumns}\r\n        dataSource={cars}\r\n        loading={loading}\r\n        rowKey={car => car.id}\r\n        pagination={{\r\n          total: totalCount - 10, // Из-за какой-то ошибки в базе (безолаберности интернов) там аж 10 пустых записей\r\n          pageSize: 10,\r\n          current: currentPage,\r\n          showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} авто`,\r\n          onChange: page => {\r\n            setCurrentPage(page)\r\n          }\r\n        }}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}\r\n","export const citiesActions = {\r\n  setCitiesPortion: (data) => ({type: \"CITIES/SET_CITIES_PORTION\", payload: data}),\r\n  setTotalCitiesCount: (count) => ({type: \"CITIES/CITIES_TOTAL_COUNT\", payload: count}),\r\n}","import {citiesAPI} from \"../api/restapi\";\r\nimport {citiesActions} from \"./actions/citiesActions\";\r\n\r\nconst initialState = {\r\n  cities: [],\r\n  totalCount: null,\r\n};\r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CITIES/SET_CITIES_PORTION\": {\r\n      return {\r\n        ...state,\r\n        cities: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/CITIES_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getCities = () => async (dispatch) => {\r\n  const response = await citiesAPI.getCities()\r\n  if (!initialState.totalCount) {\r\n    dispatch(citiesActions.setTotalCitiesCount(response.data.count))\r\n  }\r\n  dispatch(citiesActions.setCitiesPortion(response.data.data))\r\n}\r\n\r\nexport default citiesReducer;","import React, {useEffect, useState} from \"react\";\r\nimport {Layout, Table} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCities} from \"../../../../redux/citiesReducer\";\r\nimport {citiesColumns} from \"../../tablesColumns\";\r\n\r\nexport const CitiesTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const citiesData = useSelector(state => state.cities)\r\n  const {cities, totalCount} = citiesData\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getCities())\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Города</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      <Table\r\n        bordered\r\n        columns={citiesColumns}\r\n        dataSource={cities}\r\n        loading={loading}\r\n        rowKey={city => city.id}\r\n        pagination={{\r\n          total: totalCount,\r\n          showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} городов`,\r\n        }}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","export const pointsActions = {\r\n  setPointsPortion: (data) => ({type: \"POINTS/SET_POINTS_PORTION\", payload: data}),\r\n  setTotalPointsCount: (count) => ({type: \"POINTS/POINTS_TOTAL_COUNT\", payload: count}),\r\n}","import {pointsAPI} from \"../api/restapi\";\r\nimport {pointsActions} from \"./actions/pointsActions\";\r\n\r\nconst initialState = {\r\n  points: [],\r\n  totalCount: null,\r\n};\r\n\r\nconst pointsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"POINTS/SET_POINTS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        points: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/POINTS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getPoints = () => async (dispatch) => {\r\n  const response = await pointsAPI.getPoints()\r\n  if (!initialState.totalCount) {\r\n    dispatch(pointsActions.setTotalPointsCount(response.data.count))\r\n  }\r\n  dispatch(pointsActions.setPointsPortion(response.data.data))\r\n}\r\n\r\nexport default pointsReducer;","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Layout, Table} from \"antd\";\r\nimport {getPoints} from \"../../../../redux/pointsReducer\";\r\nimport {pointsColumns} from \"../../tablesColumns\";\r\n\r\nexport const PointsTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const pointsData = useSelector(state => state.points)\r\n  const {points, totalCount} = pointsData\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getPoints())\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Пункты</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      <Table\r\n        bordered\r\n        columns={pointsColumns}\r\n        dataSource={points}\r\n        loading={loading}\r\n        rowKey={point => point.id}\r\n        pagination={{\r\n          total: totalCount,\r\n          showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} пунктов`,\r\n        }}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","import React, {useState} from \"react\";\r\nimport {Avatar, Badge, Col, Layout, Menu, Row} from 'antd';\r\nimport {BellFilled, CarOutlined, EditOutlined, EnvironmentOutlined, HomeOutlined} from \"@ant-design/icons\";\r\nimport './AdminPage.css'\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport logo from '../../assets/Logo Icon.svg'\r\nimport avatar from '../../assets/avatar.png'\r\nimport {OrdersList} from \"./tabs/orders/OrdersList\";\r\nimport {CarsTable} from \"./tabs/cars/CarsTable\";\r\nimport {CitiesTable} from \"./tabs/cities/CitiesTable\";\r\nimport {PointsTable} from \"./tabs/points/PointsTable\";\r\n\r\nexport const AdminPage = () => {\r\n  const [currentMenuItem, setCurrentMenuItem] = useState(1)\r\n\r\n  const onSelectHandler = (e) => {\r\n    setCurrentMenuItem(Number(e.key))\r\n  }\r\n\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  let siderWidth = 0\r\n  if (sizeOfPage.xs) siderWidth = 35\r\n  else if (sizeOfPage.md) siderWidth = 200\r\n\r\n  return <Layout>\r\n    <Row className=\"adminPageHeader\">\r\n      <Col\r\n        xs={{span: 13}}\r\n        md={{span: 6}}\r\n        lg={{span: 5}}\r\n        xl={{span: 3}}\r\n        className=\"adminPageCompany\"\r\n      >\r\n        <img\r\n          src={logo}\r\n          alt=\"logo\"\r\n          className=\"logoImg\"\r\n        />\r\n        <p className=\"logoTitle\">Need For Drive</p>\r\n      </Col>\r\n      <Col\r\n        xs={{offset: 5, span: 3}}\r\n        md={{offset: 14, span: 2}}\r\n        lg={{offset: 15}}\r\n        xl={{offset: 19, span: 1}}\r\n        className=\"adminPageHeaderNotification\"\r\n      >\r\n        <Badge\r\n          count={2}\r\n          size=\"small\"\r\n        >\r\n          <BellFilled className=\"notificationIcon\"/>\r\n        </Badge>\r\n      </Col>\r\n      <Col\r\n        xs={{span: 3}}\r\n        md={{span: 2}}\r\n        xl={{span: 1}}\r\n        className=\"adminUserAccount\"\r\n      >\r\n        <Avatar src={avatar}/>\r\n      </Col>\r\n    </Row>\r\n\r\n    <Layout>\r\n      <Layout.Sider\r\n        width={siderWidth}\r\n        className=\"adminPageSider\"\r\n      >\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          style={{height: '100%', borderRight: 0}}\r\n          onSelect={onSelectHandler}\r\n        >\r\n          <Menu.Item\r\n            key=\"1\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EditOutlined/>}\r\n          >Список заказов</Menu.Item>\r\n          <Menu.Item\r\n            key=\"2\"\r\n            className=\"sideMenuItem\"\r\n            icon={<CarOutlined/>}\r\n          >Таблица авто</Menu.Item>\r\n          <Menu.Item\r\n            key=\"3\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EnvironmentOutlined/>}\r\n          >Таблица городов</Menu.Item>\r\n          <Menu.Item\r\n            key=\"4\"\r\n            className=\"sideMenuItem\"\r\n            icon={<HomeOutlined/>}\r\n          >Таблица пунктов</Menu.Item>\r\n        </Menu>\r\n      </Layout.Sider>\r\n\r\n      <Layout className=\"adminPageContainer\">\r\n        {currentMenuItem === 1 && <OrdersList/>}\r\n        {currentMenuItem === 2 && <CarsTable/>}\r\n        {currentMenuItem === 3 && <CitiesTable/>}\r\n        {currentMenuItem === 4 && <PointsTable/>}\r\n      </Layout>\r\n\r\n    </Layout>\r\n  </Layout>\r\n}","import axios from \"axios\";\r\n\r\nconst clientSecret = \"4cbcea96de\"\r\nconst alphabet = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\nconst getBasicHash = () => {\r\n  let rs = \"\";\r\n  while (rs.length < 7) {\r\n    rs += alphabet[Math.floor(Math.random() * alphabet.length)];\r\n  }\r\n  return `Basic ${window.btoa(`${rs}:${clientSecret}`)}`\r\n}\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": getBasicHash()\r\n  },\r\n});\r\n\r\nexport const authAPI = {\r\n  postLogin(login, password) {\r\n    const body = {\r\n      username: login,\r\n      password\r\n    }\r\n    return instance.post(`auth/login`, body).catch(r => {\r\n      return {...r, status: 401}\r\n    })\r\n  }\r\n}","export const authActions = {\r\n  setAuthData: (data) => ({type: \"AUTH/SET_AUTH_DATA\", payload: data}),\r\n  setAuthStatus: (status) => ({type: \"AUTH/SET_AUTH_STATUS\", payload: status})\r\n}","import {authAPI} from \"../api/api\";\r\nimport {authActions} from \"./actions/authActions\";\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  authStatus: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"AUTH/SET_AUTH_DATA\": {\r\n      localStorage.setItem(\"access_token\", action.payload.access_token)\r\n      localStorage.setItem(\"refresh_token\", action.payload.refresh_token)\r\n\r\n      return {\r\n        ...state,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case \"AUTH/SET_AUTH_STATUS\": {\r\n      return {\r\n        ...state,\r\n        authStatus: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const postLogin = (login, password) => async (dispatch) => {\r\n  const response = await authAPI.postLogin(login, password)\r\n  if (response.status === 200) {\r\n    dispatch(authActions.setAuthData(response.data))\r\n  } else {\r\n    dispatch(authActions.setAuthStatus(response.status))\r\n  }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport './Login.css'\r\nimport {Button, Form, Input, Space} from \"antd\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {postLogin} from \"../../redux/authReducer\";\r\nimport logo from '../../assets/Logo Icon.svg'\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onFinish = (values) => {\r\n    dispatch(postLogin(values.username, values.password))\r\n  };\r\n\r\n  const authStatus = useSelector(state => state.auth.authStatus)\r\n\r\n  return <div className=\"loginContainer\">\r\n    <div className=\"loginContent\">\r\n      <Space\r\n        className=\"loginHeader\"\r\n        size=\"middle\"\r\n      >\r\n        <img\r\n          className=\"logo\"\r\n          src={logo}\r\n          alt=\"logo\"\r\n        />\r\n        <p className=\"company\">Need For Drive</p>\r\n      </Space>\r\n      <div className=\"loginCard\">\r\n        <p className=\"loginTitle\">Вход</p>\r\n        <Form\r\n          name=\"loginForm\"\r\n          onFinish={onFinish}\r\n          initialValues={{remember: true}} // intern intern-S!\r\n        >\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"username\"\r\n            rules={[{required: true, message: 'Введите логин'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined/>}\r\n              placeholder=\"Username\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"password\"\r\n            rules={[{required: true, message: 'Введите пароль'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n            help={authStatus === 401 ? \"Неверный логин или пароль\" : null}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined/>}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <div className=\"loginCardFooter\">\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a>Запросить доступ</a>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"submitButton\"\r\n            >Войти</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","import React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AdminPage} from \"./pages/adminPage/AdminPage\";\r\nimport {Login} from \"./pages/loginPage/Login\";\r\n\r\nconst App = () => {\r\n  const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n  return <Switch>\r\n    <Route\r\n      exact\r\n      path=\"/\"\r\n      render={() => <Redirect to=\"/admin\"/>}\r\n    />\r\n    <Route\r\n      path=\"/admin\"\r\n      render={() => {\r\n        return isAuth ? <AdminPage/> : <Redirect to=\"/login\"/>\r\n      }}\r\n    />\r\n    <Route\r\n      path=\"/login\"\r\n      render={() => {\r\n        return !isAuth ? <Login/> : <Redirect to=\"/admin\"/>\r\n      }}\r\n    />\r\n  </Switch>\r\n}\r\n\r\nexport default App\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport authReducer from \"./authReducer\";\r\nimport ordersReducer from \"./ordersReducer\";\r\nimport carsReducer from \"./carsReducer\";\r\nimport citiesReducer from \"./citiesReducer\";\r\nimport pointsReducer from \"./pointsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  orders: ordersReducer,\r\n  cars: carsReducer,\r\n  cities: citiesReducer,\r\n  points: pointsReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from './App';\r\nimport store from \"./redux/reduxStore\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}