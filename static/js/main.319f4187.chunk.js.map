{"version":3,"sources":["assets/Logo Icon.svg","assets/avatar.png","api/restapi.js","redux/actions/ordersActions.js","redux/ordersReducer.js","pages/adminPage/components/Order.jsx","pages/adminPage/tabs/orders/OrdersList.jsx","pages/adminPage/AdminPage.jsx","api/api.js","redux/actions/authActions.js","pages/loginPage/Login.jsx","components/PrivateRoute.jsx","App.jsx","redux/authReducer.js","redux/reduxStore.js","reportWebVitals.js","index.jsx"],"names":["instance","axios","create","baseURL","headers","sessionStorage","getItem","ordersAPI","page","limit","get","ordersActions","data","type","payload","count","initialState","orders","totalCount","ordersReducer","state","action","carOption","condition","text","className","CheckSquareOutlined","CloseSquareOutlined","Order","props","order","dateFrom","Date","dateTo","src","carId","thumbnail","path","alt","name","cityId","pointId","address","toLocaleString","color","isFullTank","isNeedChildChair","isRightWheel","price","OrdersList","useState","currentPage","setCurrentPage","dispatch","useDispatch","ordersData","useSelector","useEffect","a","response","sizeOfPage","useBreakpoint","Content","map","id","total","pageSize","current","showQuickJumper","showTotal","onChange","simple","xs","size","lg","AdminPage","currentMenuItem","setCurrentMenuItem","siderWidth","md","span","xl","logo","offset","BellFilled","avatar","Sider","width","mode","defaultSelectedKeys","defaultOpenKeys","style","height","borderRight","onSelect","e","Number","key","Item","icon","EditOutlined","alphabet","rs","length","Math","floor","random","window","btoa","getBasicHash","authAPI","login","password","body","username","post","authActions","status","Login","authStatus","auth","onFinish","values","setItem","access_token","refresh_token","initialValues","remember","rules","required","message","validateStatus","prefix","UserOutlined","placeholder","allowClear","help","LockOutlined","htmlType","PrivateRoute","redirect","isAuth","children","render","to","App","exact","authReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"oZAAe,MAA0B,sCCA1B,MAA0B,mC,oECEnCA,EAAWC,IAAMC,OAAO,CAC5BC,QAAS,0CACTC,QAAS,CACP,+BAAgC,2BAChC,8BAA+B,IAC/B,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BC,eAAeC,QAAQ,oBAIzCC,EAAY,WACU,IAAvBC,EAAsB,uDAAf,EAAGC,EAAY,uDAAJ,GAC1B,OAAOT,EAASU,IAAT,wBAA8BF,EAA9B,kBAA4CC,KCd1CE,EACO,SAACC,GAAD,MAAW,CAACC,KAAM,4BAA6BC,QAASF,IAD/DD,EAEU,SAACI,GAAD,MAAY,CAACF,KAAM,4BAA6BC,QAASC,ICC1EC,EAAe,CACnBC,OAAQ,GACRC,WAAY,MA8BCC,EA3BO,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACtD,OAAQA,EAAOR,MACb,IAAK,4BACH,OAAO,2BACFO,GADL,IAEEH,OAAQI,EAAOP,UAGnB,IAAK,4BACH,OAAO,2BACFM,GADL,IAEEF,WAAYG,EAAOP,UAGvB,QACE,OAAOM,I,kCClBPE,EAAY,SAACC,EAAWC,GAC5B,OAAOD,EACH,sBAAKE,UAAU,iBAAf,UACA,cAACC,EAAA,EAAD,CAAqBD,UAAU,gBAC/B,4BAAID,OAEJ,sBAAKC,UAAU,iBAAf,UACA,cAACE,EAAA,EAAD,CAAqBF,UAAU,mBAC/B,mBAAGA,UAAU,qBAAb,SAAmCD,QAI5BI,EAAQ,SAACC,GAAW,IAAD,QACvBC,EAASD,EAATC,MACDC,EAAW,IAAIC,KAAJ,OAASF,QAAT,IAASA,OAAT,EAASA,EAAOC,UAC3BE,EAAS,IAAID,KAAJ,OAASF,QAAT,IAASA,OAAT,EAASA,EAAOG,QAE/B,OAAO,sBAAKR,UAAU,eAAf,UACL,qBAAKA,UAAU,kBAAf,SACE,qBACES,IAAG,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAOK,aAAT,aAAE,EAAcC,UAAUC,KAC7BC,IAAI,WACJb,UAAU,oBAId,sBAAKA,UAAU,iBAAf,UACE,8BAAG,sCAAOK,QAAP,IAAOA,GAAP,UAAOA,EAAOK,aAAd,aAAO,EAAcI,OAAxB,WAAuC,sCAAOT,QAAP,IAAOA,GAAP,UAAOA,EAAOU,cAAd,aAAO,EAAeD,OAA7D,YAA4ET,QAA5E,IAA4EA,GAA5E,UAA4EA,EAAOW,eAAnF,aAA4E,EAAgBC,WAC5F,8BAAIX,EAASY,iBAAb,WAAkCV,EAAOU,oBACzC,2DAAS,sCAAOb,QAAP,IAAOA,OAAP,EAAOA,EAAOc,cAGzB,sBAAKnB,UAAU,oBAAf,UACGH,EAAS,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAOe,WAAY,2DAC7BvB,EAAS,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAOgB,iBAAkB,mFACnCxB,EAAS,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAOiB,aAAc,oEAGlC,qBAAKtB,UAAU,kBAAf,SACE,oBAAGA,UAAU,aAAb,iBAA2BK,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAOkB,MAAlC,mBCpCOC,EAAa,WACxB,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAWC,cAEXC,EAAaC,aAAY,SAAApC,GAAK,OAAIA,EAAMH,UACvCA,EAAsBsC,EAAtBtC,OAAQC,EAAcqC,EAAdrC,WAEfuC,qBAAU,WFWa,IAACjD,EEVtB6C,GFUsB7C,EEVH2C,EFUE,uCAAU,WAAOE,GAAP,eAAAK,EAAA,sEACVnD,EAAoBC,GADV,OAC3BmD,EAD2B,OAE5B3C,EAAaE,YAChBmC,EAAS1C,EAAkCgD,EAAS/C,KAAKG,QAE3DsC,EAAS1C,EAA+BgD,EAAS/C,KAAKA,OALrB,2CAAV,0DETpB,CAACuC,IAEJ,IAIMS,EAAaC,cAEnB,OAAO,qCACL,oBAAIpC,UAAU,YAAd,kDACA,eAAC,IAAOqC,QAAR,CAAgBrC,UAAU,oBAA1B,UACE,qBAAKA,UAAU,aAAf,SACGR,EAAO8C,KAAI,SAAAjC,GAAK,OAAI,cAAC,EAAD,CAAOA,MAAOA,GAAYA,EAAMkC,SAEvD,cAAC,IAAD,CACEC,MAAO/C,EACPgD,SAAU,GACVC,QAAShB,EACTiB,iBAAe,EACfC,UAAW,SAAAJ,GAAK,+CAAaA,EAAb,gDAChBK,SAlBoB,SAAC9D,GACzB4C,EAAe5C,IAkBX+D,OAAQX,EAAWY,GACnBC,KAAMb,EAAWc,GAAK,UAAY,iBC/B7BC,EAAY,WACvB,MAA8CzB,mBAAS,GAAvD,mBAAO0B,EAAP,KAAwBC,EAAxB,KAMMjB,EAAaC,cAEfiB,EAAa,EAIjB,OAHIlB,EAAWY,GAAIM,EAAa,GACvBlB,EAAWmB,KAAID,EAAa,KAE9B,eAAC,IAAD,WACL,eAAC,IAAD,CAAKrD,UAAU,kBAAf,UACE,eAAC,IAAD,CACE+C,GAAI,CAACQ,KAAM,IACXD,GAAI,CAACC,KAAM,GACXN,GAAI,CAACM,KAAM,GACXC,GAAI,CAACD,KAAM,GACXvD,UAAU,mBALZ,UAOE,qBACES,IAAKgD,EACL5C,IAAI,OACJb,UAAU,YAEZ,mBAAGA,UAAU,YAAb,+BAEF,cAAC,IAAD,CACE+C,GAAI,CAACW,OAAQ,EAAGH,KAAM,GACtBD,GAAI,CAACI,OAAQ,GAAIH,KAAM,GACvBN,GAAI,CAACS,OAAQ,IACbF,GAAI,CAACE,OAAQ,GAAIH,KAAM,GACvBvD,UAAU,8BALZ,SAOE,cAAC,IAAD,CACEV,MAAO,EACP0D,KAAK,QAFP,SAIE,cAACW,EAAA,EAAD,CAAY3D,UAAU,yBAG1B,cAAC,IAAD,CACE+C,GAAI,CAACQ,KAAM,GACXD,GAAI,CAACC,KAAM,GACXC,GAAI,CAACD,KAAM,GACXvD,UAAU,mBAJZ,SAME,cAAC,IAAD,CAAQS,IAAKmD,SAIjB,eAAC,IAAD,WACE,cAAC,IAAOC,MAAR,CACEC,MAAOT,EACPrD,UAAU,iBAFZ,SAIE,eAAC,IAAD,CACE+D,KAAK,SACLC,oBAAqB,CAAC,KACtBC,gBAAiB,CAAC,QAClBC,MAAO,CAACC,OAAQ,OAAQC,YAAa,GACrCC,SA5DgB,SAACC,GACvBlB,EAAmBmB,OAAOD,EAAEE,OAsDxB,UAOE,cAAC,IAAKC,KAAN,CAEEzE,UAAU,eACV0E,KAAM,cAACC,EAAA,EAAD,IAHR,4FACM,KAIN,cAAC,IAAKF,KAAN,CAAmBzE,UAAU,eAA7B,oBAAe,KACf,cAAC,IAAKyE,KAAN,CAAmBzE,UAAU,eAA7B,oBAAe,KACf,cAAC,IAAKyE,KAAN,CAAmBzE,UAAU,eAA7B,oBAAe,UAInB,cAAC,IAAD,CAAQA,UAAU,qBAAlB,SACuB,IAApBmD,GAAyB,cAAC,EAAD,a,+DCnF5ByB,EAAW,uCAUXrG,EAAWC,IAAMC,OAAO,CAC5BC,QAAS,0CACTC,QAAS,CACP,+BAAgC,2BAChC,8BAA+B,IAC/B,eAAgB,mBAChB,cAdiB,WAEnB,IADA,IAAIkG,EAAK,GACFA,EAAGC,OAAS,GACjBD,GAAMD,EAASG,KAAKC,MAAMD,KAAKE,SAAWL,EAASE,SAErD,MAAM,SAAN,OAAgBI,OAAOC,KAAP,UAAeN,EAAf,YARG,gBAiBAO,MAIRC,EAAU,SACXC,EAAOC,GACf,IAAMC,EAAO,CACXC,SAAUH,EACVC,YAEF,OAAOhH,EAASmH,KAAT,aAA4BF,IC3B1BG,EACE,SAACxG,GAAD,MAAW,CAACC,KAAM,qBAAsBC,QAASF,IADnDwG,EAEI,SAACC,GAAD,MAAa,CAACxG,KAAM,uBAAwBC,QAASuG,ICIzDC,EAAQ,WACnB,IAAMjE,EAAWC,cAMXiE,EAAa/D,aAAY,SAAApC,GAAK,OAAIA,EAAMoG,KAAKD,cAEnD,OAAO,qBAAK9F,UAAU,iBAAf,SACL,sBAAKA,UAAU,eAAf,UACE,eAAC,IAAD,CACEA,UAAU,cACVgD,KAAK,SAFP,UAIE,qBACEhD,UAAU,OACVS,IAAKgD,EACL5C,IAAI,SAEN,mBAAGb,UAAU,UAAb,+BAEF,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,aAAb,sCACA,eAAC,IAAD,CACEc,KAAK,YACLkF,SAvBS,SAACC,GDJK,IAACX,EAAOC,ECK7B3D,GDLsB0D,ECKHW,EAAOR,SDLGF,ECKOU,EAAOV,SDLtB,uCAAqB,WAAO3D,GAAP,eAAAK,EAAA,+EAEnBoD,EAAkBC,EAAOC,GAFN,OAEpCrD,EAFoC,OAG1CtD,eAAesH,QAAQ,eAAgBhE,EAAS/C,KAAKgH,cACrDvH,eAAesH,QAAQ,gBAAiBhE,EAAS/C,KAAKiH,eACtDxE,EAAS+D,EAAwBzD,EAAS/C,OALA,gDAO1CyC,EAAS+D,EAA0B,KAAEzD,SAAS0D,SAPJ,yDAArB,yDC4BfS,cAAe,CAACC,UAAU,GAH5B,UAKE,cAAC,IAAK7B,KAAN,CACEzE,UAAU,WACVc,KAAK,WACLyF,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,8EAClCC,eAA+B,MAAfZ,EAAqB,QAAU,KAJjD,SAME,cAAC,IAAD,CACEa,OAAQ,cAACC,EAAA,EAAD,IACRC,YAAY,WACZC,YAAU,MAId,cAAC,IAAKrC,KAAN,CACEzE,UAAU,WACVc,KAAK,WACLyF,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,oFAClCC,eAA+B,MAAfZ,EAAqB,QAAU,KAC/CiB,KAAqB,MAAfjB,EAAqB,0IAA8B,KAL3D,SAOE,cAAC,IAAD,CACEa,OAAQ,cAACK,EAAA,EAAD,IACR5H,KAAK,WACLyH,YAAY,WACZC,YAAU,MAId,sBAAK9G,UAAU,kBAAf,UAEE,4HACA,cAAC,IAAD,CACEZ,KAAK,UACL6H,SAAS,SACTjH,UAAU,eAHZ,2DChECkH,EAAe,SAAC9G,GAC3B,IAAOQ,EAAoCR,EAApCQ,KAAMuG,EAA8B/G,EAA9B+G,SAAUC,EAAoBhH,EAApBgH,OAAQC,EAAYjH,EAAZiH,SAE/B,OAAO,cAAC,IAAD,CACLzG,KAAMA,EACN0G,OAAQ,WACN,OAAOF,EAASC,EAAW,cAAC,IAAD,CAAUE,GAAIJ,QC0BhCK,GA5BH,WACV,IAAMJ,EAASrF,aAAY,SAAApC,GAAK,OAAIA,EAAMoG,KAAKqB,UAE/C,OAAO,eAAC,IAAD,WACL,cAAC,IAAD,CACEK,OAAK,EACL7G,KAAK,IACL0G,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAG,cAG7B,cAAC,EAAD,CACE3G,KAAK,SACLuG,SAAS,SACTC,OAAQA,EAHV,SAKE,cAAC,EAAD,MAGF,cAAC,EAAD,CACExG,KAAK,SACLuG,SAAS,SACTC,QAASA,EAHX,SAKE,cAAC,EAAD,U,oBC/BA7H,GAAe,CACnB6H,QAAQ,EACRtB,WAAY,MAsBC4B,GAnBK,WAAmC,IAAlC/H,EAAiC,uDAAzBJ,GAAcK,EAAW,uCACpD,OAAQA,EAAOR,MACb,IAAK,qBACH,OAAO,2BACFO,GADL,IAEEyH,QAAQ,IAGZ,IAAK,uBACH,OAAO,2BACFzH,GADL,IAEEmG,WAAYlG,EAAOP,UAGvB,QACE,OAAOM,ICfPgI,GAAcC,aAAgB,CAClC7B,KAAM2B,GACNlI,OAAQE,IAKKmI,GAFDC,aAAYH,GAAaI,aAAgBC,OCExCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASpB,OACP,cAAC,IAAD,CAAUO,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJc,SAASC,eAAe,SAG1BX,O","file":"static/js/main.319f4187.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo Icon.830257bf.svg\";","export default __webpack_public_path__ + \"static/media/avatar.8845cada.png\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `Bearer ${sessionStorage.getItem(\"access_token\")}`\r\n  },\r\n});\r\n\r\nexport const ordersAPI = {\r\n  getOrders(page = 1, limit = 20) {\r\n    return instance.get(`db/order?page=${page}&limit=${limit}`)\r\n  }\r\n}","export const ordersActions = {\r\n  setOrdersPortion: (data) => ({type: \"ORDERS/SET_ORDERS_PORTION\", payload: data}),\r\n  setTotalOrdersCount: (count) => ({type: \"ORDERS/ORDERS_TOTAL_COUNT\", payload: count}),\r\n}","import {ordersAPI} from \"../api/restapi\";\r\nimport {ordersActions} from \"./actions/ordersActions\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  totalCount: null\r\n};\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ORDERS/SET_ORDERS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        orders: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/ORDERS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getOrders = (page) => async (dispatch) => {\r\n  const response = await ordersAPI.getOrders(page)\r\n  if (!initialState.totalCount) {\r\n    dispatch(ordersActions.setTotalOrdersCount(response.data.count))\r\n  }\r\n  dispatch(ordersActions.setOrdersPortion(response.data.data))\r\n}\r\n\r\nexport default ordersReducer;","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport './Order.css'\r\nimport {CheckSquareOutlined, CloseSquareOutlined} from \"@ant-design/icons\";\r\n\r\nconst carOption = (condition, text) => {\r\n  return condition\r\n    ? <div className=\"orderCarOption\">\r\n      <CheckSquareOutlined className=\"isCarOption\"/>\r\n      <p>{text}</p>\r\n    </div>\r\n    : <div className=\"orderCarOption\">\r\n      <CloseSquareOutlined className=\"isNotCarOption\"/>\r\n      <p className=\"isNotCarOptionText\">{text}</p>\r\n    </div>\r\n}\r\n\r\nexport const Order = (props) => {\r\n  const {order} = props\r\n  const dateFrom = new Date(order?.dateFrom)\r\n  const dateTo = new Date(order?.dateTo)\r\n\r\n  return <div className=\"orderContent\">\r\n    <div className=\"orderImageBlock\">\r\n      <img\r\n        src={order?.carId?.thumbnail.path}\r\n        alt=\"carImage\"\r\n        className=\"orderCarImage\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"orderInfoBlock\">\r\n      <p><span>{order?.carId?.name}</span> в <span>{order?.cityId?.name}</span>, {order?.pointId?.address}</p>\r\n      <p>{dateFrom.toLocaleString()} — {dateTo.toLocaleString()}</p>\r\n      <p>Цвет: <span>{order?.color}</span></p>\r\n    </div>\r\n\r\n    <div className=\"orderOptionsBlock\">\r\n      {carOption(order?.isFullTank, \"Полный бак\")}\r\n      {carOption(order?.isNeedChildChair, \"Детское кресло\")}\r\n      {carOption(order?.isRightWheel, \"Правый руль\")}\r\n    </div>\r\n\r\n    <div className=\"orderPriceBlock\">\r\n      <p className=\"orderPrice\">{order?.price} ₽</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Layout, Pagination} from \"antd\";\r\nimport './OrdersList.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {getOrders} from \"../../../../redux/ordersReducer\";\r\nimport {Order} from \"../../components/Order\";\r\n\r\nexport const OrdersList = () => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const ordersData = useSelector(state => state.orders)\r\n  const {orders, totalCount} = ordersData\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders(currentPage))\r\n  }, [currentPage])\r\n\r\n  const paginationHandler = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Заказы</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      <div className=\"ordersList\">\r\n        {orders.map(order => <Order order={order} key={order.id}/>)}\r\n      </div>\r\n      <Pagination\r\n        total={totalCount}\r\n        pageSize={20}\r\n        current={currentPage}\r\n        showQuickJumper\r\n        showTotal={total => `Всего ${total} заказов`}\r\n        onChange={paginationHandler}\r\n        simple={sizeOfPage.xs}\r\n        size={sizeOfPage.lg ? \"default\" : \"small\"}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","import React, {useState} from \"react\";\r\nimport {Avatar, Badge, Col, Layout, Menu, Row} from 'antd';\r\nimport {BellFilled, EditOutlined} from \"@ant-design/icons\";\r\nimport './AdminPage.css'\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport logo from '../../assets/Logo Icon.svg'\r\nimport avatar from '../../assets/avatar.png'\r\nimport {OrdersList} from \"./tabs/orders/OrdersList\";\r\n\r\nexport const AdminPage = () => {\r\n  const [currentMenuItem, setCurrentMenuItem] = useState(1)\r\n\r\n  const onSelectHandler = (e) => {\r\n    setCurrentMenuItem(Number(e.key))\r\n  }\r\n\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  let siderWidth = 0\r\n  if (sizeOfPage.xs) siderWidth = 35\r\n  else if (sizeOfPage.md) siderWidth = 200\r\n\r\n  return <Layout>\r\n    <Row className=\"adminPageHeader\">\r\n      <Col\r\n        xs={{span: 13}}\r\n        md={{span: 6}}\r\n        lg={{span: 5}}\r\n        xl={{span: 3}}\r\n        className=\"adminPageCompany\"\r\n      >\r\n        <img\r\n          src={logo}\r\n          alt=\"logo\"\r\n          className=\"logoImg\"\r\n        />\r\n        <p className=\"logoTitle\">Need For Drive</p>\r\n      </Col>\r\n      <Col\r\n        xs={{offset: 5, span: 3}}\r\n        md={{offset: 14, span: 2}}\r\n        lg={{offset: 15}}\r\n        xl={{offset: 19, span: 1}}\r\n        className=\"adminPageHeaderNotification\"\r\n      >\r\n        <Badge\r\n          count={2}\r\n          size=\"small\"\r\n        >\r\n          <BellFilled className=\"notificationIcon\"/>\r\n        </Badge>\r\n      </Col>\r\n      <Col\r\n        xs={{span: 3}}\r\n        md={{span: 2}}\r\n        xl={{span: 1}}\r\n        className=\"adminUserAccount\"\r\n      >\r\n        <Avatar src={avatar}/>\r\n      </Col>\r\n    </Row>\r\n\r\n    <Layout>\r\n      <Layout.Sider\r\n        width={siderWidth}\r\n        className=\"adminPageSider\"\r\n      >\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          style={{height: '100%', borderRight: 0}}\r\n          onSelect={onSelectHandler}\r\n        >\r\n          <Menu.Item\r\n            key=\"1\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EditOutlined/>}\r\n          >Список заказов</Menu.Item>\r\n          <Menu.Item key=\"2\" className=\"sideMenuItem\">option2</Menu.Item>\r\n          <Menu.Item key=\"3\" className=\"sideMenuItem\">option3</Menu.Item>\r\n          <Menu.Item key=\"4\" className=\"sideMenuItem\">option4</Menu.Item>\r\n        </Menu>\r\n      </Layout.Sider>\r\n\r\n      <Layout className=\"adminPageContainer\">\r\n        {currentMenuItem === 1 && <OrdersList/>}\r\n      </Layout>\r\n\r\n    </Layout>\r\n  </Layout>\r\n}","import axios from \"axios\";\r\n\r\nconst clientSecret = \"4cbcea96de\"\r\nconst alphabet = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\nconst getBasicHash = () => {\r\n  let rs = \"\";\r\n  while (rs.length < 7) {\r\n    rs += alphabet[Math.floor(Math.random() * alphabet.length)];\r\n  }\r\n  return `Basic ${window.btoa(`${rs}:${clientSecret}`)}`\r\n}\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": getBasicHash()\r\n  },\r\n});\r\n\r\nexport const authAPI = {\r\n  postLogin(login, password) {\r\n    const body = {\r\n      username: login,\r\n      password\r\n    }\r\n    return instance.post(`auth/login`, body)\r\n  }\r\n}","import {authAPI} from \"../../api/api\";\r\n\r\nexport const authActions = {\r\n  setAuthData: (data) => ({type: \"AUTH/SET_AUTH_DATA\", payload: data}),\r\n  setAuthStatus: (status) => ({type: \"AUTH/SET_AUTH_STATUS\", payload: status})\r\n}\r\n\r\nexport const postLogin = (login, password) => async (dispatch) => {\r\n  try {\r\n    const response = await authAPI.postLogin(login, password)\r\n    sessionStorage.setItem(\"access_token\", response.data.access_token)\r\n    sessionStorage.setItem(\"refresh_token\", response.data.refresh_token)\r\n    dispatch(authActions.setAuthData(response.data))\r\n  } catch (e) {\r\n    dispatch(authActions.setAuthStatus(e.response.status))\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './Login.css'\r\nimport {Button, Form, Input, Space} from \"antd\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport logo from '../../assets/Logo Icon.svg'\r\nimport {postLogin} from \"../../redux/actions/authActions\";\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onFinish = (values) => {\r\n    dispatch(postLogin(values.username, values.password))\r\n  };\r\n\r\n  const authStatus = useSelector(state => state.auth.authStatus)\r\n\r\n  return <div className=\"loginContainer\">\r\n    <div className=\"loginContent\">\r\n      <Space\r\n        className=\"loginHeader\"\r\n        size=\"middle\"\r\n      >\r\n        <img\r\n          className=\"logo\"\r\n          src={logo}\r\n          alt=\"logo\"\r\n        />\r\n        <p className=\"company\">Need For Drive</p>\r\n      </Space>\r\n      <div className=\"loginCard\">\r\n        <p className=\"loginTitle\">Вход</p>\r\n        <Form\r\n          name=\"loginForm\"\r\n          onFinish={onFinish}\r\n          initialValues={{remember: true}} // intern intern-S!\r\n        >\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"username\"\r\n            rules={[{required: true, message: 'Введите логин'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined/>}\r\n              placeholder=\"Username\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"password\"\r\n            rules={[{required: true, message: 'Введите пароль'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n            help={authStatus === 401 ? \"Неверный логин или пароль\" : null}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined/>}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <div className=\"loginCardFooter\">\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a>Запросить доступ</a>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"submitButton\"\r\n            >Войти</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = (props) => {\r\n  const {path, redirect, isAuth, children} = props\r\n\r\n  return <Route\r\n    path={path}\r\n    render={() => {\r\n      return isAuth ? children : <Redirect to={redirect}/>\r\n    }}\r\n  />\r\n}","import React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AdminPage} from \"./pages/adminPage/AdminPage\";\r\nimport {Login} from \"./pages/loginPage/Login\";\r\nimport {PrivateRoute} from \"./components/PrivateRoute\";\r\n\r\nconst App = () => {\r\n  const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n  return <Switch>\r\n    <Route\r\n      exact\r\n      path=\"/\"\r\n      render={() => <Redirect to=\"/admin\"/>}\r\n    />\r\n\r\n    <PrivateRoute\r\n      path=\"/admin\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <AdminPage/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/login\"\r\n      redirect=\"/admin\"\r\n      isAuth={!isAuth}\r\n    >\r\n      <Login/>\r\n    </PrivateRoute>\r\n  </Switch>\r\n}\r\n\r\nexport default App\r\n","const initialState = {\r\n  isAuth: false,\r\n  authStatus: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"AUTH/SET_AUTH_DATA\": {\r\n      return {\r\n        ...state,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case \"AUTH/SET_AUTH_STATUS\": {\r\n      return {\r\n        ...state,\r\n        authStatus: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport authReducer from \"./authReducer\";\r\nimport ordersReducer from \"./ordersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  orders: ordersReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from './App';\r\nimport store from \"./redux/reduxStore\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}