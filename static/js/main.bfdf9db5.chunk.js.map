{"version":3,"sources":["pages/adminPage/components/Order.jsx","api/restapi.js","redux/actions/utilsActions.js","redux/actions/ordersActions.js","redux/actions/citiesActions.js","pages/adminPage/tabs/orders/OrdersFilterForm.jsx","pages/adminPage/tabs/orders/OrdersList.jsx","assets/Logo Icon.svg","assets/avatar.png","pages/adminPage/components/AdminPageHeader.jsx","redux/actions/carsActions.js","redux/actions/pointsActions.js","pages/adminPage/tablesColumns.jsx","pages/adminPage/components/SorterForm.jsx","pages/adminPage/tabs/cars/CarsTable.jsx","pages/adminPage/tabs/cities/CitiesTable.jsx","pages/adminPage/tabs/points/PointsTable.jsx","pages/adminPage/AdminPage.jsx","api/api.js","redux/actions/authActions.js","pages/loginPage/Login.jsx","components/PrivateRoute.jsx","assets/blankCar.png","pages/entityEditPage/carEdit/CarEditForm.jsx","pages/entityEditPage/carEdit/CarEditPage.jsx","pages/entityEditPage/cityEdit/CityEditForm.jsx","pages/entityEditPage/cityEdit/CityEditPage.jsx","pages/entityEditPage/pointEdit/PointEditForm.jsx","pages/entityEditPage/pointEdit/PointEditPage.jsx","pages/errorPage/ErrorPage.jsx","App.jsx","redux/authReducer.js","redux/ordersReducer.js","redux/carsReducer.js","redux/citiesReducer.js","redux/pointsReducer.js","redux/utilsReducer.js","redux/reduxStore.js","reportWebVitals.js","index.jsx"],"names":["carOption","condition","text","className","CheckSquareOutlined","CloseSquareOutlined","Order","props","order","dateFrom","Date","dateTo","src","carId","thumbnail","path","alt","name","cityId","pointId","address","toLocaleString","color","isFullTank","isNeedChildChair","isRightWheel","price","instance","axios","create","baseURL","headers","sessionStorage","getItem","sortParams","sorters","sorterParams","field","sortDirection","putRequest","url","data","put","postRequest","post","getRequest","get","ordersAPI","page","limit","filters","filterParams","orderStatus","then","r","carsAPI","delete","citiesAPI","pointsAPI","utilsActions","type","payload","error","ordersActions","count","status","citiesActions","city","action","getCities","dispatch","a","response","setCityToEdit","setCityAction","OrdersFilterForm","onFilterFormFinish","useSelector","state","orders","cities","useDispatch","useEffect","onFinish","Item","placeholder","allowClear","map","Option","value","id","htmlType","OrdersList","useState","currentPage","setCurrentPage","setFilters","collapsedItems","setCollapsedItems","ordersData","totalCount","sizeOfPage","useBreakpoint","values","date","setMonth","getMonth","setDate","getDate","getOrders","Content","xs","ghost","onChange","Panel","header","style","length","height","total","pageSize","current","showQuickJumper","showSizeChanger","showTotal","simple","size","lg","AdminPageHeader","setVisible","span","md","xl","onClick","MenuUnfoldOutlined","logo","offset","SearchOutlined","BellFilled","avatar","carsActions","car","getCars","setCarToEdit","setCarAction","putCar","postCar","pointsActions","point","getPoints","setPointToEdit","setPointAction","carsColumns","title","dataIndex","key","render","categoryId","colors","index","toUpperCase","preview","width","showConfirm","Modal","confirm","icon","ExclamationCircleOutlined","onOk","to","citiesColumns","pointsColumns","SorterForm","fields","onSorterFormFinish","idName","CarsTable","loading","setLoading","setSorters","carsData","cars","bordered","columns","dataSource","rowKey","pagination","range","CitiesTable","citiesData","PointsTable","pointsData","points","AdminPage","visible","currentMenuItem","utils","adminCurrentPage","placement","onClose","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","onSelect","e","Number","EditOutlined","CarOutlined","EnvironmentOutlined","HomeOutlined","alphabet","rs","Math","floor","random","window","btoa","getBasicHash","authAPI","login","password","body","username","authActions","Login","authStatus","auth","setItem","access_token","refresh_token","initialValues","remember","rules","required","message","validateStatus","prefix","UserOutlined","help","LockOutlined","PrivateRoute","redirect","isAuth","children","CarEditForm","image","carToEdit","setColors","categories","carAction","carSuccess","options","category","addColor","useRef","onFormSubmitHandle","find","formData","priceMin","priceMax","number","description","colorsList","success","labelCol","label","TextArea","showCount","maxLength","autoSize","filterOption","inputValue","option","indexOf","List","ref","block","PlusOutlined","Group","danger","CarEditPage","setImage","align","blankCar","beforeUpload","reader","FileReader","readAsDataURL","onload","tempThumbnail","mimetype","originalname","result","UploadOutlined","CityEditForm","cityToEdit","cityAction","citySuccess","putCity","CityEditPage","PointEditForm","pointToEdit","pointData","pointAction","pointSuccess","putPoint","PointEditPage","ErrorPage","code","msg","submsg","App","statusText","exact","initialState","authReducer","ordersReducer","carsReducer","citiesReducer","pointsReducer","utilsReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"qpBAKMA,EAAY,SAACC,EAAWC,GAC5B,OAAOD,EACH,sBAAKE,UAAU,iBAAf,UACA,cAACC,EAAA,EAAD,CAAqBD,UAAU,gBAC/B,4BAAID,OAEJ,sBAAKC,UAAU,iBAAf,UACA,cAACE,EAAA,EAAD,CAAqBF,UAAU,mBAC/B,mBAAGA,UAAU,qBAAb,SAAmCD,QAI5BI,EAAQ,SAACC,GAAW,IAAD,YACvBC,EAASD,EAATC,MACDC,EAAW,IAAIC,KAAJ,OAASF,QAAT,IAASA,OAAT,EAASA,EAAOC,UAC3BE,EAAS,IAAID,KAAJ,OAASF,QAAT,IAASA,OAAT,EAASA,EAAOG,QAE/B,OAAO,sBAAKR,UAAU,eAAf,UACL,qBAAKA,UAAU,kBAAf,SACE,qBACES,IAAG,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAOK,aAAT,aAAE,EAAcC,UAAUC,KAC7BC,IAAI,WACJb,UAAU,oBAId,sBAAKA,UAAU,iBAAf,UACE,8BACE,sCAAOK,QAAP,IAAOA,GAAP,UAAOA,EAAOK,aAAd,aAAO,EAAcI,QACf,OAALT,QAAK,IAALA,GAAA,UAAAA,EAAOU,cAAP,eAAeD,OAAQ,WACxB,sCAAOT,QAAP,IAAOA,GAAP,UAAOA,EAAOU,cAAd,aAAO,EAAeD,QAChB,OAALT,QAAK,IAALA,GAAA,UAAAA,EAAOW,eAAP,eAAgBC,UAAW,KAJ9B,OAKGZ,QALH,IAKGA,GALH,UAKGA,EAAOW,eALV,aAKG,EAAgBC,WAEnB,8BAAIX,EAASY,iBAAb,WAAkCV,EAAOU,oBACzC,2DAAS,sCAAOb,QAAP,IAAOA,OAAP,EAAOA,EAAOc,cAGzB,sBAAKnB,UAAU,oBAAf,UACGH,EAAS,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAOe,WAAY,2DAC7BvB,EAAS,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAOgB,iBAAkB,mFACnCxB,EAAS,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAOiB,aAAc,oEAGlC,qBAAKtB,UAAU,kBAAf,SACE,oBAAGA,UAAU,aAAb,iBAA2BK,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAOkB,MAAlC,mB,6EChDAC,EAAWC,IAAMC,OAAO,CAC5BC,QAAS,0CACTC,QAAS,CACP,+BAAgC,2BAChC,8BAA+B,IAC/B,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BC,eAAeC,QAAQ,oBAIhDC,EAAa,SAACC,GAClB,IAAIC,EAAY,GAIhB,OAHID,GAAWA,EAAQE,OAASF,EAAQG,gBACtCF,GAAY,gBAAaD,EAAQE,MAArB,aAA+BF,EAAQG,gBAE9CF,GAGHG,EAAa,SAACC,EAAKC,GACvB,OAAOd,EAASe,IAAIF,EAAKC,EAAM,CAC7BV,QAAS,CACP,cAAgB,UAAhB,OAA2BC,eAAeC,QAAQ,qBAKlDU,EAAc,SAACH,EAAKC,GACxB,OAAOd,EAASiB,KAAKJ,EAAKC,EAAM,CAC9BV,QAAS,CACP,cAAgB,UAAhB,OAA2BC,eAAeC,QAAQ,qBAalDY,EAAa,SAACL,GAClB,OAAOb,EAASmB,IAAIN,EAAK,CACvBT,QAAS,CACP,cAAgB,UAAhB,OAA2BC,eAAeC,QAAQ,qBAK3Cc,EAAY,SACbC,EAAMC,EAAOC,GACrB,IAAIC,EAAY,GAMhB,OALID,IACEA,EAAQhC,SAAQiC,GAAY,kBAAeD,EAAQhC,SACnDgC,EAAQE,cAAaD,GAAY,yBAAsBD,EAAQE,cAC/DF,EAAQzC,WAAU0C,GAAY,+BAA4BD,EAAQzC,YAEjEoC,EAAW,iBAAD,OAAkBG,EAAlB,kBAAgCC,GAAhC,OAAwCE,KARhDJ,EAAY,WAWrB,OAAOF,EAAW,kBAAkBQ,MAAK,SAAAC,GAAC,OAAIA,EAAEb,KAAKA,SAI5Cc,EAAU,WACmB,IAAhCP,EAA+B,uDAAxB,EAAGC,EAAqB,uDAAb,GAAId,EAAS,uCAC/BK,EAAML,EAAO,gBACND,EAAWC,GADL,iBACsBa,EADtB,kBACoCC,GADpC,sBAEAD,EAFA,kBAEcC,GACjC,OAAOJ,EAAWL,IALTe,EAAU,WAQnB,OAAOV,EAAW,eAAeQ,MAAK,SAAAC,GAAC,OAAIA,EAAEb,KAAKA,SARzCc,EAAU,SAUd1C,EAAO4B,GACZ,OAAOF,EAAW,UAAD,OAAW1B,GAAS4B,IAX5Bc,EAAU,SAabd,GACN,OAAOE,EAAY,SAAUF,IAdpBc,EAAU,SAgBX1C,GACR,OAhDmB2B,EAgDE,UAAD,OAAW3B,GA/C1Bc,EAAS6B,OAAOhB,EAAK,CAC1BT,QAAS,CACP,cAAgB,UAAhB,OAA2BC,eAAeC,QAAQ,oBAHlC,IAACO,GAoDViB,EAAY,SACbtB,GACR,OAAOU,EAAW,UAAD,OAAWX,EAAWC,MAF9BsB,EAAY,SAIfvC,EAAQuB,GACd,OAAOF,EAAW,WAAD,OAAYrB,GAAUuB,IAL9BgB,EAAY,SAOdhB,GACP,OAAOE,EAAY,UAAWF,IAIrBiB,EAAY,SACbvB,GACR,OAAOU,EAAW,WAAD,OAAYX,EAAWC,MAF/BuB,EAAY,SAIdvC,EAASsB,GAChB,OAAOF,EAAW,YAAD,OAAapB,GAAWsB,IALhCiB,EAAY,SAObjB,GACR,OAAOE,EAAY,WAAYF,IC5GtBkB,EACU,SAACX,GAAD,MAAW,CAACY,KAAM,+BAAgCC,QAASb,IADrEW,EAED,SAACG,GAAD,MAAY,CAACF,KAAM,kBAAmBC,QAASC,ICC9CC,GACO,SAACtB,GAAD,MAAW,CAACmB,KAAM,4BAA6BC,QAASpB,IAD/DsB,GAEU,SAACC,GAAD,MAAY,CAACJ,KAAM,4BAA6BC,QAASG,IAFnED,GAGK,SAACE,GAAD,MAAa,CAACL,KAAM,0BAA2BC,QAASI,ICH7DC,GACO,SAACzB,GAAD,MAAW,CAACmB,KAAM,4BAA6BC,QAASpB,IAD/DyB,GAEU,SAACF,GAAD,MAAY,CAACJ,KAAM,4BAA6BC,QAASG,IAFnEE,GAGI,SAACC,GAAD,MAAW,CAACP,KAAM,0BAA2BC,QAASM,IAH1DD,GAII,SAACE,GAAD,MAAa,CAACR,KAAM,yBAA0BC,QAASO,IAJ3DF,GAKK,SAACD,GAAD,MAAa,CAACL,KAAM,0BAA2BC,QAASI,IAG7DI,GAAY,eAAClC,EAAD,uDAAW,KAAX,8CAAoB,WAAOmC,GAAP,eAAAC,EAAA,+EAElBd,EAAoBtB,GAFF,OAEnCqC,EAFmC,OAGzCF,EAASJ,GAAkCM,EAAS/B,KAAKuB,QACzDM,EAASJ,GAA+BM,EAAS/B,KAAKA,OAJb,gDAMzC6B,EAASX,EAAsB,KAAEa,WANQ,yDAApB,uDAUZC,GAAgB,SAACN,GAAD,8CAAU,WAAOG,GAAP,SAAAC,EAAA,sDACrCD,EAASJ,GAA4BC,IADA,2CAAV,uDAIhBO,GAAgB,SAACN,GAAD,8CAAY,WAAOE,GAAP,SAAAC,EAAA,sDACvCD,EAASJ,IAA6B,IACtCI,EAASJ,GAA4BE,IAFE,2CAAZ,uDCjBhBO,GAAmB,SAACpE,GAC/B,IAAOqE,EAAsBrE,EAAtBqE,mBACDxB,EAAcyB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAO3B,eAChD4B,EAASH,aAAY,SAAAC,GAAK,OAAIA,EAAME,OAAOA,UAE3CV,EAAWW,cAOjB,OALAC,qBAAU,WACRZ,EFG0B,uCAAM,WAAOA,GAAP,eAAAC,EAAA,+EAEbxB,IAFa,OAE1BN,EAF0B,OAGhC6B,EAASP,GAA6BtB,IAHN,gDAKhC6B,EAASX,EAAsB,KAAEa,WALD,yDAAN,uDEF1BF,EAASD,QACR,IAEI,eAAC,IAAD,CACLpD,KAAK,mBACLd,UAAU,aACVgF,SAAUP,EAHL,UAKL,cAAC,IAAKQ,KAAN,CACEjF,UAAU,iBACVc,KAAK,SAFP,SAIE,cAAC,IAAD,CACEoE,YAAY,kFACZC,YAAU,EAFZ,SAIGN,EAAOO,KAAI,SAAApB,GAAI,OACd,cAAC,IAAOqB,OAAR,CAEEC,MAAOtB,EAAKuB,GAFd,SAGEvB,EAAKlD,MAFAkD,EAAKuB,WAOlB,cAAC,IAAKN,KAAN,CACEjF,UAAU,iBACVc,KAAK,cAFP,SAIE,cAAC,IAAD,CACEoE,YAAY,6HACZC,YAAU,EAFZ,SAIGlC,EAAYmC,KAAI,SAAAtB,GAAM,OACrB,cAAC,IAAOuB,OAAR,CAEEC,MAAOxB,EAAOyB,GAFhB,SAGEzB,EAAOhD,MAFFgD,EAAOyB,WAOpB,cAAC,IAAKN,KAAN,CACEjF,UAAU,iBACVc,KAAK,WAFP,SAIE,eAAC,IAAD,CACEoE,YAAY,gHACZC,YAAU,EAFZ,UAIE,cAAC,IAAOE,OAAR,CAAeC,MAAM,QAArB,gHACA,cAAC,IAAOD,OAAR,CAAeC,MAAM,OAArB,sHACA,cAAC,IAAOD,OAAR,CAAeC,MAAM,MAArB,+GAIJ,cAAC,IAAKL,KAAN,UACE,cAAC,IAAD,CAAQxB,KAAK,UAAU+B,SAAS,SAAhC,0ECjEOC,GAAa,WACxB,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0BF,mBAAS,IAAnC,mBAAO5C,EAAP,KACA,GADA,KAC8B4C,mBAAS,OAAvC,mBAAO3C,EAAP,KAAgB8C,EAAhB,KACA,EAA4CH,mBAAS,IAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KAEMC,EAAatB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UACvCA,EAAsBoB,EAAtBpB,OAAQqB,EAAcD,EAAdC,WAET9B,EAAWW,cACXoB,EAAaC,cAMb1B,EAAqB,SAAC2B,GAC1B,IAAMC,EAAO,IAAI9F,KACbD,EAAW,GACf,OAAQ8F,EAAO9F,UACb,IAAK,QACHA,EAAW+F,EAAKC,SAASD,EAAKE,WAAa,GAC3C,MAEF,IAAK,OACHjG,EAAW+F,EAAKG,QAAQH,EAAKI,UAAY,GACzC,MAEF,IAAK,MACHnG,EAAW+F,EAAKG,QAAQH,EAAKI,UAAY,GAK7CZ,EAAW,2BAAIO,GAAL,IAAa9F,eAOzB,OAJAyE,qBAAU,WACRZ,EHtCqB,eAACtB,EAAD,uDAAQ,EAAGC,EAAX,uDAAmB,GAAIC,EAAvB,uDAAiC,KAAjC,8CAA0C,WAAOoB,GAAP,eAAAC,EAAA,+EAExCxB,EAAoBC,EAAMC,EAAOC,GAFO,OAEzDsB,EAFyD,OAG/DF,EAASP,GAAkCS,EAAS/B,KAAKuB,QACzDM,EAASP,GAA+BS,EAAS/B,KAAKA,OAJS,gDAM/D6B,EAASX,EAAsB,KAAEa,WAN8B,yDAA1C,sDGsCZqC,CAAUf,EAAc,EAAG7C,EAAOC,MAC1C,CAAC4C,EAAa5C,IAEV,qCACL,oBAAI/C,UAAU,YAAd,kDACA,eAAC,IAAO2G,QAAR,CAAgB3G,UAAU,oBAA1B,UACGkG,EAAWU,GACR,cAAC,IAAD,CACAC,OAAK,EACLC,SAAUf,EAFV,SAIA,cAAC,IAASgB,MAAV,CAAwBC,OAAO,6CAA/B,SACE,cAAC,GAAD,CAAkBvC,mBAAoBA,KADnB,KAIrB,cAAC,GAAD,CAAkBA,mBAAoBA,IAE1C,qBACEzE,UAAU,aACViH,MAAOnB,EAAeoB,OAAS,CAACC,OAAQ,OAAS,CAACA,OAAQ,OAF5D,SAIGvC,EAAOQ,KAAI,SAAA/E,GAAK,OAAI,cAAC,EAAD,CAAOA,MAAOA,GAAYA,EAAMkF,SAEvD,cAAC,IAAD,CACE6B,MAAOnB,EACPoB,SAAU,GACVC,QAAS3B,EACT4B,iBAAe,EACfC,iBAAiB,EACjBC,UAAW,SAAAL,GAAK,+CAAaA,EAAb,gDAChBN,SAxDoB,SAACjE,GACzB+C,EAAe/C,IAwDX6E,OAAQxB,EAAWU,GACnBe,KAAMzB,EAAW0B,GAAK,UAAY,iB,sEC/E3B,OAA0B,sCCA1B,OAA0B,mCCS5BC,I,OAAkB,SAACzH,GAC9B,IAAO0H,EAAc1H,EAAd0H,WAEDT,EAAWlB,cAEjB,OAAO,eAAC,KAAD,CAAKnG,UAAU,kBAAf,UACL,eAAC,KAAD,CACE4G,GAAI,CAACmB,KAAM,IACXC,GAAI,CAACD,KAAM,GACXH,GAAI,CAACG,KAAM,GACXE,GAAI,CAACF,KAAM,GACX/H,UAAU,mBALZ,UAOE,cAAC,IAAD,CAAQA,UAAU,iBAAiBkI,QAAS,kBAAMJ,GAAW,IAA7D,SACE,cAACK,GAAA,EAAD,MAEF,qBACE1H,IAAK2H,GACLvH,IAAI,OACJb,UAAU,YAEZ,mBAAGA,UAAU,YAAb,+BAEF,cAAC,KAAD,CACEA,UAAU,kBACV4G,GAAI,CAACyB,OAAQ,EAAGN,KAAM,GACtBC,GAAI,CAACK,OAAQ,GAAIN,KAAM,GACvBH,GAAI,CAACS,OAAQ,IACbJ,GAAI,CAACI,OAAQ,GAAIN,KAAM,GALzB,SAOE,cAACO,GAAA,EAAD,CAAgBtI,UAAU,iBAE5B,cAAC,KAAD,CACE4G,GAAIS,EAAST,IAAM,CAACyB,OAAQ,EAAGN,KAAM,GACrCC,GAAI,CAACD,KAAM,GACXE,GAAI,CAACF,KAAM,GACX/H,UAAU,8BAJZ,SAME,cAAC,KAAD,CACE6D,MAAO,EACP8D,KAAK,QAFP,SAIE,cAACY,GAAA,EAAD,CAAYvI,UAAU,yBAG1B,cAAC,KAAD,CACE4G,GAAI,CAACmB,KAAM,GACXC,GAAI,CAACD,KAAM,GACXE,GAAI,CAACF,KAAM,GACX/H,UAAU,mBAJZ,SAME,cAAC,KAAD,CAAQS,IAAK+H,Y,2DCzDNC,GACK,SAACnG,GAAD,MAAW,CAACmB,KAAM,wBAAyBC,QAASpB,IADzDmG,GAEQ,SAAC5E,GAAD,MAAY,CAACJ,KAAM,wBAAyBC,QAASG,IAF7D4E,GAGG,SAACC,GAAD,MAAU,CAACjF,KAAM,uBAAwBC,QAASgF,IAHrDD,GAII,SAACnG,GAAD,MAAW,CAACmB,KAAM,sBAAuBC,QAASpB,IAJtDmG,GAKG,SAACxE,GAAD,MAAa,CAACR,KAAM,sBAAuBC,QAASO,IALvDwE,GAMI,SAAC3E,GAAD,MAAa,CAACL,KAAM,uBAAwBC,QAASI,IANzD2E,GAOK,SAAC5F,GAAD,MAAW,CAACY,KAAM,wBAAyBC,QAASb,IAGzD8F,GAAU,SAAC9F,EAAMC,GAAP,IAAcd,EAAd,uDAAwB,KAAxB,8CAAiC,WAAOmC,GAAP,eAAAC,EAAA,+EAE7BhB,EAAgBP,EAAMC,EAAOd,GAFA,OAE9CqC,EAF8C,OAGpDF,EAASsE,GAA8BpE,EAAS/B,KAAKuB,QACrDM,EAASsE,GAA2BpE,EAAS/B,KAAKA,OAJE,gDAMpD6B,EAASX,EAAsB,KAAEa,WANmB,yDAAjC,uDAmBVuE,GAAe,SAACF,GAAD,8CAAS,WAAOvE,GAAP,SAAAC,EAAA,sDACnCD,EAASsE,GAAyBC,IADC,2CAAT,uDAIfG,GAAe,SAAC5E,GAAD,8CAAY,WAAOE,GAAP,SAAAC,EAAA,sDACtCD,EAASsE,IAA0B,IACnCtE,EAASsE,GAAyBxE,IAFI,2CAAZ,uDAKf6E,GAAS,SAACpI,EAAO4B,GAAR,8CAAiB,WAAO6B,GAAP,SAAAC,EAAA,+EAEZhB,EAAe1C,EAAO4B,GAFV,OAGX,MAHW,OAGtBwB,OACXK,EAASsE,IAA0B,IAEnCtE,EAASsE,IAA0B,IANF,gDASnCtE,EAASX,EAAsB,KAAEa,WATE,yDAAjB,uDAaT0E,GAAU,SAACzG,GAAD,8CAAU,WAAO6B,GAAP,SAAAC,EAAA,+EAENhB,EAAgBd,GAFV,OAGL,MAHK,OAGhBwB,OACXK,EAASsE,IAA0B,IAEnCtE,EAASsE,IAA0B,IANR,gDAS7BtE,EAASX,EAAsB,KAAEa,WATJ,yDAAV,uDAqBVuB,GAAiB,SAAC/C,GAAD,8CAAU,WAAOsB,GAAP,SAAAC,EAAA,sDACtCD,EAASsE,GAA2B5F,IADE,2CAAV,uDCxEjBmG,GACO,SAAC1G,GAAD,MAAW,CAACmB,KAAM,4BAA6BC,QAASpB,IAD/D0G,GAEU,SAACnF,GAAD,MAAY,CAACJ,KAAM,4BAA6BC,QAASG,IAFnEmF,GAGK,SAACC,GAAD,MAAY,CAACxF,KAAM,2BAA4BC,QAASuF,IAH7DD,GAIK,SAAC/E,GAAD,MAAa,CAACR,KAAM,0BAA2BC,QAASO,IAJ7D+E,GAKM,SAAClF,GAAD,MAAa,CAACL,KAAM,2BAA4BC,QAASI,IAG/DoF,GAAY,eAAClH,EAAD,uDAAW,KAAX,8CAAoB,WAAOmC,GAAP,eAAAC,EAAA,+EAElBb,EAAoBvB,GAFF,OAEnCqC,EAFmC,OAGzCF,EAAS6E,GAAkC3E,EAAS/B,KAAKuB,QACzDM,EAAS6E,GAA+B3E,EAAS/B,KAAKA,OAJb,gDAMzC6B,EAASX,EAAsB,KAAEa,WANQ,yDAApB,uDAUZ8E,GAAiB,SAACF,GAAD,8CAAW,WAAO9E,GAAP,SAAAC,EAAA,sDACvCD,EAAS6E,GAA6BC,IADC,2CAAX,uDAIjBG,GAAiB,SAACnF,GAAD,8CAAY,WAAOE,GAAP,SAAAC,EAAA,sDACxCD,EAAS6E,IAA8B,IACvC7E,EAAS6E,GAA6B/E,IAFE,2CAAZ,uDChBjBoF,GAAc,CACzB,CACEC,MAAO,yDACPC,UAAW,aACXC,IAAK,aACLC,OAAQ,SAAAC,GAAU,uBAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAY5I,QAEvC,CACEwI,MAAO,iCACPC,UAAW,SACXC,IAAK,SACLC,OAAQ,SAAAE,GAAM,OAAIA,EAAOvE,KAAI,SAACjE,EAAOyI,GACnC,MAAM,GAAN,OAAUzI,EAAM0I,cAAhB,YAAiCD,IAAUD,EAAOzC,OAAS,EAAI,KAAO,SAG1E,CACEoC,MAAO,2EACPC,UAAW,OACXC,IAAK,QAEP,CACEF,MAAO,0DACPE,IAAK,SACLD,UAAW,UAEb,CACED,MAAO,2BACPE,IAAK,WACLD,UAAW,YAEb,CACED,MAAO,2BACPE,IAAK,YACLD,UAAW,YACXE,OAAQ,SAAA9I,GAAS,OACf,cAAC,KAAD,CACEF,IAAG,OAAEE,QAAF,IAAEA,OAAF,EAAEA,EAAWC,KAChBC,IAAI,WACJiJ,SAAS,EACTC,MAAO,QAIb,CACET,MAAO,mDACPE,IAAK,UACLC,OAAQ,SAACf,GACP,IAAMvE,EAAWW,cAEXkF,EAAc,WAClBC,KAAMC,QAAQ,CACZZ,MAAO,kHACPa,KAAM,cAACC,GAAA,EAAD,IACNC,KAHY,WFQG,IAAC3J,EEJdyD,GFIczD,EEJKgI,EAAInD,GFIV,uCAAW,WAAOpB,GAAP,SAAAC,EAAA,+EAE1BhB,EAAkB1C,GAFQ,sDAIhCyD,EAASX,EAAsB,KAAEa,WAJD,wDAAX,wDEHbF,EAASyB,GAAe,IACxBzB,EAASwE,GAAQ,QAKvB,OAAO,eAAC,KAAD,WACL,cAAC,IAAD,CAAM2B,GAAG,WAAWpC,QAAS,WAC3B/D,EAAS0E,GAAa,WACtB1E,EAASyE,GAAaF,KAFxB,8DAIA,cAAC,IAAD,CAAQjF,KAAK,OAAOyE,QAAS,WAC3B/D,EAAS6F,IADX,8DAQKO,GAAgB,CAC3B,CACEjB,MAAO,2EACPC,UAAW,OACXC,IAAK,QAEP,CACEF,MAAO,mDACPE,IAAK,UACLC,OAAQ,SAACzF,GACP,IAAMG,EAAWW,cAEjB,OAAO,cAAC,IAAD,CAAMwF,GAAG,YAAYpC,QAAS,WACnC/D,EAASI,GAAc,WACvBJ,EAASG,GAAcN,KAFlB,iEAQAwG,GAAgB,CAC3B,CACElB,MAAO,iCACPC,UAAW,SACXC,IAAK,SACLC,OAAQ,SAAA1I,GAAM,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAQD,OAE5B,CACEwI,MAAO,iCACPC,UAAW,UACXC,IAAK,WAEP,CACEF,MAAO,mDACPC,UAAW,OACXC,IAAK,QAEP,CACEF,MAAO,mDACPE,IAAK,UACLC,OAAQ,SAACR,GACP,IAAM9E,EAAWW,cAEjB,OAAO,cAAC,IAAD,CAAMwF,GAAG,aAAapC,QAAS,WACpC/D,EAASiF,GAAe,WACxBjF,EAASgF,GAAeF,KAFnB,iEC1HAwB,GAAa,SAACrK,GACzB,IAAOsK,EAA8BtK,EAA9BsK,OAAQC,EAAsBvK,EAAtBuK,mBAEf,OAAO,eAAC,IAAD,CACL3K,UAAU,aACVc,KAAK,aACLkE,SAAU2F,EAHL,UAKL,cAAC,IAAK1F,KAAN,CACEjF,UAAU,iBACVc,KAAK,QAFP,SAIE,cAAC,IAAD,CACEoE,YAAY,4EACZC,YAAU,EAFZ,SAIGuF,EAAOtF,KAAI,SAAAlD,GAAK,OACf,cAAC,IAAOmD,OAAR,CAEEC,MAAOpD,EAAM0I,OAFf,SAGE1I,EAAMpB,MAFDoB,EAAM0I,eAOnB,cAAC,IAAK3F,KAAN,CACEjF,UAAU,iBACVc,KAAK,gBAFP,SAIE,eAAC,IAAD,CACEoE,YAAY,+EACZC,YAAU,EAFZ,UAIE,cAAC,IAAOE,OAAR,CAAeC,MAAO,EAAtB,gFACA,cAAC,IAAOD,OAAR,CAAeC,OAAQ,EAAvB,mEAIJ,cAAC,IAAKL,KAAN,UACE,cAAC,IAAD,CAAQxB,KAAK,UAAU+B,SAAS,SAAhC,0ECjCOqF,GAAY,WACvB,MAA8BnF,oBAAS,GAAvC,mBAAOoF,EAAP,KAAgBC,EAAhB,KACA,EAA4CrF,mBAAS,IAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAA8BL,mBAAS,MAAvC,mBAAO1D,EAAP,KAAgBgJ,EAAhB,KAEMC,EAAWvG,aAAY,SAAAC,GAAK,OAAIA,EAAMuG,QACrCA,EAAiCD,EAAjCC,KAAMjF,EAA2BgF,EAA3BhF,WAAYN,EAAesF,EAAftF,YAEnBxB,EAAWW,cACXoB,EAAaC,cAEbwE,EAAqB,SAACvE,GAC1B4E,EAAW5E,IASb,OANArB,oBAAS,sBAAC,sBAAAX,EAAA,6DACR2G,GAAW,GADH,SAEF5G,EAASwE,GAAQhD,EAAc,EAAG,GAAI3D,IAFpC,OAGR+I,GAAW,GAHH,2CAIP,CAACpF,EAAa3D,IAEV,qCACL,oBAAIhC,UAAU,YAAd,0EACA,eAAC,IAAO2G,QAAR,CAAgB3G,UAAU,oBAA1B,UACGkG,EAAWU,GACR,cAAC,IAAD,CACAC,OAAK,EACLC,SAAUf,EAFV,SAIA,cAAC,IAASgB,MAAV,CAAwBC,OAAO,+DAA/B,SACE,cAAC,GAAD,CACE0D,OAAQ,CACN,CAACE,OAAQ,aAAc9J,KAAM,0DAC7B,CAAC8J,OAAQ,OAAQ9J,KAAM,4EACvB,CAAC8J,OAAQ,WAAY9J,KAAM,6BAE7B6J,mBAAoBA,KAPH,KAWrB,cAAC,GAAD,CACAD,OAAQ,CACN,CAACE,OAAQ,aAAc9J,KAAM,0DAC7B,CAAC8J,OAAQ,OAAQ9J,KAAM,4EACvB,CAAC8J,OAAQ,WAAY9J,KAAM,6BAE7B6J,mBAAoBA,IAGxB,cAAC,IAAD,CAAML,GAAG,WAAT,SACE,cAAC,IAAD,CACE7G,KAAK,UACLzD,UAAU,kBACVkI,QAAS,WACP/D,EAAS0E,GAAa,WACtB1E,EAASyE,GAAa,QAL1B,yFASF,qBACE5I,UAAU,YACViH,MAAOnB,EAAeoB,OAAS,CAACC,OAAQ,OAAS,CAACA,OAAQ,OAF5D,SAIE,cAAC,KAAD,CACEgE,UAAQ,EACRC,QAAS/B,GACTgC,WAAYH,EACZJ,QAASA,EACTQ,OAAQ,SAAA5C,GAAG,OAAIA,EAAInD,IACnBgG,WAAY,CACVnE,MAAOnB,EACPoB,SAAU,GACVC,QAAS3B,EACT8B,UAAW,SAACL,EAAOoE,GAAR,gBAAqBA,EAAM,GAA3B,YAAiCA,EAAM,GAAvC,yBAAgDpE,EAAhD,8BACXN,SAAU,SAAAjE,GACRsB,EAASyB,GAAe/C,iBC3EzB4I,I,OAAc,WACzB,MAA8B/F,oBAAS,GAAvC,mBAAOoF,EAAP,KAAgBC,EAAhB,KACA,EAA4CrF,mBAAS,IAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAA8BL,mBAAS,MAAvC,mBAAO1D,EAAP,KAAgBgJ,EAAhB,KAEMU,EAAahH,aAAY,SAAAC,GAAK,OAAIA,EAAME,UACvCA,EAAsB6G,EAAtB7G,OAAQoB,EAAcyF,EAAdzF,WAET9B,EAAWW,cACXoB,EAAaC,cAEbwE,EAAqB,SAACvE,GAC1B4E,EAAW5E,IASb,OANArB,oBAAS,sBAAC,sBAAAX,EAAA,6DACR2G,GAAW,GADH,SAEF5G,EAASD,GAAUlC,IAFjB,OAGR+I,GAAW,GAHH,2CAIP,CAAC/I,IAEG,qCACL,oBAAIhC,UAAU,YAAd,kDACA,eAAC,IAAO2G,QAAR,CAAgB3G,UAAU,oBAA1B,UACGkG,EAAWU,GACR,cAAC,IAAD,CACAC,OAAK,EACLC,SAAUf,EAFV,SAIA,cAAC,IAASgB,MAAV,CAAwBC,OAAO,+DAA/B,SACE,cAAC,GAAD,CACE0D,OAAQ,CACN,CAACE,OAAQ,OAAQ9J,KAAM,6EAEzB6J,mBAAoBA,KALH,KASrB,cAAC,GAAD,CACAD,OAAQ,CACN,CAACE,OAAQ,OAAQ9J,KAAM,6EAEzB6J,mBAAoBA,IAGxB,cAAC,IAAD,CAAML,GAAG,YAAT,SACE,cAAC,IAAD,CACE7G,KAAK,UACLzD,UAAU,kBACVkI,QAAS,WACP/D,EAASI,GAAc,WACvBJ,EAASG,GAAc,QAL3B,+FASF,qBACEtE,UAAU,cACViH,MAAOnB,EAAeoB,OAAS,CAACC,OAAQ,OAAS,CAACA,OAAQ,OAF5D,SAIE,cAAC,KAAD,CACEgE,UAAQ,EACRC,QAASb,GACTc,WAAYxG,EACZiG,QAASA,EACTQ,OAAQ,SAAAtH,GAAI,OAAIA,EAAKuB,IACrBgG,WAAY,CACVnE,MAAOnB,EACPwB,UAAW,SAACL,EAAOoE,GAAR,gBAAqBA,EAAM,GAA3B,YAAiCA,EAAM,GAAvC,yBAAgDpE,EAAhD,6DCnEVuE,I,OAAc,WACzB,MAA8BjG,oBAAS,GAAvC,mBAAOoF,EAAP,KAAgBC,EAAhB,KACA,EAA4CrF,mBAAS,IAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAA8BL,mBAAS,MAAvC,mBAAO1D,EAAP,KAAgBgJ,EAAhB,KAEMY,EAAalH,aAAY,SAAAC,GAAK,OAAIA,EAAMkH,UACvCA,EAAsBD,EAAtBC,OAAQ5F,EAAc2F,EAAd3F,WAET9B,EAAWW,cACXoB,EAAaC,cAEbwE,EAAqB,SAACvE,GAC1B4E,EAAW5E,IASb,OANArB,oBAAS,sBAAC,sBAAAX,EAAA,6DACR2G,GAAW,GADH,SAEF5G,EAAS+E,GAAUlH,IAFjB,OAGR+I,GAAW,GAHH,2CAIP,CAAC/I,IAEG,qCACL,oBAAIhC,UAAU,YAAd,kDACA,eAAC,IAAO2G,QAAR,CAAgB3G,UAAU,oBAA1B,UACGkG,EAAWU,GACR,cAAC,IAAD,CACAC,OAAK,EACLC,SAAUf,EAFV,SAIA,cAAC,IAASgB,MAAV,CAAwBC,OAAO,+DAA/B,SACE,cAAC,GAAD,CACE0D,OAAQ,CACN,CAACE,OAAQ,SAAU9J,KAAM,kCACzB,CAAC8J,OAAQ,UAAW9J,KAAM,kCAC1B,CAAC8J,OAAQ,OAAQ9J,KAAM,qDAEzB6J,mBAAoBA,KAPH,KAWrB,cAAC,GAAD,CACAD,OAAQ,CACN,CAACE,OAAQ,SAAU9J,KAAM,kCACzB,CAAC8J,OAAQ,UAAW9J,KAAM,kCAC1B,CAAC8J,OAAQ,OAAQ9J,KAAM,qDAEzB6J,mBAAoBA,IAGxB,cAAC,IAAD,CAAML,GAAG,aAAT,SACE,cAAC,IAAD,CACE7G,KAAK,UACLzD,UAAU,kBACVkI,QAAS,WACP/D,EAASiF,GAAe,WACxBjF,EAASgF,GAAe,QAL5B,+FASF,qBACEnJ,UAAU,cACViH,MAAOnB,EAAeoB,OAAS,CAACC,OAAQ,OAAS,CAACA,OAAQ,OAF5D,SAIE,cAAC,KAAD,CACEgE,UAAQ,EACRC,QAASZ,GACTa,WAAYQ,EACZf,QAASA,EACTQ,OAAQ,SAAArC,GAAK,OAAIA,EAAM1D,IACvBgG,WAAY,CACVnE,MAAOnB,EACPwB,UAAW,SAACL,EAAOoE,GAAR,gBAAqBA,EAAM,GAA3B,YAAiCA,EAAM,GAAvC,yBAAgDpE,EAAhD,6DCrEV0E,GAAY,WACvB,MAA8BpG,oBAAS,GAAvC,mBAAOqG,EAAP,KAAgBjE,EAAhB,KAEMkE,EAAkBtH,aAAY,SAAAC,GAAK,OAAIA,EAAMsH,MAAMC,oBACnD/H,EAAWW,cAWjB,OAAO,eAAC,IAAD,WACL,cAAC,GAAD,CAAiBgD,WAAYA,IAC7B,eAAC,IAAD,WACE,cAAC,IAAD,CACEwB,MAAM,2BACN6C,UAAU,OACVC,QAVU,WACdtE,GAAW,IAUPiE,QAASA,EAJX,SAKE,eAAC,IAAD,CACEM,KAAK,SACLC,oBAAqB,CAAC,KACtBC,gBAAiB,CAAC,QAClBtF,MAAO,CAACE,OAAQ,OAAQqF,YAAa,GACrCC,SAtBgB,SAACC,GfbQ,IAAC7J,EechCsB,GfdgCtB,EecH8J,OAAOD,EAAElD,KfdP,uCAAU,WAAOrF,GAAP,SAAAC,EAAA,sDAC3CD,EAASX,EAAiCX,IADC,2CAAV,wDee/BiF,GAAW,IAeP,UAOE,cAAC,IAAK7C,KAAN,CAEEjF,UAAU,eACVmK,KAAM,cAACyC,EAAA,EAAD,IAHR,4FACM,KAIN,cAAC,IAAK3H,KAAN,CAEEjF,UAAU,eACVmK,KAAM,cAAC0C,EAAA,EAAD,IAHR,gFACM,KAIN,cAAC,IAAK5H,KAAN,CAEEjF,UAAU,eACVmK,KAAM,cAAC2C,EAAA,EAAD,IAHR,kGACM,KAIN,cAAC,IAAK7H,KAAN,CAEEjF,UAAU,eACVmK,KAAM,cAAC4C,EAAA,EAAD,IAHR,kGACM,UAMV,eAAC,IAAD,CAAQ/M,UAAU,qBAAlB,UACuB,IAApBgM,GAAyB,cAAC,GAAD,IACL,IAApBA,GAAyB,cAAC,GAAD,IACL,IAApBA,GAAyB,cAAC,GAAD,IACL,IAApBA,GAAyB,cAAC,GAAD,c,uCCjE5BgB,GAAW,uCAUXxL,GAAWC,IAAMC,OAAO,CAC5BC,QAAS,0CACTC,QAAS,CACP,+BAAgC,2BAChC,8BAA+B,IAC/B,eAAgB,mBAChB,cAdiB,WAEnB,IADA,IAAIqL,EAAK,GACFA,EAAG/F,OAAS,GACjB+F,GAAMD,GAASE,KAAKC,MAAMD,KAAKE,SAAWJ,GAAS9F,SAErD,MAAM,SAAN,OAAgBmG,OAAOC,KAAP,UAAeL,EAAf,YARG,gBAiBAM,MAIRC,GAAU,SACXC,EAAOC,GACf,IAAMC,EAAO,CACXC,SAAUH,EACVC,YAEF,OAAOlM,GAASiB,KAAT,aAA4BkL,IC3B1BE,GACE,SAACvL,GAAD,MAAW,CAACmB,KAAM,qBAAsBC,QAASpB,IADnDuL,GAEI,SAAC/J,GAAD,MAAa,CAACL,KAAM,uBAAwBC,QAASI,ICIzDgK,GAAQ,WACnB,IAAM3J,EAAWW,cAMXiJ,EAAarJ,aAAY,SAAAC,GAAK,OAAIA,EAAMqJ,KAAKD,cAEnD,OAAO,qBAAK/N,UAAU,iBAAf,SACL,sBAAKA,UAAU,eAAf,UACE,eAAC,KAAD,CACEA,UAAU,cACV2H,KAAK,SAFP,UAIE,qBACE3H,UAAU,OACVS,IAAK2H,GACLvH,IAAI,SAEN,mBAAGb,UAAU,UAAb,+BAEF,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,aAAb,sCACA,eAAC,IAAD,CACEc,KAAK,YACLkE,SAvBS,SAACoB,GDJK,IAACqH,EAAOC,ECK7BvJ,GDLsBsJ,ECKHrH,EAAOwH,SDLGF,ECKOtH,EAAOsH,SDLtB,uCAAqB,WAAOvJ,GAAP,eAAAC,EAAA,+EAEnBoJ,GAAkBC,EAAOC,GAFN,OAEpCrJ,EAFoC,OAG1CxC,eAAeoM,QAAQ,eAAgB5J,EAAS/B,KAAK4L,cACrDrM,eAAeoM,QAAQ,gBAAiB5J,EAAS/B,KAAK6L,eACtDhK,EAAS0J,GAAwBxJ,EAAS/B,OALA,gDAO1C6B,EAAS0J,GAA0B,KAAExJ,SAASP,SAPJ,yDAArB,yDC4BfsK,cAAe,CAACC,UAAU,GAH5B,UAKE,cAAC,IAAKpJ,KAAN,CACEjF,UAAU,WACVc,KAAK,WACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,8EAClCC,eAA+B,MAAfV,EAAqB,QAAU,KAJjD,SAME,cAAC,KAAD,CACEW,OAAQ,cAACC,GAAA,EAAD,IACRzJ,YAAY,WACZC,YAAU,MAId,cAAC,IAAKF,KAAN,CACEjF,UAAU,WACVc,KAAK,WACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,oFAClCC,eAA+B,MAAfV,EAAqB,QAAU,KAC/Ca,KAAqB,MAAfb,EAAqB,0IAA8B,KAL3D,SAOE,cAAC,KAAD,CACEW,OAAQ,cAACG,GAAA,EAAD,IACRpL,KAAK,WACLyB,YAAY,WACZC,YAAU,MAId,sBAAKnF,UAAU,kBAAf,UAEE,4HACA,cAAC,IAAD,CACEyD,KAAK,UACL+B,SAAS,SACTxF,UAAU,eAHZ,2DChEC8O,GAAe,SAAC1O,GAC3B,IAAOQ,EAAoCR,EAApCQ,KAAMmO,EAA8B3O,EAA9B2O,SAAUC,EAAoB5O,EAApB4O,OAAQC,EAAY7O,EAAZ6O,SAE/B,OAAO,cAAC,IAAD,CACLrO,KAAMA,EACN6I,OAAQ,WACN,OAAOuF,EAASC,EAAW,cAAC,IAAD,CAAU3E,GAAIyE,Q,6BCVhC,OAA0B,qC,kDCQ5BG,GAAc,SAAC9O,GAAW,IAAD,EAC7B+O,EAAoB/O,EAApB+O,MAAOC,EAAahP,EAAbgP,UAEd,EAA4B1J,oBAAkB,OAAT0J,QAAS,IAATA,OAAA,EAAAA,EAAWzF,OAAOvE,KAAI,SAACjE,EAAOyI,GAAR,MAAmB,CAC5ErE,GAAIpE,EAAQyI,EACZtE,MAAOnE,QACF,IAHP,mBAAOwI,EAAP,KAAe0F,EAAf,KAKMpE,EAAWvG,aAAY,SAAAC,GAAK,OAAIA,EAAMuG,QACrCoE,EAAqCrE,EAArCqE,WAAYC,EAAyBtE,EAAzBsE,UAAWC,EAAcvE,EAAduE,WACxBC,EAAUH,EAAWlK,KAAI,SAAAsK,GAAQ,MAAK,CAACpK,MAAOoK,EAAS5O,SACvDqD,EAAWW,cACX6K,EAAWC,mBAEXC,EAAkB,uCAAG,WAAOzJ,GAAP,iBAAAhC,EAAA,sDACnBsF,EAAa4F,EAAWQ,MAAK,SAAAJ,GAAQ,OAAIA,EAAS5O,OAASsF,EAAOsD,cAAYnE,GAE9EwK,EAAW,CACfC,SAAUrD,OAAOvG,EAAO4J,UACxBC,SAAUtD,OAAOvG,EAAO6J,UACxBnP,KAAMsF,EAAOtF,KACboP,OAAQ9J,EAAO8J,OACfC,YAAa/J,EAAO+J,YACpBzG,aACAC,OAAQvD,EAAOgK,WACfzP,UAAWwO,GAXY,KAcjBI,EAdiB,OAelB,WAfkB,OAmBlB,WAnBkB,6BAgBrBpL,EAAS4E,GAAQgH,IAhBI,mCAoBrB5L,EAAS2E,GAAOsG,EAAU7J,GAAIwK,IApBT,oGAAH,sDAsCxB,OAVAhL,qBAAU,WACRZ,Eb5ByB,uCAAM,WAAOA,GAAP,eAAAC,EAAA,+EAEZhB,IAFY,OAEzBd,EAFyB,OAG/B6B,EAASsE,GAA0BnG,IAHJ,gDAK/B6B,EAASX,EAAsB,KAAEa,WALF,yDAAN,yDa6BxB,IAECmL,GAA4B,WAAdD,EAChBf,KAAQ6B,QAAQ,+HACPb,GAA4B,WAAdD,GACvBf,KAAQ6B,QAAQ,+HAGX,eAAC,IAAD,CACLvP,KAAK,UACLwP,SAAU,CAACvI,KAAM,GACjBqG,cAAe,CACb4B,UAAmB,OAATZ,QAAS,IAATA,OAAA,EAAAA,EAAWY,WAAY,KACjCC,UAAmB,OAATb,QAAS,IAATA,OAAA,EAAAA,EAAWa,WAAY,KACjCnP,MAAe,OAATsO,QAAS,IAATA,OAAA,EAAAA,EAAWtO,OAAQ,KACzBoP,QAAiB,OAATd,QAAS,IAATA,OAAA,EAAAA,EAAWc,SAAU,KAC7BC,aAAsB,OAATf,QAAS,IAATA,OAAA,EAAAA,EAAWe,cAAe,KACvCzG,YAAqB,OAAT0F,QAAS,IAATA,GAAA,UAAAA,EAAW1F,kBAAX,eAAuB5I,OAAQ,MAE7CkE,SAAU6K,EAXL,UAaL,cAAC,IAAK5K,KAAN,CACEsL,MAAM,8FACNzP,KAAK,WACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,uOAHpC,SAKE,cAAC,KAAD,CAAOtJ,YAAY,QAGrB,cAAC,IAAKD,KAAN,CACEsL,MAAM,oGACNzP,KAAK,WACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,6OAHpC,SAKE,cAAC,KAAD,CAAOtJ,YAAY,QAGrB,cAAC,IAAKD,KAAN,CACEsL,MAAM,2EACNzP,KAAK,OACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,iJAHpC,SAKE,cAAC,KAAD,CAAOtJ,YAAY,iBAGrB,cAAC,IAAKD,KAAN,CACEsL,MAAM,iCACNzP,KAAK,SACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,6JAHpC,SAKE,cAAC,KAAD,CAAOtJ,YAAY,aAGrB,cAAC,IAAKD,KAAN,CACEsL,MAAM,mDACNzP,KAAK,cAFP,SAIE,cAAC,KAAM0P,SAAP,CACEC,WAAS,EACTC,UAAW,IACXC,UAAQ,EACRzL,YAAY,gFAIhB,cAAC,IAAKD,KAAN,CACEsL,MAAM,yDACNzP,KAAK,aACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,4GAHpC,SAKE,cAAC,KAAD,CACEvH,MAAO,CAAC8C,MAAO,KACf0F,QAASA,EACTtK,YAAU,EACVD,YAAY,6GACZ0L,aAAc,SAACC,EAAYC,GAAb,OACsD,IAAlEA,EAAOxL,MAAMuE,cAAckH,QAAQF,EAAWhH,oBAKpD,cAAC,IAAK5E,KAAN,CACEjF,UAAU,eACVuQ,MAAM,iCAFR,SAIE,cAAC,IAAKS,KAAN,CAAWlQ,KAAK,SAAhB,SACG,kBACC,qCACE,cAAC,IAAKmE,KAAN,UACE,cAAC,KAAD,CACEC,YAAY,4EACZC,YAAU,EACV8L,IAAKtB,EACL3P,UAAU,oBAGd,cAAC,IAAKiF,KAAN,UACE,cAAC,IAAD,CAAQxB,KAAK,SAASzD,UAAU,oBAAoBkI,QAAS,WACvDyH,EAASrI,QAAQ3C,MAAMW,QACzB+J,EAAU,GAAD,oBACJ1F,GADI,CAEP,CACEpE,GAAIoE,EAAOzC,OACX5B,MAAOqK,EAASrI,QAAQ3C,MAAMW,UAGlCqK,EAASrI,QAAQ3C,MAAMW,MAAQ,KAEhC4L,OAAK,EAXR,SAYE,cAACC,GAAA,EAAD,gBAQZ,cAAC,IAAKlM,KAAN,CACEnE,KAAK,aACLyP,MAAM,kFAFR,SAIE,cAAC,KAASa,MAAV,CAAgBpR,UAAU,aAA1B,SACG2J,EAAOvE,KAAI,SAACjE,GAAD,OAAW,cAAC,KAAD,CAAUmE,MAAOnE,EAAMmE,MAAvB,SACpBnE,EAAMmE,OADiDnE,EAAMoE,WAMpE,sBAAKvF,UAAU,cAAf,UACE,cAAC,IAAKiF,KAAN,UACE,cAAC,IAAD,CAAQxB,KAAK,UAAU+B,SAAS,SAAhC,sEAKF,cAAC,IAAD,CAAM8E,GAAG,SAAT,SACGkF,EACG,cAAC,IAAD,CAAQxP,UAAU,eAAlB,oEACA,cAAC,IAAD,CAAQqR,QAAM,EAACrR,UAAU,eAAzB,uECtLCsR,GAAc,WAAO,IAAD,IAC/B,EAA0B5L,qBAA1B,mBAAOyJ,EAAP,KAAcoC,EAAd,KAEMnC,EAAY1K,aAAY,SAAAC,GAAK,OAAIA,EAAMuG,KAAKkE,aAElD,OAAO,eAAC,IAAD,CAAQpP,UAAU,mBAAlB,UACL,oBAAIA,UAAU,yBAAd,2HACA,eAAC,KAAD,CAAKwR,MAAM,MAAX,UACE,sBAAKxR,UAAU,4BAAf,UACE,qBACEA,UAAU,YACVS,KAAc,OAAT2O,QAAS,IAATA,GAAA,UAAAA,EAAWzO,iBAAX,eAAsBC,QAAtB,OAA8BuO,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOvO,OAAQ6Q,GAClD5Q,IAAI,aAEN,mBAAGb,UAAU,UAAb,UAAiC,OAAToP,QAAS,IAATA,OAAA,EAAAA,EAAWtO,OAAQ,4DAC3C,mBAAGd,UAAU,cAAb,UAAqC,OAAToP,QAAS,IAATA,GAAA,UAAAA,EAAW1F,kBAAX,eAAuB5I,OAAQ,2DAC3D,cAAC,KAAD,CACEA,KAAK,OACL4Q,aAAc,SAAChF,GACb,IAAMiF,EAAS,IAAIC,WAWnB,OAVAD,EAAOE,cAAcnF,GACrBiF,EAAOG,OAAS,WACd,IAAMC,EAAgB,CACpBC,SAAUtF,EAAEjJ,KACZwO,aAAcvF,EAAE5L,KAChBF,KAAM+Q,EAAOO,OACbvK,KAAM+E,EAAE/E,MAEV4J,EAASQ,KAEJ,GAdX,SAiBE,cAAC,IAAD,CAAQ5H,KAAM,cAACgI,GAAA,EAAD,IAAd,+FAGJ,sBAAKnS,UAAU,4BAAf,UACE,mBAAGA,UAAU,kBAAb,iIACA,cAAC,GAAD,CAAamP,MAAOA,EAAOC,UAAWA,cCvCjCgD,GAAe,SAAChS,GAC3B,IAAOiS,EAAcjS,EAAdiS,WAED3G,EAAahH,aAAY,SAAAC,GAAK,OAAIA,EAAME,UACvCyN,EAA2B5G,EAA3B4G,WAAYC,EAAe7G,EAAf6G,YAEbpO,EAAWW,cAuBjB,OANIyN,GAA8B,WAAfD,EACjB9D,KAAQ6B,QAAQ,mHACPkC,GAA8B,WAAfD,GACxB9D,KAAQ6B,QAAQ,mHAGX,eAAC,IAAD,CACLvP,KAAK,WACLwP,SAAU,CAACvI,KAAM,GACjBqG,cAAe,CACbtN,MAAgB,OAAVuR,QAAU,IAAVA,OAAA,EAAAA,EAAYvR,OAAQ,MAE5BkE,SA3ByB,SAACoB,GAC1B,OAAQkM,GACN,IAAK,SACHnO,GrByBiB7B,EqBzBC8D,ErByBF,uCAAU,WAAOjC,GAAP,SAAAC,EAAA,+EAEPd,EAAmBhB,GAFZ,OAGN,MAHM,OAGjBwB,OACXK,EAASJ,IAA6B,IAEtCI,EAASJ,IAA6B,IANV,gDAS9BI,EAASX,EAAsB,KAAEa,WATH,yDAAV,wDqBxBhB,MAEF,IAAK,SACHF,ErBQe,SAACpD,EAAQuB,GAAT,8CAAkB,WAAO6B,GAAP,SAAAC,EAAA,+EAEdd,EAAkBvC,EAAQuB,GAFZ,OAGb,MAHa,OAGxBwB,OACXK,EAASJ,IAA6B,IAEtCI,EAASJ,IAA6B,IANH,gDASrCI,EAASX,EAAsB,KAAEa,WATI,yDAAlB,sDqBRNmO,CAAQH,EAAW9M,GAAIa,IrBqBhB,IAAC9D,GqBPhB,UAQL,cAAC,IAAK2C,KAAN,CACEsL,MAAM,2EACNzP,KAAK,OACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,qIAHpC,SAKE,cAAC,KAAD,CAAOtJ,YAAY,8CAGrB,sBAAKlF,UAAU,8BAAf,UACE,cAAC,IAAKiF,KAAN,UACE,cAAC,IAAD,CAAQxB,KAAK,UAAU+B,SAAS,SAAhC,sEAKF,cAAC,IAAD,CAAM8E,GAAG,SAAT,SACGiI,EACG,cAAC,IAAD,CAAQvS,UAAU,eAAlB,oEACA,cAAC,IAAD,CAAQqR,QAAM,EAACrR,UAAU,eAAzB,uECxDCyS,I,OAAe,WAC1B,IAAMJ,EAAa3N,aAAY,SAAAC,GAAK,OAAIA,EAAME,OAAOwN,cAErD,OAAO,eAAC,IAAD,CAAQrS,UAAU,mBAAlB,UACL,oBAAIA,UAAU,yBAAd,mGACA,sBAAKA,UAAU,iCAAf,UACE,mBAAGA,UAAU,kBAAb,yGACA,cAAC,GAAD,CAAcqS,WAAYA,YCLnBK,GAAgB,SAACtS,GAAW,IAAD,EAC/BuS,EAAevS,EAAfuS,YAEDC,EAAYlO,aAAY,SAAAC,GAAK,OAAIA,EAAMkH,UACtCgH,EAA6BD,EAA7BC,YAAaC,EAAgBF,EAAhBE,aACdjO,EAASH,aAAY,SAAAC,GAAK,OAAIA,EAAME,OAAOA,UAC3C4K,EAAU5K,EAAOO,KAAI,SAAApB,GAAI,MAAK,CAACsB,MAAOtB,EAAKlD,SAC3CqD,EAAWW,cA6BjB,OAVAC,qBAAU,WACRZ,EAASD,QACR,IAEC4O,GAAgC,WAAhBD,EAClBrE,KAAQ6B,QAAQ,mHACPyC,GAAgC,WAAhBD,GACzBrE,KAAQ6B,QAAQ,mHAGX,eAAC,IAAD,CACLvP,KAAK,YACLwP,SAAU,CAACvI,KAAM,GACjBqG,cAAe,CACbtN,MAAiB,OAAX6R,QAAW,IAAXA,OAAA,EAAAA,EAAa7R,OAAQ,KAC3BG,SAAoB,OAAX0R,QAAW,IAAXA,OAAA,EAAAA,EAAa1R,UAAW,KACjCF,QAAmB,OAAX4R,QAAW,IAAXA,GAAA,UAAAA,EAAa5R,cAAb,eAAqBD,OAAQ,MAEvCkE,SAnCyB,SAACoB,GAC1B,IhByBsB9D,EgBzBhBvB,EAAS8D,EAAOiL,MAAK,SAAA9L,GAAI,OAAIA,EAAKlD,OAASsF,EAAOrF,UAAQwE,GAEhE,OAAQsN,GACN,IAAK,SACH1O,GhBqBkB7B,EgBrBC,2BAAI8D,GAAL,IAAarF,WhBqBd,uCAAU,WAAOoD,GAAP,SAAAC,EAAA,+EAERb,EAAoBjB,GAFZ,OAGP,MAHO,OAGlBwB,OACXK,EAAS6E,IAA8B,IAEvC7E,EAAS6E,IAA8B,IANV,gDAS/B7E,EAASX,EAAsB,KAAEa,WATF,yDAAV,wDgBpBjB,MAEF,IAAK,SACHF,EhBIgB,SAACnD,EAASsB,GAAV,8CAAmB,WAAO6B,GAAP,SAAAC,EAAA,+EAEhBb,EAAmBvC,EAASsB,GAFZ,OAGf,MAHe,OAG1BwB,OACXK,EAAS6E,IAA8B,IAEvC7E,EAAS6E,IAA8B,IANF,gDASvC7E,EAASX,EAAsB,KAAEa,WATM,yDAAnB,sDgBJP0O,CAASJ,EAAYpN,GAAb,YAAC,eAAoBa,GAArB,IAA6BrF,eAkB7C,UAUL,cAAC,IAAKkE,KAAN,CACEsL,MAAM,2EACNzP,KAAK,OACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,6JAHpC,SAKE,cAAC,KAAD,CAAOtJ,YAAY,wCAGrB,cAAC,IAAKD,KAAN,CACEsL,MAAM,iCACNzP,KAAK,UACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,mHAHpC,SAKE,cAAC,KAAD,CAAOtJ,YAAY,mGAGrB,cAAC,IAAKD,KAAN,CACEsL,MAAM,iCACNzP,KAAK,SACLwN,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,oFAHpC,SAKE,cAAC,KAAD,CACEvH,MAAO,CAAC8C,MAAO,KACf0F,QAASA,EACTtK,YAAU,EACVD,YAAY,qFACZ0L,aAAc,SAACC,EAAYC,GAAb,OACsD,IAAlEA,EAAOxL,MAAMuE,cAAckH,QAAQF,EAAWhH,oBAKpD,sBAAK7J,UAAU,+BAAf,UACE,cAAC,IAAKiF,KAAN,UACE,cAAC,IAAD,CAAQxB,KAAK,UAAU+B,SAAS,SAAhC,sEAKF,cAAC,IAAD,CAAM8E,GAAG,SAAT,SACGwI,EACG,cAAC,IAAD,CAAQ9S,UAAU,eAAlB,oEACA,cAAC,IAAD,CAAQqR,QAAM,EAACrR,UAAU,eAAzB,uEC1FCgT,I,OAAgB,WAC3B,IAAML,EAAcjO,aAAY,SAAAC,GAAK,OAAIA,EAAMkH,OAAO8G,eAEtD,OAAO,eAAC,IAAD,CAAQ3S,UAAU,mBAAlB,UACL,oBAAIA,UAAU,yBAAd,mGACA,sBAAKA,UAAU,kCAAf,UACE,mBAAGA,UAAU,kBAAb,yGACA,cAAC,GAAD,CAAe2S,YAAaA,YCLrBM,I,OAAY,SAAC7S,GACxB,IAAO8S,EAAqB9S,EAArB8S,KAAMC,EAAe/S,EAAf+S,IAAKC,EAAUhT,EAAVgT,OAEZjP,EAAWW,cAEjB,OAAO,cAAC,IAAD,CAAQ9E,UAAU,kBAAlB,SACL,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,YAAf,SAA4BkT,IAC5B,qBAAKlT,UAAU,eAAf,SAA+BmT,IAC/B,qBAAKnT,UAAU,kBAAf,SAAkCoT,IAClC,cAAC,IAAD,CACE9I,GAAG,SACHpC,QAAS,WAAO/D,EAASX,EAAsB,QAFjD,SAIE,cAAC,IAAD,CAAQC,KAAK,UAAb,qDCyDO4P,GAnEH,WACV,IAAMrE,EAAStK,aAAY,SAAAC,GAAK,OAAIA,EAAMqJ,KAAKgB,UACzCrL,EAAQe,aAAY,SAAAC,GAAK,OAAIA,EAAMsH,MAAMtI,SAE/C,OAAIA,EACK,cAAC,GAAD,CACLuP,KAAMvP,EAAMG,OACZqP,IAAKxP,EAAM2P,WAAa3P,EAAM2P,WAAa,0IAC3CF,OAAQzP,EAAMrB,OAIX,eAAC,IAAD,WACL,cAAC,IAAD,CACEiR,OAAK,EACL3S,KAAK,IACL6I,OAAQ,kBAAM,cAAC,IAAD,CAAUa,GAAG,cAG7B,cAAC,GAAD,CACE1J,KAAK,SACLmO,SAAS,SACTC,OAAQA,EAHV,SAKE,cAAC,GAAD,MAGF,cAAC,GAAD,CACEpO,KAAK,SACLmO,SAAS,SACTC,QAASA,EAHX,SAKE,cAAC,GAAD,MAGF,cAAC,GAAD,CACEpO,KAAK,YACLmO,SAAS,SACTC,OAAQA,EAHV,SAKE,cAAC,GAAD,MAGF,cAAC,GAAD,CACEpO,KAAK,aACLmO,SAAS,SACTC,OAAQA,EAHV,SAKE,cAAC,GAAD,MAGF,cAAC,GAAD,CACEpO,KAAK,cACLmO,SAAS,SACTC,OAAQA,EAHV,SAKE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOvF,OAAQ,kBAAM,cAAC,GAAD,CACnByJ,KAAM,IACNC,IAAI,2GACJC,OAAO,+L,oBC1EPI,GAAe,CACnBxE,QAAQ,EACRjB,WAAY,MAsBC0F,GAnBK,WAAmC,IAAlC9O,EAAiC,uDAAzB6O,GAAcvP,EAAW,uCACpD,OAAQA,EAAOR,MACb,IAAK,qBACH,OAAO,2BACFkB,GADL,IAEEqK,QAAQ,IAGZ,IAAK,uBACH,OAAO,2BACFrK,GADL,IAEEoJ,WAAY9J,EAAOP,UAGvB,QACE,OAAOiB,ICpBP6O,GAAe,CACnB5O,OAAQ,GACRqB,WAAY,KACZhD,YAAa,IA4BAyQ,GAzBO,WAAmC,IAAlC/O,EAAiC,uDAAzB6O,GAAcvP,EAAW,uCACtD,OAAQA,EAAOR,MACb,IAAK,4BACH,OAAO,2BACFkB,GADL,IAEEC,OAAQX,EAAOP,UAGnB,IAAK,4BACH,OAAO,2BACFiB,GADL,IAEEsB,WAAYhC,EAAOP,UAGvB,IAAK,0BACH,OAAO,2BACFiB,GADL,IAEE1B,YAAagB,EAAOP,UAGxB,QACE,OAAOiB,IC3BP6O,GAAe,CACnBtI,KAAM,GACNkE,UAAW,KACXzJ,YAAa,EACbM,WAAY,KACZqJ,WAAY,GACZC,UAAW,KACXC,YAAY,GAoDCmE,GAjDK,WAAmC,IAAlChP,EAAiC,uDAAzB6O,GAAcvP,EAAW,uCACpD,OAAQA,EAAOR,MACb,IAAK,wBACH,OAAO,2BACFkB,GADL,IAEEuG,KAAMjH,EAAOP,UAGjB,IAAK,wBACH,OAAO,2BACFiB,GADL,IAEEsB,WAAYhC,EAAOP,UAGvB,IAAK,uBACH,OAAO,2BACFiB,GADL,IAEEyK,UAAWnL,EAAOP,UAGtB,IAAK,sBACH,OAAO,2BACFiB,GADL,IAEE2K,WAAYrL,EAAOP,UAGvB,IAAK,sBACH,OAAO,2BACFiB,GADL,IAEE4K,UAAWtL,EAAOP,UAGtB,IAAK,uBACH,OAAO,2BACFiB,GADL,IAEE6K,WAAYvL,EAAOP,UAGvB,IAAK,wBACH,OAAO,2BACFiB,GADL,IAEEgB,YAAa1B,EAAOP,UAGxB,QACE,OAAOiB,ICvDP6O,GAAe,CACnB3O,OAAQ,GACRoB,WAAY,KACZqM,WAAY,KACZD,WAAY,KACZE,aAAa,GAwCAqB,GArCO,WAAmC,IAAlCjP,EAAiC,uDAAzB6O,GAAcvP,EAAW,uCACtD,OAAQA,EAAOR,MACb,IAAK,4BACH,OAAO,2BACFkB,GADL,IAEEE,OAAQZ,EAAOP,UAGnB,IAAK,4BACH,OAAO,2BACFiB,GADL,IAEEsB,WAAYhC,EAAOP,UAGvB,IAAK,0BACH,OAAO,2BACFiB,GADL,IAEE0N,WAAYpO,EAAOP,UAGvB,IAAK,yBACH,OAAO,2BACFiB,GADL,IAEE2N,WAAYrO,EAAOP,UAGvB,IAAK,0BACH,OAAO,2BACFiB,GADL,IAEE4N,YAAatO,EAAOP,UAGxB,QACE,OAAOiB,ICzCP6O,GAAe,CACnB3H,OAAQ,GACR5F,WAAY,KACZ0M,YAAa,KACbE,YAAa,KACbC,cAAc,GAwCDe,GArCO,WAAmC,IAAlClP,EAAiC,uDAAzB6O,GAAcvP,EAAW,uCACtD,OAAQA,EAAOR,MACb,IAAK,4BACH,OAAO,2BACFkB,GADL,IAEEkH,OAAQ5H,EAAOP,UAGnB,IAAK,4BACH,OAAO,2BACFiB,GADL,IAEEsB,WAAYhC,EAAOP,UAGvB,IAAK,2BACH,OAAO,2BACFiB,GADL,IAEEgO,YAAa1O,EAAOP,UAGxB,IAAK,0BACH,OAAO,2BACFiB,GADL,IAEEkO,YAAa5O,EAAOP,UAGxB,IAAK,2BACH,OAAO,2BACFiB,GADL,IAEEmO,aAAc7O,EAAOP,UAGzB,QACE,OAAOiB,ICzCP6O,GAAe,CACnBtH,iBAAkB,EAClBvI,MAAO,MAsBMmQ,GAnBM,WAAmC,IAAlCnP,EAAiC,uDAAzB6O,GAAcvP,EAAW,uCACrD,OAAQA,EAAOR,MACb,IAAK,+BACH,OAAO,2BACFkB,GADL,IAEEuH,iBAAkBjI,EAAOP,UAG7B,IAAK,kBACH,OAAO,2BACFiB,GADL,IAEEhB,MAAOM,EAAOP,UAGlB,QACE,OAAOiB,ICXPoP,GAAcC,aAAgB,CAClChG,KAAMyF,GACN7O,OAAQ8O,GACRxI,KAAMyI,GACN9O,OAAQ+O,GACR/H,OAAQgI,GACR5H,MAAO6H,KAKMG,GAFDC,aAAYH,GAAaI,aAAgBC,OCNxCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrR,MAAK,YAAkD,IAA/CsR,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASpL,OACP,cAAC,IAAD,CAAUwK,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJa,SAASC,eAAe,SAG1BV,O","file":"static/js/main.bfdf9db5.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport './Order.css'\r\nimport {CheckSquareOutlined, CloseSquareOutlined} from \"@ant-design/icons\";\r\n\r\nconst carOption = (condition, text) => {\r\n  return condition\r\n    ? <div className=\"orderCarOption\">\r\n      <CheckSquareOutlined className=\"isCarOption\"/>\r\n      <p>{text}</p>\r\n    </div>\r\n    : <div className=\"orderCarOption\">\r\n      <CloseSquareOutlined className=\"isNotCarOption\"/>\r\n      <p className=\"isNotCarOptionText\">{text}</p>\r\n    </div>\r\n}\r\n\r\nexport const Order = (props) => {\r\n  const {order} = props\r\n  const dateFrom = new Date(order?.dateFrom)\r\n  const dateTo = new Date(order?.dateTo)\r\n\r\n  return <div className=\"orderContent\">\r\n    <div className=\"orderImageBlock\">\r\n      <img\r\n        src={order?.carId?.thumbnail.path}\r\n        alt=\"carImage\"\r\n        className=\"orderCarImage\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"orderInfoBlock\">\r\n      <p>\r\n        <span>{order?.carId?.name}</span>\r\n        {order?.cityId?.name && \" в \"}\r\n        <span>{order?.cityId?.name}</span>\r\n        {order?.pointId?.address && \", \"}\r\n        {order?.pointId?.address}\r\n      </p>\r\n      <p>{dateFrom.toLocaleString()} — {dateTo.toLocaleString()}</p>\r\n      <p>Цвет: <span>{order?.color}</span></p>\r\n    </div>\r\n\r\n    <div className=\"orderOptionsBlock\">\r\n      {carOption(order?.isFullTank, \"Полный бак\")}\r\n      {carOption(order?.isNeedChildChair, \"Детское кресло\")}\r\n      {carOption(order?.isRightWheel, \"Правый руль\")}\r\n    </div>\r\n\r\n    <div className=\"orderPriceBlock\">\r\n      <p className=\"orderPrice\">{order?.price} ₽</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `Bearer ${sessionStorage.getItem(\"access_token\")}`\r\n  },\r\n});\r\n\r\nconst sortParams = (sorters) => {\r\n  let sorterParams = ``\r\n  if (sorters && sorters.field && sorters.sortDirection) {\r\n    sorterParams += `?sort[${sorters.field}]=${sorters.sortDirection}`\r\n  }\r\n  return sorterParams\r\n}\r\n\r\nconst putRequest = (url, data) => {\r\n  return instance.put(url, data, {\r\n    headers: {\r\n      \"Authorization\": `Bearer ${sessionStorage.getItem(\"access_token\")}`\r\n    }\r\n  })\r\n}\r\n\r\nconst postRequest = (url, data) => {\r\n  return instance.post(url, data, {\r\n    headers: {\r\n      \"Authorization\": `Bearer ${sessionStorage.getItem(\"access_token\")}`\r\n    }\r\n  })\r\n}\r\n\r\nconst deleteRequest = (url) => {\r\n  return instance.delete(url, {\r\n    headers: {\r\n      \"Authorization\": `Bearer ${sessionStorage.getItem(\"access_token\")}`\r\n    }\r\n  })\r\n}\r\n\r\nconst getRequest = (url) => {\r\n  return instance.get(url, {\r\n    headers: {\r\n      \"Authorization\": `Bearer ${sessionStorage.getItem(\"access_token\")}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const ordersAPI = {\r\n  getOrders(page, limit, filters) {\r\n    let filterParams = ``\r\n    if (filters) {\r\n      if (filters.cityId) filterParams += `&cityId=${filters.cityId}`\r\n      if (filters.orderStatus) filterParams += `&orderStatusId=${filters.orderStatus}`\r\n      if (filters.dateFrom) filterParams += `&dateFrom%5B%24gt%5D=${filters.dateFrom}`\r\n    }\r\n    return getRequest(`db/order?page=${page}&limit=${limit}${filterParams}`)\r\n  },\r\n  getOrderStatus() {\r\n    return getRequest(`db/orderStatus`).then(r => r.data.data)\r\n  }\r\n}\r\n\r\nexport const carsAPI = {\r\n  getCars(page = 1, limit = 10, sorters) {\r\n    const url = sorters\r\n      ? `db/car${sortParams(sorters)}&page=${page}&limit=${limit}`\r\n      : `db/car?page=${page}&limit=${limit}`\r\n    return getRequest(url)\r\n  },\r\n  getCategories() {\r\n    return getRequest(`db/category`).then(r => r.data.data)\r\n  },\r\n  putCar(carId, data) {\r\n    return putRequest(`db/car/${carId}`, data)\r\n  },\r\n  postCar(data) {\r\n    return postRequest(`db/car`, data)\r\n  },\r\n  deleteCar(carId) {\r\n    return deleteRequest(`db/car/${carId}`)\r\n  }\r\n}\r\n\r\nexport const citiesAPI = {\r\n  getCities(sorters) {\r\n    return getRequest(`db/city${sortParams(sorters)}`)\r\n  },\r\n  putCity(cityId, data) {\r\n    return putRequest(`db/city/${cityId}`, data)\r\n  },\r\n  postCity(data) {\r\n    return postRequest(`db/city`, data)\r\n  }\r\n}\r\n\r\nexport const pointsAPI = {\r\n  getPoints(sorters) {\r\n    return getRequest(`db/point${sortParams(sorters)}`)\r\n  },\r\n  putPoint(pointId, data) {\r\n    return putRequest(`db/point/${pointId}`, data)\r\n  },\r\n  postPoint(data) {\r\n    return postRequest(`db/point`, data)\r\n  }\r\n}","export const utilsActions = {\r\n  setAdminCurrentPage: (page) => ({type: \"UTILS/SET_ADMIN_CURRENT_PAGE\", payload: page}),\r\n  setError: (error) => ({type: \"UTILS/SET_ERROR\", payload: error}),\r\n}\r\n\r\nexport const setAdminCurrentPage = (page) => async (dispatch) => {\r\n  dispatch(utilsActions.setAdminCurrentPage(page))\r\n}\r\n","import {ordersAPI} from \"../../api/restapi\";\r\nimport {utilsActions} from \"./utilsActions\";\r\n\r\nexport const ordersActions = {\r\n  setOrdersPortion: (data) => ({type: \"ORDERS/SET_ORDERS_PORTION\", payload: data}),\r\n  setTotalOrdersCount: (count) => ({type: \"ORDERS/ORDERS_TOTAL_COUNT\", payload: count}),\r\n  getOrderStatus: (status) => ({type: \"ORDERS/SET_ORDER_STATUS\", payload: status}),\r\n}\r\n\r\nexport const getOrders = (page = 1, limit = 20, filters = null) => async (dispatch) => {\r\n  try {\r\n    const response = await ordersAPI.getOrders(page, limit, filters)\r\n    dispatch(ordersActions.setTotalOrdersCount(response.data.count))\r\n    dispatch(ordersActions.setOrdersPortion(response.data.data))\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}\r\n\r\nexport const getOrderStatus = () => async (dispatch) => {\r\n  try {\r\n    const data = await ordersAPI.getOrderStatus()\r\n    dispatch(ordersActions.getOrderStatus(data))\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}","import {citiesAPI} from \"../../api/restapi\";\r\nimport {utilsActions} from \"./utilsActions\";\r\n\r\nexport const citiesActions = {\r\n  setCitiesPortion: (data) => ({type: \"CITIES/SET_CITIES_PORTION\", payload: data}),\r\n  setTotalCitiesCount: (count) => ({type: \"CITIES/CITIES_TOTAL_COUNT\", payload: count}),\r\n  setCityToEdit: (city) => ({type: \"CITIES/SET_CITY_TO_EDIT\", payload: city}),\r\n  setCityAction: (action) => ({type: \"CITIES/SET_CITY_ACTION\", payload: action}),\r\n  setCitySuccess: (status) => ({type: \"CITIES/SET_CITY_SUCCESS\", payload: status}),\r\n}\r\n\r\nexport const getCities = (sorters = null) => async (dispatch) => {\r\n  try {\r\n    const response = await citiesAPI.getCities(sorters)\r\n    dispatch(citiesActions.setTotalCitiesCount(response.data.count))\r\n    dispatch(citiesActions.setCitiesPortion(response.data.data))\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}\r\n\r\nexport const setCityToEdit = (city) => async (dispatch) => {\r\n  dispatch(citiesActions.setCityToEdit(city))\r\n}\r\n\r\nexport const setCityAction = (action) => async (dispatch) => {\r\n  dispatch(citiesActions.setCitySuccess(false))\r\n  dispatch(citiesActions.setCityAction(action))\r\n}\r\n\r\nexport const putCity = (cityId, data) => async (dispatch) => {\r\n  try {\r\n    const response = await citiesAPI.putCity(cityId, data)\r\n    if (response.status === 200) {\r\n      dispatch(citiesActions.setCitySuccess(true))\r\n    } else {\r\n      dispatch(citiesActions.setCitySuccess(false))\r\n    }\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}\r\n\r\nexport const postCity = (data) => async (dispatch) => {\r\n  try {\r\n    const response = await citiesAPI.postCity(data)\r\n    if (response.status === 200) {\r\n      dispatch(citiesActions.setCitySuccess(true))\r\n    } else {\r\n      dispatch(citiesActions.setCitySuccess(false))\r\n    }\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}","/* eslint-disable react/prop-types */\r\nimport React, {useEffect} from \"react\";\r\nimport {Button, Form, Select} from \"antd\";\r\nimport './OrdersFilterForm.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getOrderStatus} from \"../../../../redux/actions/ordersActions\";\r\nimport {getCities} from \"../../../../redux/actions/citiesActions\";\r\n\r\nexport const OrdersFilterForm = (props) => {\r\n  const {onFilterFormFinish} = props\r\n  const orderStatus = useSelector(state => state.orders.orderStatus)\r\n  const cities = useSelector(state => state.cities.cities)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderStatus())\r\n    dispatch(getCities())\r\n  }, [])\r\n\r\n  return <Form\r\n    name=\"ordersFilterForm\"\r\n    className=\"filterForm\"\r\n    onFinish={onFilterFormFinish}\r\n  >\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"cityId\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите город\"\r\n        allowClear\r\n      >\r\n        {cities.map(city =>\r\n          <Select.Option\r\n            key={city.id}\r\n            value={city.id}\r\n          >{city.name}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"orderStatus\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите статус заказа\"\r\n        allowClear\r\n      >\r\n        {orderStatus.map(status =>\r\n          <Select.Option\r\n            key={status.id}\r\n            value={status.id}\r\n          >{status.name}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"dateFrom\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите промежуток\"\r\n        allowClear\r\n      >\r\n        <Select.Option value=\"month\">За последний месяц</Select.Option>\r\n        <Select.Option value=\"week\">За последнюю неделю</Select.Option>\r\n        <Select.Option value=\"day\">За последний день</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Применить\r\n      </Button>\r\n    </Form.Item>\r\n  </Form>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Collapse, Layout, Pagination} from \"antd\";\r\nimport './OrdersList.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {Order} from \"../../components/Order\";\r\nimport {OrdersFilterForm} from \"./OrdersFilterForm\";\r\nimport {getOrders} from \"../../../../redux/actions/ordersActions\";\r\n\r\nexport const OrdersList = () => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [limit, setLimit] = useState(10)\r\n  const [filters, setFilters] = useState(null)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n\r\n  const ordersData = useSelector(state => state.orders)\r\n  const {orders, totalCount} = ordersData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const paginationHandler = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  const onFilterFormFinish = (values) => {\r\n    const date = new Date()\r\n    let dateFrom = \"\"\r\n    switch (values.dateFrom) {\r\n      case \"month\": {\r\n        dateFrom = date.setMonth(date.getMonth() - 1)\r\n        break\r\n      }\r\n      case \"week\": {\r\n        dateFrom = date.setDate(date.getDate() - 7)\r\n        break\r\n      }\r\n      case \"day\": {\r\n        dateFrom = date.setDate(date.getDate() - 1)\r\n        break\r\n      }\r\n      default:\r\n    }\r\n    setFilters({...values, dateFrom})\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders(currentPage - 1, limit, filters))\r\n  }, [currentPage, filters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Заказы</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Фильтры\">\r\n            <OrdersFilterForm onFilterFormFinish={onFilterFormFinish}/>\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <OrdersFilterForm onFilterFormFinish={onFilterFormFinish}/>\r\n      }\r\n      <div\r\n        className=\"ordersList\"\r\n        style={collapsedItems.length ? {height: \"35%\"} : {height: \"70%\"}}\r\n      >\r\n        {orders.map(order => <Order order={order} key={order.id}/>)}\r\n      </div>\r\n      <Pagination\r\n        total={totalCount}\r\n        pageSize={20}\r\n        current={currentPage}\r\n        showQuickJumper\r\n        showSizeChanger={false}\r\n        showTotal={total => `Всего ${total} заказов`}\r\n        onChange={paginationHandler}\r\n        simple={sizeOfPage.xs}\r\n        size={sizeOfPage.lg ? \"default\" : \"small\"}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","export default __webpack_public_path__ + \"static/media/Logo Icon.830257bf.svg\";","export default __webpack_public_path__ + \"static/media/avatar.8845cada.png\";","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Avatar, Badge, Button, Col, Row} from \"antd\";\r\nimport {BellFilled, MenuUnfoldOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport logo from \"../../../assets/Logo Icon.svg\";\r\nimport avatar from \"../../../assets/avatar.png\";\r\nimport './AdminPageHeader.css'\r\n\r\nexport const AdminPageHeader = (props) => {\r\n  const {setVisible} = props\r\n\r\n  const pageSize = useBreakpoint()\r\n  \r\n  return <Row className=\"adminPageHeader\">\r\n    <Col\r\n      xs={{span: 15}}\r\n      md={{span: 7}}\r\n      lg={{span: 6}}\r\n      xl={{span: 4}}\r\n      className=\"adminPageCompany\"\r\n    >\r\n      <Button className=\"sideMenuButton\" onClick={() => setVisible(true)}>\r\n        <MenuUnfoldOutlined/>\r\n      </Button>\r\n      <img\r\n        src={logo}\r\n        alt=\"logo\"\r\n        className=\"logoImg\"\r\n      />\r\n      <p className=\"logoTitle\">Need For Drive</p>\r\n    </Col>\r\n    <Col\r\n      className=\"adminPageSearch\"\r\n      xs={{offset: 3, span: 3}}\r\n      md={{offset: 11, span: 2}}\r\n      lg={{offset: 12}}\r\n      xl={{offset: 17, span: 1}}\r\n    >\r\n      <SearchOutlined className=\"searchIcon\"/>\r\n    </Col>\r\n    <Col\r\n      xs={pageSize.xs && {offset: 3, span: 3}}\r\n      md={{span: 2}}\r\n      xl={{span: 1}}\r\n      className=\"adminPageHeaderNotification\"\r\n    >\r\n      <Badge\r\n        count={2}\r\n        size=\"small\"\r\n      >\r\n        <BellFilled className=\"notificationIcon\"/>\r\n      </Badge>\r\n    </Col>\r\n    <Col\r\n      xs={{span: 3}}\r\n      md={{span: 2}}\r\n      xl={{span: 1}}\r\n      className=\"adminUserAccount\"\r\n    >\r\n      <Avatar src={avatar}/>\r\n    </Col>\r\n  </Row>\r\n}","import {carsAPI} from \"../../api/restapi\";\r\nimport {utilsActions} from \"./utilsActions\";\r\n\r\nexport const carsActions = {\r\n  setCarsPortion: (data) => ({type: \"CARS/SET_CARS_PORTION\", payload: data}),\r\n  setTotalCarsCount: (count) => ({type: \"CARS/CARS_TOTAL_COUNT\", payload: count}),\r\n  setCarToEdit: (car) => ({type: \"CARS/SET_CAR_TO_EDIT\", payload: car}),\r\n  setCategories: (data) => ({type: \"CARS/SET_CATEGORIES\", payload: data}),\r\n  setCarAction: (action) => ({type: \"CARS/SET_CAR_ACTION\", payload: action}),\r\n  setCarSuccess: (status) => ({type: \"CARS/SET_CAR_SUCCESS\", payload: status}),\r\n  setCurrentPage: (page) => ({type: \"CARS/SET_CURRENT_PAGE\", payload: page}),\r\n}\r\n\r\nexport const getCars = (page, limit, sorters = null) => async (dispatch) => {\r\n  try {\r\n    const response = await carsAPI.getCars(page, limit, sorters)\r\n    dispatch(carsActions.setTotalCarsCount(response.data.count))\r\n    dispatch(carsActions.setCarsPortion(response.data.data))\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}\r\n\r\nexport const getCategories = () => async (dispatch) => {\r\n  try {\r\n    const data = await carsAPI.getCategories()\r\n    dispatch(carsActions.setCategories(data))\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}\r\n\r\nexport const setCarToEdit = (car) => async (dispatch) => {\r\n  dispatch(carsActions.setCarToEdit(car))\r\n}\r\n\r\nexport const setCarAction = (action) => async (dispatch) => {\r\n  dispatch(carsActions.setCarSuccess(false))\r\n  dispatch(carsActions.setCarAction(action))\r\n}\r\n\r\nexport const putCar = (carId, data) => async (dispatch) => {\r\n  try {\r\n    const response = await carsAPI.putCar(carId, data)\r\n    if (response.status === 200) {\r\n      dispatch(carsActions.setCarSuccess(true))\r\n    } else {\r\n      dispatch(carsActions.setCarSuccess(false))\r\n    }\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}\r\n\r\nexport const postCar = (data) => async (dispatch) => {\r\n  try {\r\n    const response = await carsAPI.postCar(data)\r\n    if (response.status === 200) {\r\n      dispatch(carsActions.setCarSuccess(true))\r\n    } else {\r\n      dispatch(carsActions.setCarSuccess(false))\r\n    }\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}\r\n\r\nexport const deleteCar = (carId) => async (dispatch) => {\r\n  try {\r\n    await carsAPI.deleteCar(carId)\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}\r\n\r\nexport const setCurrentPage = (page) => async (dispatch) => {\r\n  dispatch(carsActions.setCurrentPage(page))\r\n}","import {pointsAPI} from \"../../api/restapi\";\r\nimport {utilsActions} from \"./utilsActions\";\r\n\r\nexport const pointsActions = {\r\n  setPointsPortion: (data) => ({type: \"POINTS/SET_POINTS_PORTION\", payload: data}),\r\n  setTotalPointsCount: (count) => ({type: \"POINTS/POINTS_TOTAL_COUNT\", payload: count}),\r\n  setPointToEdit: (point) => ({type: \"POINTS/SET_POINT_TO_EDIT\", payload: point}),\r\n  setPointAction: (action) => ({type: \"POINTS/SET_POINT_ACTION\", payload: action}),\r\n  setPointSuccess: (status) => ({type: \"POINTS/SET_POINT_SUCCESS\", payload: status}),\r\n}\r\n\r\nexport const getPoints = (sorters = null) => async (dispatch) => {\r\n  try {\r\n    const response = await pointsAPI.getPoints(sorters)\r\n    dispatch(pointsActions.setTotalPointsCount(response.data.count))\r\n    dispatch(pointsActions.setPointsPortion(response.data.data))\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}\r\n\r\nexport const setPointToEdit = (point) => async (dispatch) => {\r\n  dispatch(pointsActions.setPointToEdit(point))\r\n}\r\n\r\nexport const setPointAction = (action) => async (dispatch) => {\r\n  dispatch(pointsActions.setPointSuccess(false))\r\n  dispatch(pointsActions.setPointAction(action))\r\n}\r\n\r\nexport const putPoint = (pointId, data) => async (dispatch) => {\r\n  try {\r\n    const response = await pointsAPI.putPoint(pointId, data)\r\n    if (response.status === 200) {\r\n      dispatch(pointsActions.setPointSuccess(true))\r\n    } else {\r\n      dispatch(pointsActions.setPointSuccess(false))\r\n    }\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}\r\n\r\nexport const postPoint = (data) => async (dispatch) => {\r\n  try {\r\n    const response = await pointsAPI.postPoint(data)\r\n    if (response.status === 200) {\r\n      dispatch(pointsActions.setPointSuccess(true))\r\n    } else {\r\n      dispatch(pointsActions.setPointSuccess(false))\r\n    }\r\n  } catch (e) {\r\n    dispatch(utilsActions.setError(e.response))\r\n  }\r\n}","import React from \"react\";\r\nimport {Button, Image, Modal, Space} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ExclamationCircleOutlined} from \"@ant-design/icons\";\r\nimport {deleteCar, getCars, setCarAction, setCarToEdit, setCurrentPage} from \"../../redux/actions/carsActions\";\r\nimport {setCityAction, setCityToEdit} from \"../../redux/actions/citiesActions\";\r\nimport {setPointAction, setPointToEdit} from \"../../redux/actions/pointsActions\";\r\n\r\nexport const carsColumns = [\r\n  {\r\n    title: 'Категория',\r\n    dataIndex: 'categoryId',\r\n    key: 'categoryId',\r\n    render: categoryId => `${categoryId?.name}`\r\n  },\r\n  {\r\n    title: 'Цвета',\r\n    dataIndex: 'colors',\r\n    key: 'colors',\r\n    render: colors => colors.map((color, index) => {\r\n      return `${color.toUpperCase()} ${index !== colors.length - 1 ? \", \" : \"\"}`\r\n    })\r\n  },\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Номер авто',\r\n    key: 'number',\r\n    dataIndex: 'number',\r\n  },\r\n  {\r\n    title: 'Цена',\r\n    key: 'priceMin',\r\n    dataIndex: 'priceMin',\r\n  },\r\n  {\r\n    title: 'Фото',\r\n    key: 'thumbnail',\r\n    dataIndex: 'thumbnail',\r\n    render: thumbnail => (\r\n      <Image\r\n        src={thumbnail?.path}\r\n        alt=\"carImage\"\r\n        preview={false}\r\n        width={100}\r\n      />\r\n    )\r\n  },\r\n  {\r\n    title: 'Действия',\r\n    key: 'actions',\r\n    render: (car) => {\r\n      const dispatch = useDispatch()\r\n\r\n      const showConfirm = () => {\r\n        Modal.confirm({\r\n          title: 'Точно удалить машину?',\r\n          icon: <ExclamationCircleOutlined/>,\r\n          onOk() {\r\n            dispatch(deleteCar(car.id))\r\n            dispatch(setCurrentPage(1))\r\n            dispatch(getCars(0))\r\n          }\r\n        });\r\n      }\r\n\r\n      return <Space>\r\n        <Link to=\"car-edit\" onClick={() => {\r\n          dispatch(setCarAction(\"update\"))\r\n          dispatch(setCarToEdit(car))\r\n        }}>Изменить</Link>\r\n        <Button type=\"link\" onClick={() => {\r\n          dispatch(showConfirm)\r\n        }}>Удалить</Button>\r\n      </Space>\r\n    }\r\n  },\r\n];\r\n\r\nexport const citiesColumns = [\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Действия',\r\n    key: 'actions',\r\n    render: (city) => {\r\n      const dispatch = useDispatch()\r\n\r\n      return <Link to=\"city-edit\" onClick={() => {\r\n        dispatch(setCityAction(\"update\"))\r\n        dispatch(setCityToEdit(city))\r\n      }}>Изменить</Link>\r\n    }\r\n  },\r\n];\r\n\r\nexport const pointsColumns = [\r\n  {\r\n    title: 'Город',\r\n    dataIndex: 'cityId',\r\n    key: 'cityId',\r\n    render: cityId => cityId?.name\r\n  },\r\n  {\r\n    title: 'Адрес',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'Описание',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Действия',\r\n    key: 'actions',\r\n    render: (point) => {\r\n      const dispatch = useDispatch()\r\n\r\n      return <Link to=\"point-edit\" onClick={() => {\r\n        dispatch(setPointAction(\"update\"))\r\n        dispatch(setPointToEdit(point))\r\n      }}>Изменить</Link>\r\n    }\r\n  },\r\n];","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Button, Form, Select} from \"antd\";\r\n\r\nexport const SorterForm = (props) => {\r\n  const {fields, onSorterFormFinish} = props\r\n\r\n  return <Form\r\n    className=\"filterForm\"\r\n    name=\"sorterForm\"\r\n    onFinish={onSorterFormFinish}\r\n  >\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"field\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите поле\"\r\n        allowClear\r\n      >\r\n        {fields.map(field =>\r\n          <Select.Option\r\n            key={field.idName}\r\n            value={field.idName}\r\n          >{field.name}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"sortDirection\"\r\n    >\r\n      <Select\r\n        placeholder=\"Сортировка по...\"\r\n        allowClear\r\n      >\r\n        <Select.Option value={1}>Возрастанию</Select.Option>\r\n        <Select.Option value={-1}>Убыванию</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Применить\r\n      </Button>\r\n    </Form.Item>\r\n  </Form>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './CarsTable.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Collapse, Layout, Table} from \"antd\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {carsColumns} from \"../../tablesColumns\";\r\nimport {getCars, setCarAction, setCarToEdit, setCurrentPage} from \"../../../../redux/actions/carsActions\";\r\nimport {SorterForm} from \"../../components/SorterForm\";\r\n\r\nexport const CarsTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n  const [sorters, setSorters] = useState(null)\r\n\r\n  const carsData = useSelector(state => state.cars)\r\n  const {cars, totalCount, currentPage} = carsData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const onSorterFormFinish = (values) => {\r\n    setSorters(values)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getCars(currentPage - 1, 10, sorters))\r\n    setLoading(false)\r\n  }, [currentPage, sorters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Автомобили</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Сортировки\">\r\n            <SorterForm\r\n              fields={[\r\n                {idName: \"categoryId\", name: \"Категория\"},\r\n                {idName: \"name\", name: \"Наименование\"},\r\n                {idName: \"priceMin\", name: \"Цена\"}\r\n              ]}\r\n              onSorterFormFinish={onSorterFormFinish}\r\n            />\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <SorterForm\r\n          fields={[\r\n            {idName: \"categoryId\", name: \"Категория\"},\r\n            {idName: \"name\", name: \"Наименование\"},\r\n            {idName: \"priceMin\", name: \"Цена\"}\r\n          ]}\r\n          onSorterFormFinish={onSorterFormFinish}\r\n        />\r\n      }\r\n      <Link to=\"car-edit\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"addEntityButton\"\r\n          onClick={() => {\r\n            dispatch(setCarAction(\"create\"))\r\n            dispatch(setCarToEdit(null))\r\n          }}\r\n        >Добавить авто</Button>\r\n      </Link>\r\n      <div\r\n        className=\"carsTable\"\r\n        style={collapsedItems.length ? {height: \"55%\"} : {height: \"85%\"}}\r\n      >\r\n        <Table\r\n          bordered\r\n          columns={carsColumns}\r\n          dataSource={cars}\r\n          loading={loading}\r\n          rowKey={car => car.id}\r\n          pagination={{\r\n            total: totalCount,\r\n            pageSize: 10,\r\n            current: currentPage,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} авто`,\r\n            onChange: page => {\r\n              dispatch(setCurrentPage(page))\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout.Content>\r\n  </>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Collapse, Layout, Table} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {citiesColumns} from \"../../tablesColumns\";\r\nimport './CitiesTable.css'\r\nimport {getCities, setCityAction, setCityToEdit} from \"../../../../redux/actions/citiesActions\";\r\nimport {SorterForm} from \"../../components/SorterForm\";\r\n\r\nexport const CitiesTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n  const [sorters, setSorters] = useState(null)\r\n\r\n  const citiesData = useSelector(state => state.cities)\r\n  const {cities, totalCount} = citiesData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const onSorterFormFinish = (values) => {\r\n    setSorters(values)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getCities(sorters))\r\n    setLoading(false)\r\n  }, [sorters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Города</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Сортировки\">\r\n            <SorterForm\r\n              fields={[\r\n                {idName: \"name\", name: \"Наименование\"}\r\n              ]}\r\n              onSorterFormFinish={onSorterFormFinish}\r\n            />\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <SorterForm\r\n          fields={[\r\n            {idName: \"name\", name: \"Наименование\"}\r\n          ]}\r\n          onSorterFormFinish={onSorterFormFinish}\r\n        />\r\n      }\r\n      <Link to=\"city-edit\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"addEntityButton\"\r\n          onClick={() => {\r\n            dispatch(setCityAction(\"create\"))\r\n            dispatch(setCityToEdit(null))\r\n          }}\r\n        >Добавить город</Button>\r\n      </Link>\r\n      <div\r\n        className=\"citiesTable\"\r\n        style={collapsedItems.length ? {height: \"60%\"} : {height: \"85%\"}}\r\n      >\r\n        <Table\r\n          bordered\r\n          columns={citiesColumns}\r\n          dataSource={cities}\r\n          loading={loading}\r\n          rowKey={city => city.id}\r\n          pagination={{\r\n            total: totalCount,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} городов`,\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout.Content>\r\n  </>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Collapse, Layout, Table} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {pointsColumns} from \"../../tablesColumns\";\r\nimport './PointsTable.css'\r\nimport {getPoints, setPointAction, setPointToEdit} from \"../../../../redux/actions/pointsActions\";\r\nimport {SorterForm} from \"../../components/SorterForm\";\r\n\r\nexport const PointsTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n  const [sorters, setSorters] = useState(null)\r\n\r\n  const pointsData = useSelector(state => state.points)\r\n  const {points, totalCount} = pointsData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const onSorterFormFinish = (values) => {\r\n    setSorters(values)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getPoints(sorters))\r\n    setLoading(false)\r\n  }, [sorters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Пункты</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Сортировки\">\r\n            <SorterForm\r\n              fields={[\r\n                {idName: \"cityId\", name: \"Город\"},\r\n                {idName: \"address\", name: \"Адрес\"},\r\n                {idName: \"name\", name: \"Описание\"}\r\n              ]}\r\n              onSorterFormFinish={onSorterFormFinish}\r\n            />\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <SorterForm\r\n          fields={[\r\n            {idName: \"cityId\", name: \"Город\"},\r\n            {idName: \"address\", name: \"Адрес\"},\r\n            {idName: \"name\", name: \"Описание\"}\r\n          ]}\r\n          onSorterFormFinish={onSorterFormFinish}\r\n        />\r\n      }\r\n      <Link to=\"point-edit\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"addEntityButton\"\r\n          onClick={() => {\r\n            dispatch(setPointAction(\"create\"))\r\n            dispatch(setPointToEdit(null))\r\n          }}\r\n        >Добавить пункт</Button>\r\n      </Link>\r\n      <div\r\n        className=\"pointsTable\"\r\n        style={collapsedItems.length ? {height: \"55%\"} : {height: \"85%\"}}\r\n      >\r\n        <Table\r\n          bordered\r\n          columns={pointsColumns}\r\n          dataSource={points}\r\n          loading={loading}\r\n          rowKey={point => point.id}\r\n          pagination={{\r\n            total: totalCount,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} пунктов`,\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout.Content>\r\n  </>\r\n}","import React, {useState} from \"react\";\r\nimport {Drawer, Layout, Menu} from 'antd';\r\nimport {CarOutlined, EditOutlined, EnvironmentOutlined, HomeOutlined} from \"@ant-design/icons\";\r\nimport './AdminPage.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {OrdersList} from \"./tabs/orders/OrdersList\";\r\nimport {AdminPageHeader} from \"./components/AdminPageHeader\";\r\nimport {CarsTable} from \"./tabs/cars/CarsTable\";\r\nimport {CitiesTable} from \"./tabs/cities/CitiesTable\";\r\nimport {PointsTable} from \"./tabs/points/PointsTable\";\r\nimport {setAdminCurrentPage} from \"../../redux/actions/utilsActions\";\r\n\r\nexport const AdminPage = () => {\r\n  const [visible, setVisible] = useState(false)\r\n  \r\n  const currentMenuItem = useSelector(state => state.utils.adminCurrentPage)\r\n  const dispatch = useDispatch()\r\n\r\n  const onSelectHandler = (e) => {\r\n    dispatch(setAdminCurrentPage(Number(e.key)))\r\n    setVisible(false)\r\n  }\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  return <Layout>\r\n    <AdminPageHeader setVisible={setVisible}/>\r\n    <Layout>\r\n      <Drawer\r\n        title=\"Меню\"\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n        visible={visible}>\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          style={{height: '100%', borderRight: 0}}\r\n          onSelect={onSelectHandler}\r\n        >\r\n          <Menu.Item\r\n            key=\"1\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EditOutlined/>}\r\n          >Список заказов</Menu.Item>\r\n          <Menu.Item\r\n            key=\"2\"\r\n            className=\"sideMenuItem\"\r\n            icon={<CarOutlined/>}\r\n          >Таблица авто</Menu.Item>\r\n          <Menu.Item\r\n            key=\"3\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EnvironmentOutlined/>}\r\n          >Таблица городов</Menu.Item>\r\n          <Menu.Item\r\n            key=\"4\"\r\n            className=\"sideMenuItem\"\r\n            icon={<HomeOutlined/>}\r\n          >Таблица пунктов</Menu.Item>\r\n        </Menu>\r\n      </Drawer>\r\n      <Layout className=\"adminPageContainer\">\r\n        {currentMenuItem === 1 && <OrdersList/>}\r\n        {currentMenuItem === 2 && <CarsTable/>}\r\n        {currentMenuItem === 3 && <CitiesTable/>}\r\n        {currentMenuItem === 4 && <PointsTable/>}\r\n      </Layout>\r\n    </Layout>\r\n  </Layout>\r\n}","import axios from \"axios\";\r\n\r\nconst clientSecret = \"4cbcea96de\"\r\nconst alphabet = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\nconst getBasicHash = () => {\r\n  let rs = \"\";\r\n  while (rs.length < 7) {\r\n    rs += alphabet[Math.floor(Math.random() * alphabet.length)];\r\n  }\r\n  return `Basic ${window.btoa(`${rs}:${clientSecret}`)}`\r\n}\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": getBasicHash()\r\n  },\r\n});\r\n\r\nexport const authAPI = {\r\n  postLogin(login, password) {\r\n    const body = {\r\n      username: login,\r\n      password\r\n    }\r\n    return instance.post(`auth/login`, body)\r\n  }\r\n}","import {authAPI} from \"../../api/api\";\r\n\r\nexport const authActions = {\r\n  setAuthData: (data) => ({type: \"AUTH/SET_AUTH_DATA\", payload: data}),\r\n  setAuthStatus: (status) => ({type: \"AUTH/SET_AUTH_STATUS\", payload: status})\r\n}\r\n\r\nexport const postLogin = (login, password) => async (dispatch) => {\r\n  try {\r\n    const response = await authAPI.postLogin(login, password)\r\n    sessionStorage.setItem(\"access_token\", response.data.access_token)\r\n    sessionStorage.setItem(\"refresh_token\", response.data.refresh_token)\r\n    dispatch(authActions.setAuthData(response.data))\r\n  } catch (e) {\r\n    dispatch(authActions.setAuthStatus(e.response.status))\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './Login.css'\r\nimport {Button, Form, Input, Space} from \"antd\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport logo from '../../assets/Logo Icon.svg'\r\nimport {postLogin} from \"../../redux/actions/authActions\";\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onFinish = (values) => {\r\n    dispatch(postLogin(values.username, values.password))\r\n  };\r\n\r\n  const authStatus = useSelector(state => state.auth.authStatus)\r\n\r\n  return <div className=\"loginContainer\">\r\n    <div className=\"loginContent\">\r\n      <Space\r\n        className=\"loginHeader\"\r\n        size=\"middle\"\r\n      >\r\n        <img\r\n          className=\"logo\"\r\n          src={logo}\r\n          alt=\"logo\"\r\n        />\r\n        <p className=\"company\">Need For Drive</p>\r\n      </Space>\r\n      <div className=\"loginCard\">\r\n        <p className=\"loginTitle\">Вход</p>\r\n        <Form\r\n          name=\"loginForm\"\r\n          onFinish={onFinish}\r\n          initialValues={{remember: true}} // intern intern-S!\r\n        >\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"username\"\r\n            rules={[{required: true, message: 'Введите логин'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined/>}\r\n              placeholder=\"Username\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"password\"\r\n            rules={[{required: true, message: 'Введите пароль'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n            help={authStatus === 401 ? \"Неверный логин или пароль\" : null}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined/>}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <div className=\"loginCardFooter\">\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a>Запросить доступ</a>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"submitButton\"\r\n            >Войти</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = (props) => {\r\n  const {path, redirect, isAuth, children} = props\r\n\r\n  return <Route\r\n    path={path}\r\n    render={() => {\r\n      return isAuth ? children : <Redirect to={redirect}/>\r\n    }}\r\n  />\r\n}","export default __webpack_public_path__ + \"static/media/blankCar.55f3fbcd.png\";","/* eslint-disable react/prop-types */\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {AutoComplete, Button, Checkbox, Form, Input, message} from \"antd\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCategories, postCar, putCar} from \"../../../redux/actions/carsActions\";\r\n\r\nexport const CarEditForm = (props) => {\r\n  const {image, carToEdit} = props\r\n\r\n  const [colors, setColors] = useState(carToEdit?.colors.map((color, index) => ({\r\n    id: color + index,\r\n    value: color\r\n  })) || [])\r\n\r\n  const carsData = useSelector(state => state.cars)\r\n  const {categories, carAction, carSuccess} = carsData\r\n  const options = categories.map(category => ({value: category.name}))\r\n  const dispatch = useDispatch()\r\n  const addColor = useRef()\r\n\r\n  const onFormSubmitHandle = async (values) => {\r\n    const categoryId = categories.find(category => category.name === values.categoryId).id\r\n\r\n    const formData = {\r\n      priceMin: Number(values.priceMin),\r\n      priceMax: Number(values.priceMax),\r\n      name: values.name,\r\n      number: values.number,\r\n      description: values.description,\r\n      categoryId,\r\n      colors: values.colorsList,\r\n      thumbnail: image\r\n    }\r\n\r\n    switch (carAction) {\r\n      case \"create\": {\r\n        dispatch(postCar(formData))\r\n        break\r\n      }\r\n      case \"update\": {\r\n        dispatch(putCar(carToEdit.id, formData))\r\n        break\r\n      }\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories())\r\n  }, [])\r\n\r\n  if (carSuccess && carAction === \"update\") {\r\n    message.success(\"Успех! Машина обновлёна\")\r\n  } else if (carSuccess && carAction === \"create\") {\r\n    message.success(\"Успех! Машина добавлена\")\r\n  }\r\n\r\n  return <Form\r\n    name=\"editCar\"\r\n    labelCol={{span: 6}}\r\n    initialValues={{\r\n      priceMin: carToEdit?.priceMin || null,\r\n      priceMax: carToEdit?.priceMax || null,\r\n      name: carToEdit?.name || null,\r\n      number: carToEdit?.number || null,\r\n      description: carToEdit?.description || null,\r\n      categoryId: carToEdit?.categoryId?.name || null,\r\n    }}\r\n    onFinish={onFormSubmitHandle}\r\n  >\r\n    <Form.Item\r\n      label=\"Минимальная цена\"\r\n      name=\"priceMin\"\r\n      rules={[{required: true, message: 'Введите минимальную смоимость аренды авто'}]}\r\n    >\r\n      <Input placeholder=\"0\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Максимальная цена\"\r\n      name=\"priceMax\"\r\n      rules={[{required: true, message: 'Введите максимальную смоимость аренды авто'}]}\r\n    >\r\n      <Input placeholder=\"0\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Наименование\"\r\n      name=\"name\"\r\n      rules={[{required: true, message: 'Введите наименование авто'}]}\r\n    >\r\n      <Input placeholder=\"Ford Focus\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Номер\"\r\n      name=\"number\"\r\n      rules={[{required: true, message: 'Введите автомобильный номер'}]}\r\n    >\r\n      <Input placeholder=\"A000AA\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Описание\"\r\n      name=\"description\"\r\n    >\r\n      <Input.TextArea\r\n        showCount\r\n        maxLength={200}\r\n        autoSize\r\n        placeholder=\"Премиум-класс\"\r\n      />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Категория\"\r\n      name=\"categoryId\"\r\n      rules={[{required: true, message: 'Выберите категорию'}]}\r\n    >\r\n      <AutoComplete\r\n        style={{width: 200}}\r\n        options={options}\r\n        allowClear\r\n        placeholder=\"Выберите категорию...\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n      />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"carColorItem\"\r\n      label=\"Цвета\"\r\n    >\r\n      <Form.List name=\"colors\">\r\n        {() => (\r\n          <>\r\n            <Form.Item>\r\n              <Input\r\n                placeholder=\"Добавьте цвет\"\r\n                allowClear\r\n                ref={addColor}\r\n                className=\"carColorInput\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"dashed\" className=\"carColorAddButton\" onClick={() => {\r\n                if (addColor.current.state.value) {\r\n                  setColors([\r\n                    ...colors,\r\n                    {\r\n                      id: colors.length,\r\n                      value: addColor.current.state.value\r\n                    }\r\n                  ])\r\n                  addColor.current.state.value = \"\"\r\n                }\r\n              }} block>\r\n                <PlusOutlined/>\r\n              </Button>\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n      </Form.List>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      name=\"colorsList\"\r\n      label=\"Выберите цвета\"\r\n    >\r\n      <Checkbox.Group className=\"colorsList\">\r\n        {colors.map((color) => <Checkbox value={color.value} key={color.id}>\r\n          {color.value}\r\n        </Checkbox>)}\r\n      </Checkbox.Group>\r\n    </Form.Item>\r\n\r\n    <div className=\"formButtons\">\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Сохранить\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      <Link to=\"/admin\">\r\n        {carSuccess\r\n          ? <Button className=\"cancelButton\">Вернуться</Button>\r\n          : <Button danger className=\"cancelButton\">Отменить</Button>\r\n        }\r\n      </Link>\r\n    </div>\r\n  </Form>\r\n}","import React, {useState} from \"react\";\r\nimport {Button, Layout, Row, Upload} from 'antd';\r\nimport './CarEditPage.css'\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\nimport {useSelector} from \"react-redux\";\r\nimport blankCar from '../../../assets/blankCar.png'\r\nimport {CarEditForm} from \"./CarEditForm\";\r\n\r\nexport const CarEditPage = () => {\r\n  const [image, setImage] = useState()\r\n\r\n  const carToEdit = useSelector(state => state.cars.carToEdit)\r\n\r\n  return <Layout className=\"editingContainer\">\r\n    <h1 className=\"pageTitle editingTitle\">Карточка автомобиля</h1>\r\n    <Row align=\"top\">\r\n      <div className=\"editingContent editingOne\">\r\n        <img\r\n          className=\"cardImage\"\r\n          src={carToEdit?.thumbnail?.path || image?.path || blankCar}\r\n          alt=\"carImage\"\r\n        />\r\n        <p className=\"carName\">{carToEdit?.name || \"Марка авто\"}</p>\r\n        <p className=\"carCategory\">{carToEdit?.categoryId?.name || \"Категория\"}</p>\r\n        <Upload\r\n          name=\"file\"\r\n          beforeUpload={(e) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(e);\r\n            reader.onload = () => {\r\n              const tempThumbnail = {\r\n                mimetype: e.type,\r\n                originalname: e.name,\r\n                path: reader.result,\r\n                size: e.size\r\n              }\r\n              setImage(tempThumbnail)\r\n            };\r\n            return false\r\n          }}\r\n        >\r\n          <Button icon={<UploadOutlined/>}>Выберите файл...</Button>\r\n        </Upload>\r\n      </div>\r\n      <div className=\"editingContent editingTwo\">\r\n        <p className=\"EntityFormTitle\">Настройки автомобиля</p>\r\n        <CarEditForm image={image} carToEdit={carToEdit}/>\r\n      </div>\r\n    </Row>\r\n  </Layout>\r\n}","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Form, Input, message} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {postCity, putCity} from \"../../../redux/actions/citiesActions\";\r\n\r\nexport const CityEditForm = (props) => {\r\n  const {cityToEdit} = props\r\n\r\n  const citiesData = useSelector(state => state.cities)\r\n  const {cityAction, citySuccess} = citiesData\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmitHandle = (values) => {\r\n    switch (cityAction) {\r\n      case \"create\": {\r\n        dispatch(postCity(values))\r\n        break\r\n      }\r\n      case \"update\": {\r\n        dispatch(putCity(cityToEdit.id, values))\r\n        break\r\n      }\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  if (citySuccess && cityAction === \"update\") {\r\n    message.success(\"Успех! Город сохранён\")\r\n  } else if (citySuccess && cityAction === \"create\") {\r\n    message.success(\"Успех! Город добавлен\")\r\n  }\r\n\r\n  return <Form\r\n    name=\"editCity\"\r\n    labelCol={{span: 5}}\r\n    initialValues={{\r\n      name: cityToEdit?.name || null\r\n    }}\r\n    onFinish={onFormSubmitHandle}\r\n  >\r\n    <Form.Item\r\n      label=\"Наименование\"\r\n      name=\"name\"\r\n      rules={[{required: true, message: 'Введите название города'}]}\r\n    >\r\n      <Input placeholder=\"Москва...\"/>\r\n    </Form.Item>\r\n\r\n    <div className=\"formButtons cityFormButtons\">\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Сохранить\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      <Link to=\"/admin\">\r\n        {citySuccess\r\n          ? <Button className=\"cancelButton\">Вернуться</Button>\r\n          : <Button danger className=\"cancelButton\">Отменить</Button>\r\n        }\r\n      </Link>\r\n    </div>\r\n  </Form>\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Layout} from \"antd\";\r\nimport {CityEditForm} from \"./CityEditForm\";\r\nimport './CityEditPage.css'\r\n\r\nexport const CityEditPage = () => {\r\n  const cityToEdit = useSelector(state => state.cities.cityToEdit)\r\n\r\n  return <Layout className=\"editingContainer\">\r\n    <h1 className=\"pageTitle editingTitle\">Карточка города</h1>\r\n    <div className=\"editingContent cityEditContent\">\r\n      <p className=\"EntityFormTitle\">Настройки города</p>\r\n      <CityEditForm cityToEdit={cityToEdit}/>\r\n    </div>\r\n  </Layout>\r\n}","/* eslint-disable react/prop-types */\r\nimport React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AutoComplete, Button, Form, Input, message} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {postPoint, putPoint} from \"../../../redux/actions/pointsActions\";\r\nimport {getCities} from \"../../../redux/actions/citiesActions\";\r\n\r\nexport const PointEditForm = (props) => {\r\n  const {pointToEdit} = props\r\n\r\n  const pointData = useSelector(state => state.points)\r\n  const {pointAction, pointSuccess} = pointData\r\n  const cities = useSelector(state => state.cities.cities)\r\n  const options = cities.map(city => ({value: city.name}))\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmitHandle = (values) => {\r\n    const cityId = cities.find(city => city.name === values.cityId).id\r\n\r\n    switch (pointAction) {\r\n      case \"create\": {\r\n        dispatch(postPoint({...values, cityId}))\r\n        break\r\n      }\r\n      case \"update\": {\r\n        dispatch(putPoint(pointToEdit.id, {...values, cityId}))\r\n        break\r\n      }\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getCities())\r\n  }, [])\r\n\r\n  if (pointSuccess && pointAction === \"update\") {\r\n    message.success(\"Успех! Пункт обновлён\")\r\n  } else if (pointSuccess && pointAction === \"create\") {\r\n    message.success(\"Успех! Пункт добавлен\")\r\n  }\r\n\r\n  return <Form\r\n    name=\"editPoint\"\r\n    labelCol={{span: 4}}\r\n    initialValues={{\r\n      name: pointToEdit?.name || null,\r\n      address: pointToEdit?.address || null,\r\n      cityId: pointToEdit?.cityId?.name || null,\r\n    }}\r\n    onFinish={onFormSubmitHandle}\r\n  >\r\n    <Form.Item\r\n      label=\"Наименование\"\r\n      name=\"name\"\r\n      rules={[{required: true, message: 'Введите наименование пункта'}]}\r\n    >\r\n      <Input placeholder=\"Пункт...\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Адрес\"\r\n      name=\"address\"\r\n      rules={[{required: true, message: 'Введите адрес пункта'}]}\r\n    >\r\n      <Input placeholder=\"ул. Стахановская, 29/1\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Город\"\r\n      name=\"cityId\"\r\n      rules={[{required: true, message: 'Выберите город'}]}\r\n    >\r\n      <AutoComplete\r\n        style={{width: 200}}\r\n        options={options}\r\n        allowClear\r\n        placeholder=\"Выберите город...\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n      />\r\n    </Form.Item>\r\n\r\n    <div className=\"formButtons pointFormButtons\">\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Сохранить\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      <Link to=\"/admin\">\r\n        {pointSuccess\r\n          ? <Button className=\"cancelButton\">Вернуться</Button>\r\n          : <Button danger className=\"cancelButton\">Отменить</Button>\r\n        }\r\n      </Link>\r\n    </div>\r\n  </Form>\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Layout} from \"antd\";\r\nimport {PointEditForm} from \"./PointEditForm\";\r\nimport './PointEditPage.css'\r\n\r\nexport const PointEditPage = () => {\r\n  const pointToEdit = useSelector(state => state.points.pointToEdit)\r\n\r\n  return <Layout className=\"editingContainer\">\r\n    <h1 className=\"pageTitle editingTitle\">Карточка пункта</h1>\r\n    <div className=\"editingContent pointEditContent\">\r\n      <p className=\"EntityFormTitle\">Настройки пункта</p>\r\n      <PointEditForm pointToEdit={pointToEdit}/>\r\n    </div>\r\n  </Layout>\r\n}","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Button, Layout} from \"antd\";\r\nimport './ErrorPage.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {utilsActions} from \"../../redux/actions/utilsActions\";\r\n\r\nexport const ErrorPage = (props) => {\r\n  const {code, msg, submsg} = props\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  return <Layout className=\"errorPageLayout\">\r\n    <div className=\"errorPageContent\">\r\n      <div className=\"errorCode\">{code}</div>\r\n      <div className=\"errorMessage\">{msg}</div>\r\n      <div className=\"errorSubMessage\">{submsg}</div>\r\n      <Link\r\n        to=\"/admin\"\r\n        onClick={() => {dispatch(utilsActions.setError(null))}}\r\n      >\r\n        <Button type=\"primary\">Назад</Button>\r\n      </Link>\r\n    </div>\r\n  </Layout>\r\n}","import React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AdminPage} from \"./pages/adminPage/AdminPage\";\r\nimport {Login} from \"./pages/loginPage/Login\";\r\nimport {PrivateRoute} from \"./components/PrivateRoute\";\r\nimport {CarEditPage} from \"./pages/entityEditPage/carEdit/CarEditPage\";\r\nimport {CityEditPage} from \"./pages/entityEditPage/cityEdit/CityEditPage\";\r\nimport {PointEditPage} from \"./pages/entityEditPage/pointEdit/PointEditPage\";\r\nimport {ErrorPage} from \"./pages/errorPage/ErrorPage\";\r\n\r\nconst App = () => {\r\n  const isAuth = useSelector(state => state.auth.isAuth)\r\n  const error = useSelector(state => state.utils.error)\r\n\r\n  if (error) {\r\n    return <ErrorPage\r\n      code={error.status}\r\n      msg={error.statusText ? error.statusText : \"Произошла какая-то ошибка\"}\r\n      submsg={error.data}\r\n    />\r\n  }\r\n\r\n  return <Switch>\r\n    <Route\r\n      exact\r\n      path=\"/\"\r\n      render={() => <Redirect to=\"/admin\"/>}\r\n    />\r\n\r\n    <PrivateRoute\r\n      path=\"/admin\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <AdminPage/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/login\"\r\n      redirect=\"/admin\"\r\n      isAuth={!isAuth}\r\n    >\r\n      <Login/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/car-edit\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <CarEditPage/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/city-edit\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <CityEditPage/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/point-edit\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <PointEditPage/>\r\n    </PrivateRoute>\r\n\r\n    <Route render={() => <ErrorPage\r\n      code={404}\r\n      msg=\"Страница не найдена\"\r\n      submsg=\"Кнопка ниже приведёт вас куда надо\"\r\n    />}/>\r\n  </Switch>\r\n}\r\n\r\nexport default App\r\n","const initialState = {\r\n  isAuth: false,\r\n  authStatus: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"AUTH/SET_AUTH_DATA\": {\r\n      return {\r\n        ...state,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case \"AUTH/SET_AUTH_STATUS\": {\r\n      return {\r\n        ...state,\r\n        authStatus: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const initialState = {\r\n  orders: [],\r\n  totalCount: null,\r\n  orderStatus: []\r\n};\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ORDERS/SET_ORDERS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        orders: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/ORDERS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/SET_ORDER_STATUS\": {\r\n      return {\r\n        ...state,\r\n        orderStatus: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default ordersReducer;","const initialState = {\r\n  cars: [],\r\n  carToEdit: null,\r\n  currentPage: 1,\r\n  totalCount: null,\r\n  categories: [],\r\n  carAction: null,\r\n  carSuccess: false\r\n};\r\n\r\nconst carsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CARS/SET_CARS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        cars: action.payload\r\n      }\r\n    }\r\n    case \"CARS/CARS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CAR_TO_EDIT\": {\r\n      return {\r\n        ...state,\r\n        carToEdit: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CATEGORIES\": {\r\n      return {\r\n        ...state,\r\n        categories: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CAR_ACTION\": {\r\n      return {\r\n        ...state,\r\n        carAction: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CAR_SUCCESS\": {\r\n      return {\r\n        ...state,\r\n        carSuccess: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CURRENT_PAGE\": {\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default carsReducer;","const initialState = {\r\n  cities: [],\r\n  totalCount: null,\r\n  cityAction: null,\r\n  cityToEdit: null,\r\n  citySuccess: false\r\n};\r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CITIES/SET_CITIES_PORTION\": {\r\n      return {\r\n        ...state,\r\n        cities: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/CITIES_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/SET_CITY_TO_EDIT\": {\r\n      return {\r\n        ...state,\r\n        cityToEdit: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/SET_CITY_ACTION\": {\r\n      return {\r\n        ...state,\r\n        cityAction: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/SET_CITY_SUCCESS\": {\r\n      return {\r\n        ...state,\r\n        citySuccess: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default citiesReducer;","const initialState = {\r\n  points: [],\r\n  totalCount: null,\r\n  pointToEdit: null,\r\n  pointAction: null,\r\n  pointSuccess: false\r\n};\r\n\r\nconst pointsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"POINTS/SET_POINTS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        points: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/POINTS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/SET_POINT_TO_EDIT\": {\r\n      return {\r\n        ...state,\r\n        pointToEdit: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/SET_POINT_ACTION\": {\r\n      return {\r\n        ...state,\r\n        pointAction: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/SET_POINT_SUCCESS\": {\r\n      return {\r\n        ...state,\r\n        pointSuccess: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default pointsReducer;","const initialState = {\r\n  adminCurrentPage: 1,\r\n  error: null\r\n};\r\n\r\nconst utilsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"UTILS/SET_ADMIN_CURRENT_PAGE\": {\r\n      return {\r\n        ...state,\r\n        adminCurrentPage: action.payload\r\n      }\r\n    }\r\n    case \"UTILS/SET_ERROR\": {\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default utilsReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport authReducer from \"./authReducer\";\r\nimport ordersReducer from \"./ordersReducer\";\r\nimport carsReducer from \"./carsReducer\";\r\nimport citiesReducer from \"./citiesReducer\";\r\nimport pointsReducer from \"./pointsReducer\";\r\nimport utilsReducer from \"./utilsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  orders: ordersReducer,\r\n  cars: carsReducer,\r\n  cities: citiesReducer,\r\n  points: pointsReducer,\r\n  utils: utilsReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from './App';\r\nimport store from \"./redux/reduxStore\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}