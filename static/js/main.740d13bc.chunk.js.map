{"version":3,"sources":["pages/adminPage/components/Order.jsx","api/restapi.js","redux/actions/ordersActions.js","pages/adminPage/tabs/orders/OrdersFilterForm.jsx","pages/adminPage/tabs/orders/OrdersList.jsx","assets/Logo Icon.svg","assets/avatar.png","pages/adminPage/components/AdminPageHeader.jsx","pages/adminPage/AdminPage.jsx","api/api.js","redux/actions/authActions.js","pages/loginPage/Login.jsx","components/PrivateRoute.jsx","App.jsx","redux/authReducer.js","redux/ordersReducer.js","redux/reduxStore.js","reportWebVitals.js","index.jsx"],"names":["carOption","condition","text","className","CheckSquareOutlined","CloseSquareOutlined","Order","props","order","dateFrom","Date","dateTo","src","carId","thumbnail","path","alt","name","cityId","pointId","address","toLocaleString","color","isFullTank","isNeedChildChair","isRightWheel","price","instance","axios","create","baseURL","headers","sessionStorage","getItem","ordersAPI","page","limit","filters","filterParams","orderStatus","get","then","r","data","ordersActions","type","payload","count","status","cities","OrdersFilterForm","onFilterFormFinish","ordersData","useSelector","state","orders","dispatch","useDispatch","useEffect","a","onFinish","Item","placeholder","map","city","Option","value","id","htmlType","OrdersList","useState","currentPage","setCurrentPage","setFilters","totalCount","sizeOfPage","useBreakpoint","response","getOrders","Content","values","date","setMonth","getMonth","setDate","getDate","total","pageSize","current","showQuickJumper","showTotal","onChange","simple","xs","size","lg","AdminPageHeader","setVisible","span","md","xl","onClick","MenuUnfoldOutlined","logo","offset","SearchOutlined","BellFilled","avatar","AdminPage","currentMenuItem","setCurrentMenuItem","visible","title","placement","onClose","mode","defaultSelectedKeys","defaultOpenKeys","style","height","borderRight","onSelect","e","Number","key","icon","EditOutlined","alphabet","rs","length","Math","floor","random","window","btoa","getBasicHash","authAPI","login","password","body","username","post","authActions","Login","authStatus","auth","setItem","access_token","refresh_token","initialValues","remember","rules","required","message","validateStatus","prefix","UserOutlined","allowClear","help","LockOutlined","PrivateRoute","redirect","isAuth","children","render","to","App","exact","initialState","authReducer","action","ordersReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.740d13bc.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport './Order.css'\r\nimport {CheckSquareOutlined, CloseSquareOutlined} from \"@ant-design/icons\";\r\n\r\nconst carOption = (condition, text) => {\r\n  return condition\r\n    ? <div className=\"orderCarOption\">\r\n      <CheckSquareOutlined className=\"isCarOption\"/>\r\n      <p>{text}</p>\r\n    </div>\r\n    : <div className=\"orderCarOption\">\r\n      <CloseSquareOutlined className=\"isNotCarOption\"/>\r\n      <p className=\"isNotCarOptionText\">{text}</p>\r\n    </div>\r\n}\r\n\r\nexport const Order = (props) => {\r\n  const {order} = props\r\n  const dateFrom = new Date(order?.dateFrom)\r\n  const dateTo = new Date(order?.dateTo)\r\n\r\n  return <div className=\"orderContent\">\r\n    <div className=\"orderImageBlock\">\r\n      <img\r\n        src={order?.carId?.thumbnail.path}\r\n        alt=\"carImage\"\r\n        className=\"orderCarImage\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"orderInfoBlock\">\r\n      <p>\r\n        <span>{order?.carId?.name}</span>\r\n        {order?.cityId?.name && \" в \"}\r\n        <span>{order?.cityId?.name}</span>\r\n        {order?.pointId?.address && \", \"}\r\n        {order?.pointId?.address}\r\n      </p>\r\n      <p>{dateFrom.toLocaleString()} — {dateTo.toLocaleString()}</p>\r\n      <p>Цвет: <span>{order?.color}</span></p>\r\n    </div>\r\n\r\n    <div className=\"orderOptionsBlock\">\r\n      {carOption(order?.isFullTank, \"Полный бак\")}\r\n      {carOption(order?.isNeedChildChair, \"Детское кресло\")}\r\n      {carOption(order?.isRightWheel, \"Правый руль\")}\r\n    </div>\r\n\r\n    <div className=\"orderPriceBlock\">\r\n      <p className=\"orderPrice\">{order?.price} ₽</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `Bearer ${sessionStorage.getItem(\"access_token\")}`\r\n  },\r\n});\r\n\r\nexport const ordersAPI = {\r\n  getOrders(page, limit, filters) {\r\n    let filterParams = ``\r\n    if (filters) {\r\n      if (filters.cityId) filterParams += `&cityId=${filters.cityId}`\r\n      if (filters.orderStatus) filterParams += `&orderStatusId=${filters.orderStatus}`\r\n      if (filters.dateFrom) filterParams += `&dateFrom%5B%24gt%5D=${filters.dateFrom}`\r\n    }\r\n    return instance.get(`db/order?page=${page}&limit=${limit}${filterParams}`)\r\n  },\r\n  getOrderStatus() {\r\n    return instance.get(`db/orderStatus`).then(r => r.data.data)\r\n  },\r\n  getCities() {\r\n    return instance.get(`db/city`).then(r => r.data.data)\r\n  }\r\n}","import {ordersAPI} from \"../../api/restapi\";\r\n\r\nexport const ordersActions = {\r\n  setOrdersPortion: (data) => ({type: \"ORDERS/SET_ORDERS_PORTION\", payload: data}),\r\n  setTotalOrdersCount: (count) => ({type: \"ORDERS/ORDERS_TOTAL_COUNT\", payload: count}),\r\n  getOrderStatus: (status) => ({type: \"ORDERS/SET_ORDER_STATUS\", payload: status}),\r\n  getCities: (cities) => ({type: \"ORDERS/SET_CITIES\", payload: cities}),\r\n}\r\n\r\nexport const getOrders = (page = 1, limit = 20, filters = null) => async (dispatch) => {\r\n  const response = await ordersAPI.getOrders(page, limit, filters)\r\n  dispatch(ordersActions.setTotalOrdersCount(response.data.count))\r\n  dispatch(ordersActions.setOrdersPortion(response.data.data))\r\n}\r\n\r\nexport const getOrderStatus = () => async (dispatch) => {\r\n  const data = await ordersAPI.getOrderStatus()\r\n  dispatch(ordersActions.getOrderStatus(data))\r\n}\r\n\r\nexport const getCities = () => async (dispatch) => {\r\n  const data = await ordersAPI.getCities()\r\n  dispatch(ordersActions.getCities(data))\r\n}","/* eslint-disable react/prop-types */\r\nimport React, {useEffect} from \"react\";\r\nimport {Button, Form, Select} from \"antd\";\r\nimport './OrdersFilterForm.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCities, getOrderStatus} from \"../../../../redux/actions/ordersActions\";\r\n\r\nexport const OrdersFilterForm = (props) => {\r\n  const {onFilterFormFinish} = props\r\n  const ordersData = useSelector(state => state.orders)\r\n  const {orderStatus, cities} = ordersData\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderStatus())\r\n    dispatch(getCities())\r\n  }, [])\r\n\r\n  return <Form\r\n    name=\"ordersFilterForm\"\r\n    className=\"filterForm\"\r\n    onFinish={onFilterFormFinish}\r\n  >\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"cityId\"\r\n    >\r\n      <Select placeholder=\"Выберите город\">\r\n        {cities.map(city =>\r\n          <Select.Option\r\n            key={city.id}\r\n            value={city.id}\r\n          >{city.name}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"orderStatus\"\r\n    >\r\n      <Select placeholder=\"Выберите статус заказа\">\r\n        {orderStatus.map(status =>\r\n          <Select.Option\r\n            key={status.id}\r\n            value={status.id}\r\n          >{status.name}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"dateFrom\"\r\n    >\r\n      <Select placeholder=\"Выберите промежуток\">\r\n        <Select.Option value=\"month\">За последний месяц</Select.Option>\r\n        <Select.Option value=\"week\">За последнюю неделю</Select.Option>\r\n        <Select.Option value=\"day\">За последний день</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Применить\r\n      </Button>\r\n    </Form.Item>\r\n  </Form>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Layout, Pagination} from \"antd\";\r\nimport './OrdersList.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {Order} from \"../../components/Order\";\r\nimport {OrdersFilterForm} from \"./OrdersFilterForm\";\r\nimport {getOrders} from \"../../../../redux/actions/ordersActions\";\r\n\r\nexport const OrdersList = () => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [limit, setLimit] = useState(10)\r\n  const [filters, setFilters] = useState(null)\r\n\r\n  const ordersData = useSelector(state => state.orders)\r\n  const {orders, totalCount} = ordersData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const paginationHandler = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  const onFilterFormFinish = (values) => {\r\n    const date = new Date()\r\n    let dateFrom = \"\"\r\n    switch (values.dateFrom) {\r\n      case \"month\": {\r\n        dateFrom = date.setMonth(date.getMonth() - 1)\r\n        break\r\n      }\r\n      case \"week\": {\r\n        dateFrom = date.setDate(date.getDate() - 7)\r\n        break\r\n      }\r\n      case \"day\": {\r\n        dateFrom = date.setDate(date.getDate() - 1)\r\n        break\r\n      }\r\n      default:\r\n    }\r\n    setFilters({...values, dateFrom})\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders(currentPage - 1, limit, filters))\r\n  }, [currentPage, filters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Заказы</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      <OrdersFilterForm onFilterFormFinish={onFilterFormFinish}/>\r\n      <div className=\"ordersList\">\r\n        {orders.map(order => <Order order={order} key={order.id}/>)}\r\n      </div>\r\n      <Pagination\r\n        total={totalCount}\r\n        pageSize={20}\r\n        current={currentPage}\r\n        showQuickJumper\r\n        showTotal={total => `Всего ${total} заказов`}\r\n        onChange={paginationHandler}\r\n        simple={sizeOfPage.xs}\r\n        size={sizeOfPage.lg ? \"default\" : \"small\"}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","export default __webpack_public_path__ + \"static/media/Logo Icon.830257bf.svg\";","export default __webpack_public_path__ + \"static/media/avatar.8845cada.png\";","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Avatar, Badge, Button, Col, Row} from \"antd\";\r\nimport {BellFilled, MenuUnfoldOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport logo from \"../../../assets/Logo Icon.svg\";\r\nimport avatar from \"../../../assets/avatar.png\";\r\nimport './AdminPageHeader.css'\r\n\r\nexport const AdminPageHeader = (props) => {\r\n  const {setVisible} = props\r\n\r\n  const pageSize = useBreakpoint()\r\n  \r\n  return <Row className=\"adminPageHeader\">\r\n    <Col\r\n      xs={{span: 15}}\r\n      md={{span: 7}}\r\n      lg={{span: 6}}\r\n      xl={{span: 4}}\r\n      className=\"adminPageCompany\"\r\n    >\r\n      <Button className=\"sideMenuButton\" onClick={() => setVisible(true)}>\r\n        <MenuUnfoldOutlined/>\r\n      </Button>\r\n      <img\r\n        src={logo}\r\n        alt=\"logo\"\r\n        className=\"logoImg\"\r\n      />\r\n      <p className=\"logoTitle\">Need For Drive</p>\r\n    </Col>\r\n    <Col\r\n      className=\"adminPageSearch\"\r\n      xs={{offset: 3, span: 3}}\r\n      md={{offset: 11, span: 2}}\r\n      lg={{offset: 12}}\r\n      xl={{offset: 17, span: 1}}\r\n    >\r\n      <SearchOutlined className=\"searchIcon\"/>\r\n    </Col>\r\n    <Col\r\n      xs={pageSize.xs && {offset: 3, span: 3}}\r\n      md={{span: 2}}\r\n      xl={{span: 1}}\r\n      className=\"adminPageHeaderNotification\"\r\n    >\r\n      <Badge\r\n        count={2}\r\n        size=\"small\"\r\n      >\r\n        <BellFilled className=\"notificationIcon\"/>\r\n      </Badge>\r\n    </Col>\r\n    <Col\r\n      xs={{span: 3}}\r\n      md={{span: 2}}\r\n      xl={{span: 1}}\r\n      className=\"adminUserAccount\"\r\n    >\r\n      <Avatar src={avatar}/>\r\n    </Col>\r\n  </Row>\r\n}","import React, {useState} from \"react\";\r\nimport {Drawer, Layout, Menu} from 'antd';\r\nimport {EditOutlined} from \"@ant-design/icons\";\r\nimport './AdminPage.css'\r\nimport {OrdersList} from \"./tabs/orders/OrdersList\";\r\nimport {AdminPageHeader} from \"./components/AdminPageHeader\";\r\n\r\nexport const AdminPage = () => {\r\n  const [currentMenuItem, setCurrentMenuItem] = useState(1)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const onSelectHandler = (e) => {\r\n    setCurrentMenuItem(Number(e.key))\r\n    setVisible(false)\r\n  }\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  return <Layout>\r\n    <AdminPageHeader setVisible={setVisible}/>\r\n    <Layout>\r\n      <Drawer\r\n        title=\"Меню\"\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n        visible={visible}>\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          style={{height: '100%', borderRight: 0}}\r\n          onSelect={onSelectHandler}\r\n        >\r\n          <Menu.Item\r\n            key=\"1\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EditOutlined/>}\r\n          >Список заказов</Menu.Item>\r\n          <Menu.Item key=\"2\" className=\"sideMenuItem\">option2</Menu.Item>\r\n          <Menu.Item key=\"3\" className=\"sideMenuItem\">option3</Menu.Item>\r\n          <Menu.Item key=\"4\" className=\"sideMenuItem\">option4</Menu.Item>\r\n        </Menu>\r\n      </Drawer>\r\n      <Layout className=\"adminPageContainer\">\r\n        {currentMenuItem === 1 && <OrdersList/>}\r\n      </Layout>\r\n    </Layout>\r\n  </Layout>\r\n}","import axios from \"axios\";\r\n\r\nconst clientSecret = \"4cbcea96de\"\r\nconst alphabet = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\nconst getBasicHash = () => {\r\n  let rs = \"\";\r\n  while (rs.length < 7) {\r\n    rs += alphabet[Math.floor(Math.random() * alphabet.length)];\r\n  }\r\n  return `Basic ${window.btoa(`${rs}:${clientSecret}`)}`\r\n}\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": getBasicHash()\r\n  },\r\n});\r\n\r\nexport const authAPI = {\r\n  postLogin(login, password) {\r\n    const body = {\r\n      username: login,\r\n      password\r\n    }\r\n    return instance.post(`auth/login`, body)\r\n  }\r\n}","import {authAPI} from \"../../api/api\";\r\n\r\nexport const authActions = {\r\n  setAuthData: (data) => ({type: \"AUTH/SET_AUTH_DATA\", payload: data}),\r\n  setAuthStatus: (status) => ({type: \"AUTH/SET_AUTH_STATUS\", payload: status})\r\n}\r\n\r\nexport const postLogin = (login, password) => async (dispatch) => {\r\n  try {\r\n    const response = await authAPI.postLogin(login, password)\r\n    sessionStorage.setItem(\"access_token\", response.data.access_token)\r\n    sessionStorage.setItem(\"refresh_token\", response.data.refresh_token)\r\n    dispatch(authActions.setAuthData(response.data))\r\n  } catch (e) {\r\n    dispatch(authActions.setAuthStatus(e.response.status))\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './Login.css'\r\nimport {Button, Form, Input, Space} from \"antd\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport logo from '../../assets/Logo Icon.svg'\r\nimport {postLogin} from \"../../redux/actions/authActions\";\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onFinish = (values) => {\r\n    dispatch(postLogin(values.username, values.password))\r\n  };\r\n\r\n  const authStatus = useSelector(state => state.auth.authStatus)\r\n\r\n  return <div className=\"loginContainer\">\r\n    <div className=\"loginContent\">\r\n      <Space\r\n        className=\"loginHeader\"\r\n        size=\"middle\"\r\n      >\r\n        <img\r\n          className=\"logo\"\r\n          src={logo}\r\n          alt=\"logo\"\r\n        />\r\n        <p className=\"company\">Need For Drive</p>\r\n      </Space>\r\n      <div className=\"loginCard\">\r\n        <p className=\"loginTitle\">Вход</p>\r\n        <Form\r\n          name=\"loginForm\"\r\n          onFinish={onFinish}\r\n          initialValues={{remember: true}} // intern intern-S!\r\n        >\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"username\"\r\n            rules={[{required: true, message: 'Введите логин'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined/>}\r\n              placeholder=\"Username\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"password\"\r\n            rules={[{required: true, message: 'Введите пароль'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n            help={authStatus === 401 ? \"Неверный логин или пароль\" : null}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined/>}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <div className=\"loginCardFooter\">\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a>Запросить доступ</a>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"submitButton\"\r\n            >Войти</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = (props) => {\r\n  const {path, redirect, isAuth, children} = props\r\n\r\n  return <Route\r\n    path={path}\r\n    render={() => {\r\n      return isAuth ? children : <Redirect to={redirect}/>\r\n    }}\r\n  />\r\n}","import React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AdminPage} from \"./pages/adminPage/AdminPage\";\r\nimport {Login} from \"./pages/loginPage/Login\";\r\nimport {PrivateRoute} from \"./components/PrivateRoute\";\r\n\r\nconst App = () => {\r\n  const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n  return <Switch>\r\n    <Route\r\n      exact\r\n      path=\"/\"\r\n      render={() => <Redirect to=\"/admin\"/>}\r\n    />\r\n\r\n    <PrivateRoute\r\n      path=\"/admin\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <AdminPage/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/login\"\r\n      redirect=\"/admin\"\r\n      isAuth={!isAuth}\r\n    >\r\n      <Login/>\r\n    </PrivateRoute>\r\n  </Switch>\r\n}\r\n\r\nexport default App\r\n","const initialState = {\r\n  isAuth: false,\r\n  authStatus: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"AUTH/SET_AUTH_DATA\": {\r\n      return {\r\n        ...state,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case \"AUTH/SET_AUTH_STATUS\": {\r\n      return {\r\n        ...state,\r\n        authStatus: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const initialState = {\r\n  orders: [],\r\n  totalCount: null,\r\n  orderStatus: [],\r\n  cities: []\r\n};\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ORDERS/SET_ORDERS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        orders: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/ORDERS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/SET_ORDER_STATUS\": {\r\n      return {\r\n        ...state,\r\n        orderStatus: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/SET_CITIES\": {\r\n      return {\r\n        ...state,\r\n        cities: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default ordersReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport authReducer from \"./authReducer\";\r\nimport ordersReducer from \"./ordersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  orders: ordersReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from './App';\r\nimport store from \"./redux/reduxStore\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}