{"version":3,"sources":["pages/adminPage/components/Order.jsx","api/restapi.js","redux/actions/ordersActions.js","redux/actions/citiesActions.js","pages/adminPage/tabs/orders/OrdersFilterForm.jsx","pages/adminPage/tabs/orders/OrdersList.jsx","assets/Logo Icon.svg","assets/avatar.png","pages/adminPage/components/AdminPageHeader.jsx","pages/adminPage/tablesColumns.jsx","redux/actions/carsActions.js","pages/adminPage/components/SorterForm.jsx","pages/adminPage/tabs/cars/CarsTable.jsx","pages/adminPage/tabs/cities/CitiesTable.jsx","redux/actions/pointsActions.js","pages/adminPage/tabs/points/PointsTable.jsx","pages/adminPage/AdminPage.jsx","api/api.js","redux/actions/authActions.js","pages/loginPage/Login.jsx","components/PrivateRoute.jsx","App.jsx","redux/authReducer.js","redux/ordersReducer.js","redux/carsReducer.js","redux/citiesReducer.js","redux/pointsReducer.js","redux/reduxStore.js","reportWebVitals.js","index.jsx"],"names":["carOption","condition","text","className","CheckSquareOutlined","CloseSquareOutlined","Order","props","order","dateFrom","Date","dateTo","src","carId","thumbnail","path","alt","name","cityId","pointId","address","toLocaleString","color","isFullTank","isNeedChildChair","isRightWheel","price","instance","axios","create","baseURL","headers","sessionStorage","getItem","sortParams","sorters","sorterParams","field","sortDirection","ordersAPI","page","limit","filters","filterParams","orderStatus","get","then","r","data","carsAPI","url","citiesAPI","pointsAPI","ordersActions","type","payload","count","status","citiesActions","getCities","dispatch","a","response","OrdersFilterForm","onFilterFormFinish","useSelector","state","orders","cities","useDispatch","useEffect","onFinish","Item","placeholder","allowClear","map","city","Option","value","id","htmlType","OrdersList","useState","currentPage","setCurrentPage","setFilters","collapsedItems","setCollapsedItems","ordersData","totalCount","sizeOfPage","useBreakpoint","values","date","setMonth","getMonth","setDate","getDate","getOrders","Content","xs","ghost","onChange","Panel","header","style","length","height","total","pageSize","current","showQuickJumper","showTotal","simple","size","lg","AdminPageHeader","setVisible","span","md","xl","onClick","MenuUnfoldOutlined","logo","offset","SearchOutlined","BellFilled","avatar","carsColumns","title","dataIndex","key","render","categoryId","colors","index","toUpperCase","preview","width","citiesColumns","pointsColumns","carsActions","getCars","SorterForm","fields","onSorterFormFinish","CarsTable","loading","setLoading","setSorters","carsData","cars","bordered","columns","dataSource","rowKey","car","pagination","range","CitiesTable","citiesData","pointsActions","getPoints","PointsTable","pointsData","points","point","AdminPage","currentMenuItem","setCurrentMenuItem","visible","placement","onClose","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","onSelect","e","Number","icon","EditOutlined","CarOutlined","EnvironmentOutlined","HomeOutlined","alphabet","rs","Math","floor","random","window","btoa","getBasicHash","authAPI","login","password","body","username","post","authActions","Login","authStatus","auth","setItem","access_token","refresh_token","initialValues","remember","rules","required","message","validateStatus","prefix","UserOutlined","help","LockOutlined","PrivateRoute","redirect","isAuth","children","to","App","exact","initialState","authReducer","action","ordersReducer","carsReducer","citiesReducer","pointsReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3500a876.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport './Order.css'\r\nimport {CheckSquareOutlined, CloseSquareOutlined} from \"@ant-design/icons\";\r\n\r\nconst carOption = (condition, text) => {\r\n  return condition\r\n    ? <div className=\"orderCarOption\">\r\n      <CheckSquareOutlined className=\"isCarOption\"/>\r\n      <p>{text}</p>\r\n    </div>\r\n    : <div className=\"orderCarOption\">\r\n      <CloseSquareOutlined className=\"isNotCarOption\"/>\r\n      <p className=\"isNotCarOptionText\">{text}</p>\r\n    </div>\r\n}\r\n\r\nexport const Order = (props) => {\r\n  const {order} = props\r\n  const dateFrom = new Date(order?.dateFrom)\r\n  const dateTo = new Date(order?.dateTo)\r\n\r\n  return <div className=\"orderContent\">\r\n    <div className=\"orderImageBlock\">\r\n      <img\r\n        src={order?.carId?.thumbnail.path}\r\n        alt=\"carImage\"\r\n        className=\"orderCarImage\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"orderInfoBlock\">\r\n      <p>\r\n        <span>{order?.carId?.name}</span>\r\n        {order?.cityId?.name && \" в \"}\r\n        <span>{order?.cityId?.name}</span>\r\n        {order?.pointId?.address && \", \"}\r\n        {order?.pointId?.address}\r\n      </p>\r\n      <p>{dateFrom.toLocaleString()} — {dateTo.toLocaleString()}</p>\r\n      <p>Цвет: <span>{order?.color}</span></p>\r\n    </div>\r\n\r\n    <div className=\"orderOptionsBlock\">\r\n      {carOption(order?.isFullTank, \"Полный бак\")}\r\n      {carOption(order?.isNeedChildChair, \"Детское кресло\")}\r\n      {carOption(order?.isRightWheel, \"Правый руль\")}\r\n    </div>\r\n\r\n    <div className=\"orderPriceBlock\">\r\n      <p className=\"orderPrice\">{order?.price} ₽</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `Bearer ${sessionStorage.getItem(\"access_token\")}`\r\n  },\r\n});\r\n\r\nconst sortParams = (sorters) => {\r\n  let sorterParams = ``\r\n  if (sorters) {\r\n    if (sorters.field && sorters.sortDirection) {\r\n      sorterParams += `?sort[${sorters.field}]=${sorters.sortDirection}`\r\n    }\r\n  }\r\n  return sorterParams\r\n}\r\n\r\nexport const ordersAPI = {\r\n  getOrders(page, limit, filters) {\r\n    let filterParams = ``\r\n    if (filters) {\r\n      if (filters.cityId) filterParams += `&cityId=${filters.cityId}`\r\n      if (filters.orderStatus) filterParams += `&orderStatusId=${filters.orderStatus}`\r\n      if (filters.dateFrom) filterParams += `&dateFrom%5B%24gt%5D=${filters.dateFrom}`\r\n    }\r\n    return instance.get(`db/order?page=${page}&limit=${limit}${filterParams}`)\r\n  },\r\n  getOrderStatus() {\r\n    return instance.get(`db/orderStatus`).then(r => r.data.data)\r\n  }\r\n}\r\n\r\nexport const carsAPI = {\r\n  getCars(page = 1, limit = 10, sorters) {\r\n    const url = sorters\r\n      ? `db/car${sortParams(sorters)}&page=${page}&limit=${limit}`\r\n      : `db/car?page=${page}&limit=${limit}`\r\n    return instance.get(url)\r\n  }\r\n}\r\n\r\nexport const citiesAPI = {\r\n  getCities(sorters) {\r\n    return instance.get(`db/city${sortParams(sorters)}`)\r\n  }\r\n}\r\n\r\nexport const pointsAPI = {\r\n  getPoints(sorters) {\r\n    return instance.get(`db/point${sortParams(sorters)}`)\r\n  }\r\n}","import {ordersAPI} from \"../../api/restapi\";\r\n\r\nexport const ordersActions = {\r\n  setOrdersPortion: (data) => ({type: \"ORDERS/SET_ORDERS_PORTION\", payload: data}),\r\n  setTotalOrdersCount: (count) => ({type: \"ORDERS/ORDERS_TOTAL_COUNT\", payload: count}),\r\n  getOrderStatus: (status) => ({type: \"ORDERS/SET_ORDER_STATUS\", payload: status}),\r\n}\r\n\r\nexport const getOrders = (page = 1, limit = 20, filters = null) => async (dispatch) => {\r\n  const response = await ordersAPI.getOrders(page, limit, filters)\r\n  dispatch(ordersActions.setTotalOrdersCount(response.data.count))\r\n  dispatch(ordersActions.setOrdersPortion(response.data.data))\r\n}\r\n\r\nexport const getOrderStatus = () => async (dispatch) => {\r\n  const data = await ordersAPI.getOrderStatus()\r\n  dispatch(ordersActions.getOrderStatus(data))\r\n}","import {citiesAPI} from \"../../api/restapi\";\r\n\r\nexport const citiesActions = {\r\n  setCitiesPortion: (data) => ({type: \"CITIES/SET_CITIES_PORTION\", payload: data}),\r\n  setTotalCitiesCount: (count) => ({type: \"CITIES/CITIES_TOTAL_COUNT\", payload: count}),\r\n}\r\n\r\nexport const getCities = (sorters = null) => async (dispatch) => {\r\n  const response = await citiesAPI.getCities(sorters)\r\n  dispatch(citiesActions.setTotalCitiesCount(response.data.count))\r\n  dispatch(citiesActions.setCitiesPortion(response.data.data))\r\n}","/* eslint-disable react/prop-types */\r\nimport React, {useEffect} from \"react\";\r\nimport {Button, Form, Select} from \"antd\";\r\nimport './OrdersFilterForm.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getOrderStatus} from \"../../../../redux/actions/ordersActions\";\r\nimport {getCities} from \"../../../../redux/actions/citiesActions\";\r\n\r\nexport const OrdersFilterForm = (props) => {\r\n  const {onFilterFormFinish} = props\r\n  const orderStatus = useSelector(state => state.orders.orderStatus)\r\n  const cities = useSelector(state => state.cities.cities)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderStatus())\r\n    dispatch(getCities())\r\n  }, [])\r\n\r\n  return <Form\r\n    name=\"ordersFilterForm\"\r\n    className=\"filterForm\"\r\n    onFinish={onFilterFormFinish}\r\n  >\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"cityId\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите город\"\r\n        allowClear\r\n      >\r\n        {cities.map(city =>\r\n          <Select.Option\r\n            key={city.id}\r\n            value={city.id}\r\n          >{city.name}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"orderStatus\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите статус заказа\"\r\n        allowClear\r\n      >\r\n        {orderStatus.map(status =>\r\n          <Select.Option\r\n            key={status.id}\r\n            value={status.id}\r\n          >{status.name}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"dateFrom\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите промежуток\"\r\n        allowClear\r\n      >\r\n        <Select.Option value=\"month\">За последний месяц</Select.Option>\r\n        <Select.Option value=\"week\">За последнюю неделю</Select.Option>\r\n        <Select.Option value=\"day\">За последний день</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Применить\r\n      </Button>\r\n    </Form.Item>\r\n  </Form>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Collapse, Layout, Pagination} from \"antd\";\r\nimport './OrdersList.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {Order} from \"../../components/Order\";\r\nimport {OrdersFilterForm} from \"./OrdersFilterForm\";\r\nimport {getOrders} from \"../../../../redux/actions/ordersActions\";\r\n\r\nexport const OrdersList = () => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [limit, setLimit] = useState(10)\r\n  const [filters, setFilters] = useState(null)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n\r\n  const ordersData = useSelector(state => state.orders)\r\n  const {orders, totalCount} = ordersData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const paginationHandler = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  const onFilterFormFinish = (values) => {\r\n    const date = new Date()\r\n    let dateFrom = \"\"\r\n    switch (values.dateFrom) {\r\n      case \"month\": {\r\n        dateFrom = date.setMonth(date.getMonth() - 1)\r\n        break\r\n      }\r\n      case \"week\": {\r\n        dateFrom = date.setDate(date.getDate() - 7)\r\n        break\r\n      }\r\n      case \"day\": {\r\n        dateFrom = date.setDate(date.getDate() - 1)\r\n        break\r\n      }\r\n      default:\r\n    }\r\n    setFilters({...values, dateFrom})\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders(currentPage - 1, limit, filters))\r\n  }, [currentPage, filters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Заказы</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Фильтры\">\r\n            <OrdersFilterForm onFilterFormFinish={onFilterFormFinish}/>\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <OrdersFilterForm onFilterFormFinish={onFilterFormFinish}/>\r\n      }\r\n      <div\r\n        className=\"ordersList\"\r\n        style={collapsedItems.length ? {height: \"35%\"} : {height: \"70%\"}}\r\n      >\r\n        {orders.map(order => <Order order={order} key={order.id}/>)}\r\n      </div>\r\n      <Pagination\r\n        total={totalCount}\r\n        pageSize={20}\r\n        current={currentPage}\r\n        showQuickJumper\r\n        showTotal={total => `Всего ${total} заказов`}\r\n        onChange={paginationHandler}\r\n        simple={sizeOfPage.xs}\r\n        size={sizeOfPage.lg ? \"default\" : \"small\"}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","export default __webpack_public_path__ + \"static/media/Logo Icon.830257bf.svg\";","export default __webpack_public_path__ + \"static/media/avatar.8845cada.png\";","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Avatar, Badge, Button, Col, Row} from \"antd\";\r\nimport {BellFilled, MenuUnfoldOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport logo from \"../../../assets/Logo Icon.svg\";\r\nimport avatar from \"../../../assets/avatar.png\";\r\nimport './AdminPageHeader.css'\r\n\r\nexport const AdminPageHeader = (props) => {\r\n  const {setVisible} = props\r\n\r\n  const pageSize = useBreakpoint()\r\n  \r\n  return <Row className=\"adminPageHeader\">\r\n    <Col\r\n      xs={{span: 15}}\r\n      md={{span: 7}}\r\n      lg={{span: 6}}\r\n      xl={{span: 4}}\r\n      className=\"adminPageCompany\"\r\n    >\r\n      <Button className=\"sideMenuButton\" onClick={() => setVisible(true)}>\r\n        <MenuUnfoldOutlined/>\r\n      </Button>\r\n      <img\r\n        src={logo}\r\n        alt=\"logo\"\r\n        className=\"logoImg\"\r\n      />\r\n      <p className=\"logoTitle\">Need For Drive</p>\r\n    </Col>\r\n    <Col\r\n      className=\"adminPageSearch\"\r\n      xs={{offset: 3, span: 3}}\r\n      md={{offset: 11, span: 2}}\r\n      lg={{offset: 12}}\r\n      xl={{offset: 17, span: 1}}\r\n    >\r\n      <SearchOutlined className=\"searchIcon\"/>\r\n    </Col>\r\n    <Col\r\n      xs={pageSize.xs && {offset: 3, span: 3}}\r\n      md={{span: 2}}\r\n      xl={{span: 1}}\r\n      className=\"adminPageHeaderNotification\"\r\n    >\r\n      <Badge\r\n        count={2}\r\n        size=\"small\"\r\n      >\r\n        <BellFilled className=\"notificationIcon\"/>\r\n      </Badge>\r\n    </Col>\r\n    <Col\r\n      xs={{span: 3}}\r\n      md={{span: 2}}\r\n      xl={{span: 1}}\r\n      className=\"adminUserAccount\"\r\n    >\r\n      <Avatar src={avatar}/>\r\n    </Col>\r\n  </Row>\r\n}","import React from \"react\";\r\nimport {Image} from \"antd\";\r\n\r\nexport const carsColumns = [\r\n  {\r\n    title: 'Категория',\r\n    dataIndex: 'categoryId',\r\n    key: 'categoryId',\r\n    render: categoryId => `${categoryId?.name}`\r\n  },\r\n  {\r\n    title: 'Цвета',\r\n    dataIndex: 'colors',\r\n    key: 'colors',\r\n    render: colors => colors.map((color, index) => {\r\n      return `${color.toUpperCase()} ${index !== colors.length - 1 ? \", \" : \"\"}`\r\n    })\r\n  },\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Номер авто',\r\n    key: 'number',\r\n    dataIndex: 'number',\r\n  },\r\n  {\r\n    title: 'Цена',\r\n    key: 'priceMin',\r\n    dataIndex: 'priceMin',\r\n  },\r\n  {\r\n    title: 'Фото',\r\n    key: 'thumbnail',\r\n    dataIndex: 'thumbnail',\r\n    render: thumbnail => (\r\n      <Image\r\n        src={thumbnail?.path}\r\n        alt=\"carImage\"\r\n        preview={false}\r\n        width={100}\r\n      />\r\n    )\r\n  },\r\n];\r\n\r\nexport const citiesColumns = [\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  }\r\n];\r\n\r\nexport const pointsColumns = [\r\n  {\r\n    title: 'Город',\r\n    dataIndex: 'cityId',\r\n    key: 'cityId',\r\n    render: cityId => cityId?.name\r\n  },\r\n  {\r\n    title: 'Адрес',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'Описание',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  }\r\n];","import {carsAPI} from \"../../api/restapi\";\r\n\r\nexport const carsActions = {\r\n  setCarsPortion: (data) => ({type: \"CARS/SET_CARS_PORTION\", payload: data}),\r\n  setTotalCarsCount: (count) => ({type: \"CARS/CARS_TOTAL_COUNT\", payload: count}),\r\n}\r\n\r\nexport const getCars = (page, limit = 10, sorters = null) => async (dispatch) => {\r\n  const response = await carsAPI.getCars(page, limit, sorters)\r\n  dispatch(carsActions.setTotalCarsCount(response.data.count))\r\n  dispatch(carsActions.setCarsPortion(response.data.data))\r\n}","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Button, Form, Select} from \"antd\";\r\n\r\nexport const SorterForm = (props) => {\r\n  const {fields, onSorterFormFinish} = props\r\n\r\n  return <Form\r\n    className=\"filterForm\"\r\n    name=\"sorterForm\"\r\n    onFinish={onSorterFormFinish}\r\n  >\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"field\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите поле\"\r\n        allowClear\r\n      >\r\n        {fields.map(field =>\r\n          <Select.Option\r\n            key={field}\r\n            value={field}\r\n          >{field}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"sortDirection\"\r\n    >\r\n      <Select\r\n        placeholder=\"Сортировка по...\"\r\n        allowClear\r\n      >\r\n        <Select.Option value={1}>Возрастанию</Select.Option>\r\n        <Select.Option value={-1}>Убыванию</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Применить\r\n      </Button>\r\n    </Form.Item>\r\n  </Form>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './CarsTable.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Collapse, Layout, Table} from \"antd\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {carsColumns} from \"../../tablesColumns\";\r\nimport {getCars} from \"../../../../redux/actions/carsActions\";\r\nimport {SorterForm} from \"../../components/SorterForm\";\r\n\r\nexport const CarsTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n  const [sorters, setSorters] = useState(null)\r\n\r\n  const carsData = useSelector(state => state.cars)\r\n  const {cars, totalCount} = carsData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const onSorterFormFinish = (values) => {\r\n    setSorters(values)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getCars(currentPage - 1,null, sorters))\r\n    setLoading(false)\r\n  }, [currentPage, sorters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Автомобили</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Сортировки\">\r\n            <SorterForm\r\n              fields={[\"categoryId\", \"name\", \"priceMin\"]}\r\n              onSorterFormFinish={onSorterFormFinish}\r\n            />\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <SorterForm\r\n          fields={[\"categoryId\", \"name\", \"priceMin\"]}\r\n          onSorterFormFinish={onSorterFormFinish}\r\n        />\r\n      }\r\n      <div\r\n        className=\"carsTable\"\r\n        style={collapsedItems.length ? {height: \"55%\"} : {height: \"90%\"}}\r\n      >\r\n        <Table\r\n          bordered\r\n          columns={carsColumns}\r\n          dataSource={cars}\r\n          loading={loading}\r\n          rowKey={car => car.id}\r\n          pagination={{\r\n            total: totalCount,\r\n            pageSize: 10,\r\n            current: currentPage,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} авто`,\r\n            onChange: page => {\r\n              setCurrentPage(page)\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout.Content>\r\n  </>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Collapse, Layout, Table} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {citiesColumns} from \"../../tablesColumns\";\r\nimport './CitiesTable.css'\r\nimport {getCities} from \"../../../../redux/actions/citiesActions\";\r\nimport {SorterForm} from \"../../components/SorterForm\";\r\n\r\nexport const CitiesTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n  const [sorters, setSorters] = useState(null)\r\n\r\n  const citiesData = useSelector(state => state.cities)\r\n  const {cities, totalCount} = citiesData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const onSorterFormFinish = (values) => {\r\n    setSorters(values)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getCities(sorters))\r\n    setLoading(false)\r\n  }, [sorters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Города</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Сортировки\">\r\n            <SorterForm\r\n              fields={[\"name\"]}\r\n              onSorterFormFinish={onSorterFormFinish}\r\n            />\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <SorterForm\r\n          fields={[\"name\"]}\r\n          onSorterFormFinish={onSorterFormFinish}\r\n        />\r\n      }\r\n      <div\r\n        className=\"citiesTable\"\r\n        style={collapsedItems.length ? {height: \"60%\"} : {height: \"90%\"}}\r\n      >\r\n        <Table\r\n          bordered\r\n          columns={citiesColumns}\r\n          dataSource={cities}\r\n          loading={loading}\r\n          rowKey={city => city.id}\r\n          pagination={{\r\n            total: totalCount,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} городов`,\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout.Content>\r\n  </>\r\n}","import {pointsAPI} from \"../../api/restapi\";\r\n\r\nexport const pointsActions = {\r\n  setPointsPortion: (data) => ({type: \"POINTS/SET_POINTS_PORTION\", payload: data}),\r\n  setTotalPointsCount: (count) => ({type: \"POINTS/POINTS_TOTAL_COUNT\", payload: count}),\r\n}\r\n\r\nexport const getPoints = (sorters = null) => async (dispatch) => {\r\n  const response = await pointsAPI.getPoints(sorters)\r\n  dispatch(pointsActions.setTotalPointsCount(response.data.count))\r\n  dispatch(pointsActions.setPointsPortion(response.data.data))\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Collapse, Layout, Table} from \"antd\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {pointsColumns} from \"../../tablesColumns\";\r\nimport './PointsTable.css'\r\nimport {getPoints} from \"../../../../redux/actions/pointsActions\";\r\nimport {SorterForm} from \"../../components/SorterForm\";\r\n\r\nexport const PointsTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n  const [sorters, setSorters] = useState(null)\r\n\r\n  const pointsData = useSelector(state => state.points)\r\n  const {points, totalCount} = pointsData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const onSorterFormFinish = (values) => {\r\n    setSorters(values)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getPoints(sorters))\r\n    setLoading(false)\r\n  }, [sorters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Пункты</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Сортировки\">\r\n            <SorterForm\r\n              fields={[\"cityId\", \"address\", \"name\"]}\r\n              onSorterFormFinish={onSorterFormFinish}\r\n            />\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <SorterForm\r\n          fields={[\"cityId\", \"address\", \"name\"]}\r\n          onSorterFormFinish={onSorterFormFinish}\r\n        />\r\n      }\r\n      <div\r\n        className=\"pointsTable\"\r\n        style={collapsedItems.length ? {height: \"55%\"} : {height: \"90%\"}}\r\n      >\r\n        <Table\r\n          bordered\r\n          columns={pointsColumns}\r\n          dataSource={points}\r\n          loading={loading}\r\n          rowKey={point => point.id}\r\n          pagination={{\r\n            total: totalCount,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} пунктов`,\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout.Content>\r\n  </>\r\n}","import React, {useState} from \"react\";\r\nimport {Drawer, Layout, Menu} from 'antd';\r\nimport {CarOutlined, EditOutlined, EnvironmentOutlined, HomeOutlined} from \"@ant-design/icons\";\r\nimport './AdminPage.css'\r\nimport {OrdersList} from \"./tabs/orders/OrdersList\";\r\nimport {AdminPageHeader} from \"./components/AdminPageHeader\";\r\nimport {CarsTable} from \"./tabs/cars/CarsTable\";\r\nimport {CitiesTable} from \"./tabs/cities/CitiesTable\";\r\nimport {PointsTable} from \"./tabs/points/PointsTable\";\r\n\r\nexport const AdminPage = () => {\r\n  const [currentMenuItem, setCurrentMenuItem] = useState(1)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const onSelectHandler = (e) => {\r\n    setCurrentMenuItem(Number(e.key))\r\n    setVisible(false)\r\n  }\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  return <Layout>\r\n    <AdminPageHeader setVisible={setVisible}/>\r\n    <Layout>\r\n      <Drawer\r\n        title=\"Меню\"\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n        visible={visible}>\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          style={{height: '100%', borderRight: 0}}\r\n          onSelect={onSelectHandler}\r\n        >\r\n          <Menu.Item\r\n            key=\"1\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EditOutlined/>}\r\n          >Список заказов</Menu.Item>\r\n          <Menu.Item\r\n            key=\"2\"\r\n            className=\"sideMenuItem\"\r\n            icon={<CarOutlined/>}\r\n          >Таблица авто</Menu.Item>\r\n          <Menu.Item\r\n            key=\"3\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EnvironmentOutlined/>}\r\n          >Таблица городов</Menu.Item>\r\n          <Menu.Item\r\n            key=\"4\"\r\n            className=\"sideMenuItem\"\r\n            icon={<HomeOutlined/>}\r\n          >Таблица пунктов</Menu.Item>\r\n        </Menu>\r\n      </Drawer>\r\n      <Layout className=\"adminPageContainer\">\r\n        {currentMenuItem === 1 && <OrdersList/>}\r\n        {currentMenuItem === 2 && <CarsTable/>}\r\n        {currentMenuItem === 3 && <CitiesTable/>}\r\n        {currentMenuItem === 4 && <PointsTable/>}\r\n      </Layout>\r\n    </Layout>\r\n  </Layout>\r\n}","import axios from \"axios\";\r\n\r\nconst clientSecret = \"4cbcea96de\"\r\nconst alphabet = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\nconst getBasicHash = () => {\r\n  let rs = \"\";\r\n  while (rs.length < 7) {\r\n    rs += alphabet[Math.floor(Math.random() * alphabet.length)];\r\n  }\r\n  return `Basic ${window.btoa(`${rs}:${clientSecret}`)}`\r\n}\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": getBasicHash()\r\n  },\r\n});\r\n\r\nexport const authAPI = {\r\n  postLogin(login, password) {\r\n    const body = {\r\n      username: login,\r\n      password\r\n    }\r\n    return instance.post(`auth/login`, body)\r\n  }\r\n}","import {authAPI} from \"../../api/api\";\r\n\r\nexport const authActions = {\r\n  setAuthData: (data) => ({type: \"AUTH/SET_AUTH_DATA\", payload: data}),\r\n  setAuthStatus: (status) => ({type: \"AUTH/SET_AUTH_STATUS\", payload: status})\r\n}\r\n\r\nexport const postLogin = (login, password) => async (dispatch) => {\r\n  try {\r\n    const response = await authAPI.postLogin(login, password)\r\n    sessionStorage.setItem(\"access_token\", response.data.access_token)\r\n    sessionStorage.setItem(\"refresh_token\", response.data.refresh_token)\r\n    dispatch(authActions.setAuthData(response.data))\r\n  } catch (e) {\r\n    dispatch(authActions.setAuthStatus(e.response.status))\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './Login.css'\r\nimport {Button, Form, Input, Space} from \"antd\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport logo from '../../assets/Logo Icon.svg'\r\nimport {postLogin} from \"../../redux/actions/authActions\";\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onFinish = (values) => {\r\n    dispatch(postLogin(values.username, values.password))\r\n  };\r\n\r\n  const authStatus = useSelector(state => state.auth.authStatus)\r\n\r\n  return <div className=\"loginContainer\">\r\n    <div className=\"loginContent\">\r\n      <Space\r\n        className=\"loginHeader\"\r\n        size=\"middle\"\r\n      >\r\n        <img\r\n          className=\"logo\"\r\n          src={logo}\r\n          alt=\"logo\"\r\n        />\r\n        <p className=\"company\">Need For Drive</p>\r\n      </Space>\r\n      <div className=\"loginCard\">\r\n        <p className=\"loginTitle\">Вход</p>\r\n        <Form\r\n          name=\"loginForm\"\r\n          onFinish={onFinish}\r\n          initialValues={{remember: true}} // intern intern-S!\r\n        >\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"username\"\r\n            rules={[{required: true, message: 'Введите логин'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined/>}\r\n              placeholder=\"Username\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"password\"\r\n            rules={[{required: true, message: 'Введите пароль'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n            help={authStatus === 401 ? \"Неверный логин или пароль\" : null}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined/>}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <div className=\"loginCardFooter\">\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a>Запросить доступ</a>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"submitButton\"\r\n            >Войти</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = (props) => {\r\n  const {path, redirect, isAuth, children} = props\r\n\r\n  return <Route\r\n    path={path}\r\n    render={() => {\r\n      return isAuth ? children : <Redirect to={redirect}/>\r\n    }}\r\n  />\r\n}","import React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AdminPage} from \"./pages/adminPage/AdminPage\";\r\nimport {Login} from \"./pages/loginPage/Login\";\r\nimport {PrivateRoute} from \"./components/PrivateRoute\";\r\n\r\nconst App = () => {\r\n  const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n  return <Switch>\r\n    <Route\r\n      exact\r\n      path=\"/\"\r\n      render={() => <Redirect to=\"/admin\"/>}\r\n    />\r\n\r\n    <PrivateRoute\r\n      path=\"/admin\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <AdminPage/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/login\"\r\n      redirect=\"/admin\"\r\n      isAuth={!isAuth}\r\n    >\r\n      <Login/>\r\n    </PrivateRoute>\r\n  </Switch>\r\n}\r\n\r\nexport default App\r\n","const initialState = {\r\n  isAuth: false,\r\n  authStatus: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"AUTH/SET_AUTH_DATA\": {\r\n      return {\r\n        ...state,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case \"AUTH/SET_AUTH_STATUS\": {\r\n      return {\r\n        ...state,\r\n        authStatus: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const initialState = {\r\n  orders: [],\r\n  totalCount: null,\r\n  orderStatus: []\r\n};\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ORDERS/SET_ORDERS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        orders: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/ORDERS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/SET_ORDER_STATUS\": {\r\n      return {\r\n        ...state,\r\n        orderStatus: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default ordersReducer;","const initialState = {\r\n  cars: [],\r\n  totalCount: null,\r\n};\r\n\r\nconst carsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CARS/SET_CARS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        cars: action.payload\r\n      }\r\n    }\r\n    case \"CARS/CARS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default carsReducer;","const initialState = {\r\n  cities: [],\r\n  totalCount: null,\r\n};\r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CITIES/SET_CITIES_PORTION\": {\r\n      return {\r\n        ...state,\r\n        cities: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/CITIES_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default citiesReducer;","const initialState = {\r\n  points: [],\r\n  totalCount: null,\r\n};\r\n\r\nconst pointsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"POINTS/SET_POINTS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        points: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/POINTS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default pointsReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport authReducer from \"./authReducer\";\r\nimport ordersReducer from \"./ordersReducer\";\r\nimport carsReducer from \"./carsReducer\";\r\nimport citiesReducer from \"./citiesReducer\";\r\nimport pointsReducer from \"./pointsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  orders: ordersReducer,\r\n  cars: carsReducer,\r\n  cities: citiesReducer,\r\n  points: pointsReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from './App';\r\nimport store from \"./redux/reduxStore\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}