{"version":3,"sources":["pages/adminPage/components/Order.jsx","api/restapi.js","redux/actions/ordersActions.js","redux/actions/citiesActions.js","pages/adminPage/tabs/orders/OrdersFilterForm.jsx","pages/adminPage/tabs/orders/OrdersList.jsx","assets/Logo Icon.svg","assets/avatar.png","pages/adminPage/components/AdminPageHeader.jsx","redux/actions/carsActions.js","redux/actions/pointsActions.js","pages/adminPage/tablesColumns.jsx","pages/adminPage/components/SorterForm.jsx","pages/adminPage/tabs/cars/CarsTable.jsx","pages/adminPage/tabs/cities/CitiesTable.jsx","pages/adminPage/tabs/points/PointsTable.jsx","pages/adminPage/AdminPage.jsx","api/api.js","redux/actions/authActions.js","pages/loginPage/Login.jsx","components/PrivateRoute.jsx","assets/blankCar.png","pages/entityEditPage/carEdit/CarEditForm.jsx","pages/entityEditPage/carEdit/CarEditPage.jsx","pages/entityEditPage/cityEdit/CityEditForm.jsx","pages/entityEditPage/cityEdit/CityEditPage.jsx","pages/entityEditPage/pointEdit/PointEditForm.jsx","pages/entityEditPage/pointEdit/PointEditPage.jsx","App.jsx","redux/authReducer.js","redux/ordersReducer.js","redux/carsReducer.js","redux/citiesReducer.js","redux/pointsReducer.js","redux/reduxStore.js","reportWebVitals.js","index.jsx"],"names":["carOption","condition","text","className","CheckSquareOutlined","CloseSquareOutlined","Order","props","order","dateFrom","Date","dateTo","src","carId","thumbnail","path","alt","name","cityId","pointId","address","toLocaleString","color","isFullTank","isNeedChildChair","isRightWheel","price","instance","axios","create","baseURL","headers","sessionStorage","getItem","sortParams","sorters","sorterParams","field","sortDirection","ordersAPI","page","limit","filters","filterParams","orderStatus","get","then","r","data","carsAPI","url","put","post","delete","citiesAPI","pointsAPI","ordersActions","type","payload","count","status","citiesActions","city","action","getCities","dispatch","a","response","setCityToEdit","setCityAction","OrdersFilterForm","onFilterFormFinish","useSelector","state","orders","cities","useDispatch","useEffect","onFinish","Item","placeholder","allowClear","map","Option","value","id","htmlType","OrdersList","useState","currentPage","setCurrentPage","setFilters","collapsedItems","setCollapsedItems","ordersData","totalCount","sizeOfPage","useBreakpoint","values","date","setMonth","getMonth","setDate","getDate","getOrders","Content","xs","ghost","onChange","Panel","header","style","length","height","total","pageSize","current","showQuickJumper","showSizeChanger","showTotal","simple","size","lg","AdminPageHeader","setVisible","span","md","xl","onClick","MenuUnfoldOutlined","logo","offset","SearchOutlined","BellFilled","avatar","carsActions","car","getCars","setCarToEdit","setCarAction","putCar","postCar","pointsActions","point","getPoints","setPointToEdit","setPointAction","carsColumns","title","dataIndex","key","render","categoryId","colors","index","toUpperCase","preview","width","cars","showConfirm","Modal","confirm","icon","ExclamationCircleOutlined","onOk","console","log","to","citiesColumns","pointsColumns","SorterForm","fields","onSorterFormFinish","idName","CarsTable","loading","setLoading","setSorters","carsData","bordered","columns","dataSource","rowKey","pagination","range","CitiesTable","citiesData","PointsTable","pointsData","points","AdminPage","currentMenuItem","setCurrentMenuItem","visible","placement","onClose","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","onSelect","e","Number","EditOutlined","CarOutlined","EnvironmentOutlined","HomeOutlined","alphabet","rs","Math","floor","random","window","btoa","getBasicHash","authAPI","login","password","body","username","authActions","Login","authStatus","auth","setItem","access_token","refresh_token","initialValues","remember","rules","required","message","validateStatus","prefix","UserOutlined","help","LockOutlined","PrivateRoute","redirect","isAuth","children","CarEditForm","image","carToEdit","setColors","categories","carAction","carSuccess","options","category","addColor","useRef","onFormSubmitHandle","i","formData","priceMin","priceMax","number","description","colorsList","success","labelCol","label","TextArea","showCount","maxLength","autoSize","filterOption","inputValue","option","indexOf","List","ref","block","PlusOutlined","Group","danger","CarEditPage","setImage","align","blankCar","beforeUpload","reader","FileReader","readAsDataURL","onload","tempThumbnail","mimetype","originalname","result","UploadOutlined","CityEditForm","cityToEdit","cityAction","citySuccess","putCity","CityEditPage","PointEditForm","pointToEdit","pointData","pointAction","pointSuccess","putPoint","PointEditPage","App","exact","initialState","authReducer","ordersReducer","carsReducer","citiesReducer","pointsReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a047673f.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport './Order.css'\r\nimport {CheckSquareOutlined, CloseSquareOutlined} from \"@ant-design/icons\";\r\n\r\nconst carOption = (condition, text) => {\r\n  return condition\r\n    ? <div className=\"orderCarOption\">\r\n      <CheckSquareOutlined className=\"isCarOption\"/>\r\n      <p>{text}</p>\r\n    </div>\r\n    : <div className=\"orderCarOption\">\r\n      <CloseSquareOutlined className=\"isNotCarOption\"/>\r\n      <p className=\"isNotCarOptionText\">{text}</p>\r\n    </div>\r\n}\r\n\r\nexport const Order = (props) => {\r\n  const {order} = props\r\n  const dateFrom = new Date(order?.dateFrom)\r\n  const dateTo = new Date(order?.dateTo)\r\n\r\n  return <div className=\"orderContent\">\r\n    <div className=\"orderImageBlock\">\r\n      <img\r\n        src={order?.carId?.thumbnail.path}\r\n        alt=\"carImage\"\r\n        className=\"orderCarImage\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"orderInfoBlock\">\r\n      <p>\r\n        <span>{order?.carId?.name}</span>\r\n        {order?.cityId?.name && \" в \"}\r\n        <span>{order?.cityId?.name}</span>\r\n        {order?.pointId?.address && \", \"}\r\n        {order?.pointId?.address}\r\n      </p>\r\n      <p>{dateFrom.toLocaleString()} — {dateTo.toLocaleString()}</p>\r\n      <p>Цвет: <span>{order?.color}</span></p>\r\n    </div>\r\n\r\n    <div className=\"orderOptionsBlock\">\r\n      {carOption(order?.isFullTank, \"Полный бак\")}\r\n      {carOption(order?.isNeedChildChair, \"Детское кресло\")}\r\n      {carOption(order?.isRightWheel, \"Правый руль\")}\r\n    </div>\r\n\r\n    <div className=\"orderPriceBlock\">\r\n      <p className=\"orderPrice\">{order?.price} ₽</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `Bearer ${sessionStorage.getItem(\"access_token\")}`\r\n  },\r\n});\r\n\r\nconst sortParams = (sorters) => {\r\n  let sorterParams = ``\r\n  if (sorters && sorters.field && sorters.sortDirection) {\r\n    sorterParams += `?sort[${sorters.field}]=${sorters.sortDirection}`\r\n  }\r\n  return sorterParams\r\n}\r\n\r\nexport const ordersAPI = {\r\n  getOrders(page, limit, filters) {\r\n    let filterParams = ``\r\n    if (filters) {\r\n      if (filters.cityId) filterParams += `&cityId=${filters.cityId}`\r\n      if (filters.orderStatus) filterParams += `&orderStatusId=${filters.orderStatus}`\r\n      if (filters.dateFrom) filterParams += `&dateFrom%5B%24gt%5D=${filters.dateFrom}`\r\n    }\r\n    return instance.get(`db/order?page=${page}&limit=${limit}${filterParams}`)\r\n  },\r\n  getOrderStatus() {\r\n    return instance.get(`db/orderStatus`).then(r => r.data.data)\r\n  }\r\n}\r\n\r\nexport const carsAPI = {\r\n  getCars(page = 1, limit = 10, sorters) {\r\n    const url = sorters\r\n      ? `db/car${sortParams(sorters)}&page=${page}&limit=${limit}`\r\n      : `db/car?page=${page}&limit=${limit}`\r\n    return instance.get(url)\r\n  },\r\n  getCategories() {\r\n    return instance.get(`db/category`).then(r => r.data.data)\r\n  },\r\n  putCar(carId, data) {\r\n    return instance.put(`db/car/${carId}`, data)\r\n  },\r\n  postCar(data) {\r\n    return instance.post(`db/car`, data)\r\n  },\r\n  deleteCar(carId) {\r\n    return instance.delete(`db/car/${carId}`)\r\n  }\r\n}\r\n\r\nexport const citiesAPI = {\r\n  getCities(sorters) {\r\n    return instance.get(`db/city${sortParams(sorters)}`)\r\n  },\r\n  putCity(cityId, data) {\r\n    return instance.put(`db/city/${cityId}`, data)\r\n  },\r\n  postCity(data) {\r\n    return instance.post(`db/city`, data)\r\n  }\r\n}\r\n\r\nexport const pointsAPI = {\r\n  getPoints(sorters) {\r\n    return instance.get(`db/point${sortParams(sorters)}`)\r\n  },\r\n  putPoint(pointId, data) {\r\n    return instance.put(`db/point/${pointId}`, data)\r\n  },\r\n  postPoint(data) {\r\n    return instance.post(`db/point`, data)\r\n  }\r\n}","import {ordersAPI} from \"../../api/restapi\";\r\n\r\nexport const ordersActions = {\r\n  setOrdersPortion: (data) => ({type: \"ORDERS/SET_ORDERS_PORTION\", payload: data}),\r\n  setTotalOrdersCount: (count) => ({type: \"ORDERS/ORDERS_TOTAL_COUNT\", payload: count}),\r\n  getOrderStatus: (status) => ({type: \"ORDERS/SET_ORDER_STATUS\", payload: status}),\r\n}\r\n\r\nexport const getOrders = (page = 1, limit = 20, filters = null) => async (dispatch) => {\r\n  const response = await ordersAPI.getOrders(page, limit, filters)\r\n  dispatch(ordersActions.setTotalOrdersCount(response.data.count))\r\n  dispatch(ordersActions.setOrdersPortion(response.data.data))\r\n}\r\n\r\nexport const getOrderStatus = () => async (dispatch) => {\r\n  const data = await ordersAPI.getOrderStatus()\r\n  dispatch(ordersActions.getOrderStatus(data))\r\n}","import {citiesAPI} from \"../../api/restapi\";\r\n\r\nexport const citiesActions = {\r\n  setCitiesPortion: (data) => ({type: \"CITIES/SET_CITIES_PORTION\", payload: data}),\r\n  setTotalCitiesCount: (count) => ({type: \"CITIES/CITIES_TOTAL_COUNT\", payload: count}),\r\n  setCityToEdit: (city) => ({type: \"CITIES/SET_CITY_TO_EDIT\", payload: city}),\r\n  setCityAction: (action) => ({type: \"CITIES/SET_CITY_ACTION\", payload: action}),\r\n  setCitySuccess: (status) => ({type: \"CITIES/SET_CITY_SUCCESS\", payload: status}),\r\n}\r\n\r\nexport const getCities = (sorters = null) => async (dispatch) => {\r\n  const response = await citiesAPI.getCities(sorters)\r\n  dispatch(citiesActions.setTotalCitiesCount(response.data.count))\r\n  dispatch(citiesActions.setCitiesPortion(response.data.data))\r\n}\r\n\r\nexport const setCityToEdit = (city) => async (dispatch) => {\r\n  dispatch(citiesActions.setCityToEdit(city))\r\n}\r\n\r\nexport const setCityAction = (action) => async (dispatch) => {\r\n  dispatch(citiesActions.setCitySuccess(false))\r\n  dispatch(citiesActions.setCityAction(action))\r\n}\r\n\r\nexport const putCity = (cityId, data) => async (dispatch) => {\r\n  const response = await citiesAPI.putCity(cityId, data)\r\n  if (response.status === 200) {\r\n    dispatch(citiesActions.setCitySuccess(true))\r\n  } else {\r\n    dispatch(citiesActions.setCitySuccess(false))\r\n  }\r\n}\r\n\r\nexport const postCity = (data) => async (dispatch) => {\r\n  const response = await citiesAPI.postCity(data)\r\n  if (response.status === 200) {\r\n    dispatch(citiesActions.setCitySuccess(true))\r\n  } else {\r\n    dispatch(citiesActions.setCitySuccess(false))\r\n  }\r\n}","/* eslint-disable react/prop-types */\r\nimport React, {useEffect} from \"react\";\r\nimport {Button, Form, Select} from \"antd\";\r\nimport './OrdersFilterForm.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getOrderStatus} from \"../../../../redux/actions/ordersActions\";\r\nimport {getCities} from \"../../../../redux/actions/citiesActions\";\r\n\r\nexport const OrdersFilterForm = (props) => {\r\n  const {onFilterFormFinish} = props\r\n  const orderStatus = useSelector(state => state.orders.orderStatus)\r\n  const cities = useSelector(state => state.cities.cities)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderStatus())\r\n    dispatch(getCities())\r\n  }, [])\r\n\r\n  return <Form\r\n    name=\"ordersFilterForm\"\r\n    className=\"filterForm\"\r\n    onFinish={onFilterFormFinish}\r\n  >\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"cityId\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите город\"\r\n        allowClear\r\n      >\r\n        {cities.map(city =>\r\n          <Select.Option\r\n            key={city.id}\r\n            value={city.id}\r\n          >{city.name}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"orderStatus\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите статус заказа\"\r\n        allowClear\r\n      >\r\n        {orderStatus.map(status =>\r\n          <Select.Option\r\n            key={status.id}\r\n            value={status.id}\r\n          >{status.name}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"dateFrom\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите промежуток\"\r\n        allowClear\r\n      >\r\n        <Select.Option value=\"month\">За последний месяц</Select.Option>\r\n        <Select.Option value=\"week\">За последнюю неделю</Select.Option>\r\n        <Select.Option value=\"day\">За последний день</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Применить\r\n      </Button>\r\n    </Form.Item>\r\n  </Form>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Collapse, Layout, Pagination} from \"antd\";\r\nimport './OrdersList.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {Order} from \"../../components/Order\";\r\nimport {OrdersFilterForm} from \"./OrdersFilterForm\";\r\nimport {getOrders} from \"../../../../redux/actions/ordersActions\";\r\n\r\nexport const OrdersList = () => {\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [limit, setLimit] = useState(10)\r\n  const [filters, setFilters] = useState(null)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n\r\n  const ordersData = useSelector(state => state.orders)\r\n  const {orders, totalCount} = ordersData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const paginationHandler = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  const onFilterFormFinish = (values) => {\r\n    const date = new Date()\r\n    let dateFrom = \"\"\r\n    switch (values.dateFrom) {\r\n      case \"month\": {\r\n        dateFrom = date.setMonth(date.getMonth() - 1)\r\n        break\r\n      }\r\n      case \"week\": {\r\n        dateFrom = date.setDate(date.getDate() - 7)\r\n        break\r\n      }\r\n      case \"day\": {\r\n        dateFrom = date.setDate(date.getDate() - 1)\r\n        break\r\n      }\r\n      default:\r\n    }\r\n    setFilters({...values, dateFrom})\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders(currentPage - 1, limit, filters))\r\n  }, [currentPage, filters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Заказы</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Фильтры\">\r\n            <OrdersFilterForm onFilterFormFinish={onFilterFormFinish}/>\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <OrdersFilterForm onFilterFormFinish={onFilterFormFinish}/>\r\n      }\r\n      <div\r\n        className=\"ordersList\"\r\n        style={collapsedItems.length ? {height: \"35%\"} : {height: \"70%\"}}\r\n      >\r\n        {orders.map(order => <Order order={order} key={order.id}/>)}\r\n      </div>\r\n      <Pagination\r\n        total={totalCount}\r\n        pageSize={20}\r\n        current={currentPage}\r\n        showQuickJumper\r\n        showSizeChanger={false}\r\n        showTotal={total => `Всего ${total} заказов`}\r\n        onChange={paginationHandler}\r\n        simple={sizeOfPage.xs}\r\n        size={sizeOfPage.lg ? \"default\" : \"small\"}\r\n      />\r\n    </Layout.Content>\r\n  </>\r\n}","export default __webpack_public_path__ + \"static/media/Logo Icon.830257bf.svg\";","export default __webpack_public_path__ + \"static/media/avatar.8845cada.png\";","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Avatar, Badge, Button, Col, Row} from \"antd\";\r\nimport {BellFilled, MenuUnfoldOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport logo from \"../../../assets/Logo Icon.svg\";\r\nimport avatar from \"../../../assets/avatar.png\";\r\nimport './AdminPageHeader.css'\r\n\r\nexport const AdminPageHeader = (props) => {\r\n  const {setVisible} = props\r\n\r\n  const pageSize = useBreakpoint()\r\n  \r\n  return <Row className=\"adminPageHeader\">\r\n    <Col\r\n      xs={{span: 15}}\r\n      md={{span: 7}}\r\n      lg={{span: 6}}\r\n      xl={{span: 4}}\r\n      className=\"adminPageCompany\"\r\n    >\r\n      <Button className=\"sideMenuButton\" onClick={() => setVisible(true)}>\r\n        <MenuUnfoldOutlined/>\r\n      </Button>\r\n      <img\r\n        src={logo}\r\n        alt=\"logo\"\r\n        className=\"logoImg\"\r\n      />\r\n      <p className=\"logoTitle\">Need For Drive</p>\r\n    </Col>\r\n    <Col\r\n      className=\"adminPageSearch\"\r\n      xs={{offset: 3, span: 3}}\r\n      md={{offset: 11, span: 2}}\r\n      lg={{offset: 12}}\r\n      xl={{offset: 17, span: 1}}\r\n    >\r\n      <SearchOutlined className=\"searchIcon\"/>\r\n    </Col>\r\n    <Col\r\n      xs={pageSize.xs && {offset: 3, span: 3}}\r\n      md={{span: 2}}\r\n      xl={{span: 1}}\r\n      className=\"adminPageHeaderNotification\"\r\n    >\r\n      <Badge\r\n        count={2}\r\n        size=\"small\"\r\n      >\r\n        <BellFilled className=\"notificationIcon\"/>\r\n      </Badge>\r\n    </Col>\r\n    <Col\r\n      xs={{span: 3}}\r\n      md={{span: 2}}\r\n      xl={{span: 1}}\r\n      className=\"adminUserAccount\"\r\n    >\r\n      <Avatar src={avatar}/>\r\n    </Col>\r\n  </Row>\r\n}","import {carsAPI} from \"../../api/restapi\";\r\n\r\nexport const carsActions = {\r\n  setCarsPortion: (data) => ({type: \"CARS/SET_CARS_PORTION\", payload: data}),\r\n  setTotalCarsCount: (count) => ({type: \"CARS/CARS_TOTAL_COUNT\", payload: count}),\r\n  setCarToEdit: (car) => ({type: \"CARS/SET_CAR_TO_EDIT\", payload: car}),\r\n  setCategories: (data) => ({type: \"CARS/SET_CATEGORIES\", payload: data}),\r\n  setCarAction: (action) => ({type: \"CARS/SET_CAR_ACTION\", payload: action}),\r\n  setCarSuccess: (status) => ({type: \"CARS/SET_CAR_SUCCESS\", payload: status}),\r\n  setCurrentPage: (page) => ({type: \"CARS/SET_CURRENT_PAGE\", payload: page}),\r\n}\r\n\r\nexport const getCars = (page, limit, sorters = null) => async (dispatch) => {\r\n  const response = await carsAPI.getCars(page, limit, sorters)\r\n  dispatch(carsActions.setTotalCarsCount(response.data.count))\r\n  dispatch(carsActions.setCarsPortion(response.data.data))\r\n}\r\n\r\nexport const getCategories = () => async (dispatch) => {\r\n  const data = await carsAPI.getCategories()\r\n  dispatch(carsActions.setCategories(data))\r\n}\r\n\r\nexport const setCarToEdit = (car) => async (dispatch) => {\r\n  dispatch(carsActions.setCarToEdit(car))\r\n}\r\n\r\nexport const setCarAction = (action) => async (dispatch) => {\r\n  dispatch(carsActions.setCarSuccess(false))\r\n  dispatch(carsActions.setCarAction(action))\r\n}\r\n\r\nexport const putCar = (carId, data) => async (dispatch) => {\r\n  const response = await carsAPI.putCar(carId, data)\r\n  if (response.status === 200) {\r\n    dispatch(carsActions.setCarSuccess(true))\r\n  } else {\r\n    dispatch(carsActions.setCarSuccess(false))\r\n  }\r\n}\r\n\r\nexport const postCar = (data) => async (dispatch) => {\r\n  const response = await carsAPI.postCar(data)\r\n  if (response.status === 200) {\r\n    dispatch(carsActions.setCarSuccess(true))\r\n  } else {\r\n    dispatch(carsActions.setCarSuccess(false))\r\n  }\r\n}\r\n\r\nexport const deleteCar = (carId) => async () => {\r\n  await carsAPI.deleteCar(carId)\r\n}\r\n\r\nexport const setCurrentPage = (page) => async (dispatch) => {\r\n  dispatch(carsActions.setCurrentPage(page))\r\n}","import {pointsAPI} from \"../../api/restapi\";\r\n\r\nexport const pointsActions = {\r\n  setPointsPortion: (data) => ({type: \"POINTS/SET_POINTS_PORTION\", payload: data}),\r\n  setTotalPointsCount: (count) => ({type: \"POINTS/POINTS_TOTAL_COUNT\", payload: count}),\r\n  setPointToEdit: (point) => ({type: \"POINTS/SET_POINT_TO_EDIT\", payload: point}),\r\n  setPointAction: (action) => ({type: \"POINTS/SET_POINT_ACTION\", payload: action}),\r\n  setPointSuccess: (status) => ({type: \"POINTS/SET_POINT_SUCCESS\", payload: status}),\r\n}\r\n\r\nexport const getPoints = (sorters = null) => async (dispatch) => {\r\n  const response = await pointsAPI.getPoints(sorters)\r\n  dispatch(pointsActions.setTotalPointsCount(response.data.count))\r\n  dispatch(pointsActions.setPointsPortion(response.data.data))\r\n}\r\n\r\nexport const setPointToEdit = (point) => async (dispatch) => {\r\n  dispatch(pointsActions.setPointToEdit(point))\r\n}\r\n\r\nexport const setPointAction = (action) => async (dispatch) => {\r\n  dispatch(pointsActions.setPointSuccess(false))\r\n  dispatch(pointsActions.setPointAction(action))\r\n}\r\n\r\nexport const putPoint = (pointId, data) => async (dispatch) => {\r\n  const response = await pointsAPI.putPoint(pointId, data)\r\n  if (response.status === 200) {\r\n    dispatch(pointsActions.setPointSuccess(true))\r\n  } else {\r\n    dispatch(pointsActions.setPointSuccess(false))\r\n  }\r\n}\r\n\r\nexport const postPoint = (data) => async (dispatch) => {\r\n  const response = await pointsAPI.postPoint(data)\r\n  if (response.status === 200) {\r\n    dispatch(pointsActions.setPointSuccess(true))\r\n  } else {\r\n    dispatch(pointsActions.setPointSuccess(false))\r\n  }\r\n}","import React from \"react\";\r\nimport {Button, Image, Modal, Space} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ExclamationCircleOutlined} from \"@ant-design/icons\";\r\nimport {deleteCar, getCars, setCarAction, setCarToEdit, setCurrentPage} from \"../../redux/actions/carsActions\";\r\nimport {setCityAction, setCityToEdit} from \"../../redux/actions/citiesActions\";\r\nimport {setPointAction, setPointToEdit} from \"../../redux/actions/pointsActions\";\r\n\r\nexport const carsColumns = [\r\n  {\r\n    title: 'Категория',\r\n    dataIndex: 'categoryId',\r\n    key: 'categoryId',\r\n    render: categoryId => `${categoryId?.name}`\r\n  },\r\n  {\r\n    title: 'Цвета',\r\n    dataIndex: 'colors',\r\n    key: 'colors',\r\n    render: colors => colors.map((color, index) => {\r\n      return `${color.toUpperCase()} ${index !== colors.length - 1 ? \", \" : \"\"}`\r\n    })\r\n  },\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Номер авто',\r\n    key: 'number',\r\n    dataIndex: 'number',\r\n  },\r\n  {\r\n    title: 'Цена',\r\n    key: 'priceMin',\r\n    dataIndex: 'priceMin',\r\n  },\r\n  {\r\n    title: 'Фото',\r\n    key: 'thumbnail',\r\n    dataIndex: 'thumbnail',\r\n    render: thumbnail => (\r\n      <Image\r\n        src={thumbnail?.path}\r\n        alt=\"carImage\"\r\n        preview={false}\r\n        width={100}\r\n      />\r\n    )\r\n  },\r\n  {\r\n    title: 'Действия',\r\n    key: 'actions',\r\n    render: (car) => {\r\n      const dispatch = useDispatch()\r\n      const currentPage = useSelector(state => state.cars.currentPage)\r\n\r\n      const showConfirm = () => {\r\n        Modal.confirm({\r\n          title: 'Точно удалить машину?',\r\n          icon: <ExclamationCircleOutlined/>,\r\n          onOk() {\r\n            console.log(currentPage)\r\n            dispatch(deleteCar(car.id))\r\n            dispatch(setCurrentPage(1))\r\n            dispatch(getCars(1))\r\n          }\r\n        });\r\n      }\r\n\r\n      return <Space>\r\n        <Link to=\"car-edit\" onClick={() => {\r\n          dispatch(setCarAction(\"update\"))\r\n          dispatch(setCarToEdit(car))\r\n        }}>Изменить</Link>\r\n        <Button type=\"link\" onClick={() => {\r\n          dispatch(showConfirm)\r\n        }}>Удалить</Button>\r\n      </Space>\r\n    }\r\n  },\r\n];\r\n\r\nexport const citiesColumns = [\r\n  {\r\n    title: 'Наименование',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Действия',\r\n    key: 'actions',\r\n    render: (city) => {\r\n      const dispatch = useDispatch()\r\n\r\n      return <Link to=\"city-edit\" onClick={() => {\r\n        dispatch(setCityAction(\"update\"))\r\n        dispatch(setCityToEdit(city))\r\n      }}>Изменить</Link>\r\n    }\r\n  },\r\n];\r\n\r\nexport const pointsColumns = [\r\n  {\r\n    title: 'Город',\r\n    dataIndex: 'cityId',\r\n    key: 'cityId',\r\n    render: cityId => cityId?.name\r\n  },\r\n  {\r\n    title: 'Адрес',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'Описание',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Действия',\r\n    key: 'actions',\r\n    render: (point) => {\r\n      const dispatch = useDispatch()\r\n\r\n      return <Link to=\"point-edit\" onClick={() => {\r\n        dispatch(setPointAction(\"update\"))\r\n        dispatch(setPointToEdit(point))\r\n      }}>Изменить</Link>\r\n    }\r\n  },\r\n];","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Button, Form, Select} from \"antd\";\r\n\r\nexport const SorterForm = (props) => {\r\n  const {fields, onSorterFormFinish} = props\r\n\r\n  return <Form\r\n    className=\"filterForm\"\r\n    name=\"sorterForm\"\r\n    onFinish={onSorterFormFinish}\r\n  >\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"field\"\r\n    >\r\n      <Select\r\n        placeholder=\"Выберите поле\"\r\n        allowClear\r\n      >\r\n        {fields.map(field =>\r\n          <Select.Option\r\n            key={field.idName}\r\n            value={field.idName}\r\n          >{field.name}</Select.Option>\r\n        )}\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"filterFormItem\"\r\n      name=\"sortDirection\"\r\n    >\r\n      <Select\r\n        placeholder=\"Сортировка по...\"\r\n        allowClear\r\n      >\r\n        <Select.Option value={1}>Возрастанию</Select.Option>\r\n        <Select.Option value={-1}>Убыванию</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Применить\r\n      </Button>\r\n    </Form.Item>\r\n  </Form>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './CarsTable.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Collapse, Layout, Table} from \"antd\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {carsColumns} from \"../../tablesColumns\";\r\nimport {getCars, setCarAction, setCarToEdit, setCurrentPage} from \"../../../../redux/actions/carsActions\";\r\nimport {SorterForm} from \"../../components/SorterForm\";\r\n\r\nexport const CarsTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n  const [sorters, setSorters] = useState(null)\r\n\r\n  const carsData = useSelector(state => state.cars)\r\n  const {cars, totalCount, currentPage} = carsData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const onSorterFormFinish = (values) => {\r\n    setSorters(values)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getCars(currentPage - 1, 10, sorters))\r\n    setLoading(false)\r\n  }, [currentPage, sorters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Автомобили</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Сортировки\">\r\n            <SorterForm\r\n              fields={[\r\n                {idName: \"categoryId\", name: \"Категория\"},\r\n                {idName: \"name\", name: \"Наименование\"},\r\n                {idName: \"priceMin\", name: \"Цена\"}\r\n              ]}\r\n              onSorterFormFinish={onSorterFormFinish}\r\n            />\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <SorterForm\r\n          fields={[\r\n            {idName: \"categoryId\", name: \"Категория\"},\r\n            {idName: \"name\", name: \"Наименование\"},\r\n            {idName: \"priceMin\", name: \"Цена\"}\r\n          ]}\r\n          onSorterFormFinish={onSorterFormFinish}\r\n        />\r\n      }\r\n      <Link to=\"car-edit\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"addEntityButton\"\r\n          onClick={() => {\r\n            dispatch(setCarAction(\"create\"))\r\n            dispatch(setCarToEdit(null))\r\n          }}\r\n        >Добавить авто</Button>\r\n      </Link>\r\n      <div\r\n        className=\"carsTable\"\r\n        style={collapsedItems.length ? {height: \"55%\"} : {height: \"85%\"}}\r\n      >\r\n        <Table\r\n          bordered\r\n          columns={carsColumns}\r\n          dataSource={cars}\r\n          loading={loading}\r\n          rowKey={car => car.id}\r\n          pagination={{\r\n            total: totalCount,\r\n            pageSize: 10,\r\n            current: currentPage,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} авто`,\r\n            onChange: page => {\r\n              dispatch(setCurrentPage(page))\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout.Content>\r\n  </>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Collapse, Layout, Table} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {citiesColumns} from \"../../tablesColumns\";\r\nimport './CitiesTable.css'\r\nimport {getCities, setCityAction, setCityToEdit} from \"../../../../redux/actions/citiesActions\";\r\nimport {SorterForm} from \"../../components/SorterForm\";\r\n\r\nexport const CitiesTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n  const [sorters, setSorters] = useState(null)\r\n\r\n  const citiesData = useSelector(state => state.cities)\r\n  const {cities, totalCount} = citiesData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const onSorterFormFinish = (values) => {\r\n    setSorters(values)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getCities(sorters))\r\n    setLoading(false)\r\n  }, [sorters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Города</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Сортировки\">\r\n            <SorterForm\r\n              fields={[\r\n                {idName: \"name\", name: \"Наименование\"}\r\n              ]}\r\n              onSorterFormFinish={onSorterFormFinish}\r\n            />\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <SorterForm\r\n          fields={[\r\n            {idName: \"name\", name: \"Наименование\"}\r\n          ]}\r\n          onSorterFormFinish={onSorterFormFinish}\r\n        />\r\n      }\r\n      <Link to=\"city-edit\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"addEntityButton\"\r\n          onClick={() => {\r\n            dispatch(setCityAction(\"create\"))\r\n            dispatch(setCityToEdit(null))\r\n          }}\r\n        >Добавить город</Button>\r\n      </Link>\r\n      <div\r\n        className=\"citiesTable\"\r\n        style={collapsedItems.length ? {height: \"60%\"} : {height: \"85%\"}}\r\n      >\r\n        <Table\r\n          bordered\r\n          columns={citiesColumns}\r\n          dataSource={cities}\r\n          loading={loading}\r\n          rowKey={city => city.id}\r\n          pagination={{\r\n            total: totalCount,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} городов`,\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout.Content>\r\n  </>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Collapse, Layout, Table} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {pointsColumns} from \"../../tablesColumns\";\r\nimport './PointsTable.css'\r\nimport {getPoints, setPointAction, setPointToEdit} from \"../../../../redux/actions/pointsActions\";\r\nimport {SorterForm} from \"../../components/SorterForm\";\r\n\r\nexport const PointsTable = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [collapsedItems, setCollapsedItems] = useState([])\r\n  const [sorters, setSorters] = useState(null)\r\n\r\n  const pointsData = useSelector(state => state.points)\r\n  const {points, totalCount} = pointsData\r\n\r\n  const dispatch = useDispatch()\r\n  const sizeOfPage = useBreakpoint()\r\n\r\n  const onSorterFormFinish = (values) => {\r\n    setSorters(values)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    await dispatch(getPoints(sorters))\r\n    setLoading(false)\r\n  }, [sorters])\r\n\r\n  return <>\r\n    <h1 className=\"pageTitle\">Пункты</h1>\r\n    <Layout.Content className=\"ordersListContent\">\r\n      {sizeOfPage.xs\r\n        ? <Collapse\r\n          ghost\r\n          onChange={setCollapsedItems}\r\n        >\r\n          <Collapse.Panel key={1} header=\"Сортировки\">\r\n            <SorterForm\r\n              fields={[\r\n                {idName: \"cityId\", name: \"Город\"},\r\n                {idName: \"address\", name: \"Адрес\"},\r\n                {idName: \"name\", name: \"Описание\"}\r\n              ]}\r\n              onSorterFormFinish={onSorterFormFinish}\r\n            />\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n        : <SorterForm\r\n          fields={[\r\n            {idName: \"cityId\", name: \"Город\"},\r\n            {idName: \"address\", name: \"Адрес\"},\r\n            {idName: \"name\", name: \"Описание\"}\r\n          ]}\r\n          onSorterFormFinish={onSorterFormFinish}\r\n        />\r\n      }\r\n      <Link to=\"point-edit\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"addEntityButton\"\r\n          onClick={() => {\r\n            dispatch(setPointAction(\"create\"))\r\n            dispatch(setPointToEdit(null))\r\n          }}\r\n        >Добавить пункт</Button>\r\n      </Link>\r\n      <div\r\n        className=\"pointsTable\"\r\n        style={collapsedItems.length ? {height: \"55%\"} : {height: \"85%\"}}\r\n      >\r\n        <Table\r\n          bordered\r\n          columns={pointsColumns}\r\n          dataSource={points}\r\n          loading={loading}\r\n          rowKey={point => point.id}\r\n          pagination={{\r\n            total: totalCount,\r\n            showTotal: (total, range) => `${range[0]}-${range[1]} из ${total} пунктов`,\r\n          }}\r\n        />\r\n      </div>\r\n    </Layout.Content>\r\n  </>\r\n}","import React, {useState} from \"react\";\r\nimport {Drawer, Layout, Menu} from 'antd';\r\nimport {CarOutlined, EditOutlined, EnvironmentOutlined, HomeOutlined} from \"@ant-design/icons\";\r\nimport './AdminPage.css'\r\nimport {OrdersList} from \"./tabs/orders/OrdersList\";\r\nimport {AdminPageHeader} from \"./components/AdminPageHeader\";\r\nimport {CarsTable} from \"./tabs/cars/CarsTable\";\r\nimport {CitiesTable} from \"./tabs/cities/CitiesTable\";\r\nimport {PointsTable} from \"./tabs/points/PointsTable\";\r\n\r\nexport const AdminPage = () => {\r\n  const [currentMenuItem, setCurrentMenuItem] = useState(1)\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const onSelectHandler = (e) => {\r\n    setCurrentMenuItem(Number(e.key))\r\n    setVisible(false)\r\n  }\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  return <Layout>\r\n    <AdminPageHeader setVisible={setVisible}/>\r\n    <Layout>\r\n      <Drawer\r\n        title=\"Меню\"\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n        visible={visible}>\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          style={{height: '100%', borderRight: 0}}\r\n          onSelect={onSelectHandler}\r\n        >\r\n          <Menu.Item\r\n            key=\"1\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EditOutlined/>}\r\n          >Список заказов</Menu.Item>\r\n          <Menu.Item\r\n            key=\"2\"\r\n            className=\"sideMenuItem\"\r\n            icon={<CarOutlined/>}\r\n          >Таблица авто</Menu.Item>\r\n          <Menu.Item\r\n            key=\"3\"\r\n            className=\"sideMenuItem\"\r\n            icon={<EnvironmentOutlined/>}\r\n          >Таблица городов</Menu.Item>\r\n          <Menu.Item\r\n            key=\"4\"\r\n            className=\"sideMenuItem\"\r\n            icon={<HomeOutlined/>}\r\n          >Таблица пунктов</Menu.Item>\r\n        </Menu>\r\n      </Drawer>\r\n      <Layout className=\"adminPageContainer\">\r\n        {currentMenuItem === 1 && <OrdersList/>}\r\n        {currentMenuItem === 2 && <CarsTable/>}\r\n        {currentMenuItem === 3 && <CitiesTable/>}\r\n        {currentMenuItem === 4 && <PointsTable/>}\r\n      </Layout>\r\n    </Layout>\r\n  </Layout>\r\n}","import axios from \"axios\";\r\n\r\nconst clientSecret = \"4cbcea96de\"\r\nconst alphabet = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\nconst getBasicHash = () => {\r\n  let rs = \"\";\r\n  while (rs.length < 7) {\r\n    rs += alphabet[Math.floor(Math.random() * alphabet.length)];\r\n  }\r\n  return `Basic ${window.btoa(`${rs}:${clientSecret}`)}`\r\n}\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api',\r\n  headers: {\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": getBasicHash()\r\n  },\r\n});\r\n\r\nexport const authAPI = {\r\n  postLogin(login, password) {\r\n    const body = {\r\n      username: login,\r\n      password\r\n    }\r\n    return instance.post(`auth/login`, body)\r\n  }\r\n}","import {authAPI} from \"../../api/api\";\r\n\r\nexport const authActions = {\r\n  setAuthData: (data) => ({type: \"AUTH/SET_AUTH_DATA\", payload: data}),\r\n  setAuthStatus: (status) => ({type: \"AUTH/SET_AUTH_STATUS\", payload: status})\r\n}\r\n\r\nexport const postLogin = (login, password) => async (dispatch) => {\r\n  try {\r\n    const response = await authAPI.postLogin(login, password)\r\n    sessionStorage.setItem(\"access_token\", response.data.access_token)\r\n    sessionStorage.setItem(\"refresh_token\", response.data.refresh_token)\r\n    dispatch(authActions.setAuthData(response.data))\r\n  } catch (e) {\r\n    dispatch(authActions.setAuthStatus(e.response.status))\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './Login.css'\r\nimport {Button, Form, Input, Space} from \"antd\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport logo from '../../assets/Logo Icon.svg'\r\nimport {postLogin} from \"../../redux/actions/authActions\";\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onFinish = (values) => {\r\n    dispatch(postLogin(values.username, values.password))\r\n  };\r\n\r\n  const authStatus = useSelector(state => state.auth.authStatus)\r\n\r\n  return <div className=\"loginContainer\">\r\n    <div className=\"loginContent\">\r\n      <Space\r\n        className=\"loginHeader\"\r\n        size=\"middle\"\r\n      >\r\n        <img\r\n          className=\"logo\"\r\n          src={logo}\r\n          alt=\"logo\"\r\n        />\r\n        <p className=\"company\">Need For Drive</p>\r\n      </Space>\r\n      <div className=\"loginCard\">\r\n        <p className=\"loginTitle\">Вход</p>\r\n        <Form\r\n          name=\"loginForm\"\r\n          onFinish={onFinish}\r\n          initialValues={{remember: true}} // intern intern-S!\r\n        >\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"username\"\r\n            rules={[{required: true, message: 'Введите логин'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined/>}\r\n              placeholder=\"Username\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            className=\"formItem\"\r\n            name=\"password\"\r\n            rules={[{required: true, message: 'Введите пароль'}]}\r\n            validateStatus={authStatus === 401 ? \"error\" : null}\r\n            help={authStatus === 401 ? \"Неверный логин или пароль\" : null}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined/>}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n\r\n          <div className=\"loginCardFooter\">\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a>Запросить доступ</a>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"submitButton\"\r\n            >Войти</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = (props) => {\r\n  const {path, redirect, isAuth, children} = props\r\n\r\n  return <Route\r\n    path={path}\r\n    render={() => {\r\n      return isAuth ? children : <Redirect to={redirect}/>\r\n    }}\r\n  />\r\n}","export default __webpack_public_path__ + \"static/media/blankCar.55f3fbcd.png\";","/* eslint-disable react/prop-types */\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {AutoComplete, Button, Checkbox, Form, Input, message} from \"antd\";\r\nimport {PlusOutlined} from \"@ant-design/icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCategories, postCar, putCar} from \"../../../redux/actions/carsActions\";\r\n\r\nexport const CarEditForm = (props) => {\r\n  const {image, carToEdit} = props\r\n\r\n  const [colors, setColors] = useState(carToEdit?.colors.map((color, index) => ({\r\n    id: color + index,\r\n    value: color\r\n  })) || [])\r\n\r\n  const carsData = useSelector(state => state.cars)\r\n  const {categories, carAction, carSuccess} = carsData\r\n  const options = categories.map(category => ({value: category.name}))\r\n  const dispatch = useDispatch()\r\n  const addColor = useRef()\r\n\r\n  const onFormSubmitHandle = async (values) => {\r\n    let categoryId = null\r\n    for (let i = 0; i < categories.length; i += 1) {\r\n      if (categories[i].name === values.categoryId) {\r\n        categoryId = categories[i].id\r\n        break\r\n      }\r\n    }\r\n\r\n    const formData = {\r\n      priceMin: Number(values.priceMin),\r\n      priceMax: Number(values.priceMax),\r\n      name: values.name,\r\n      number: values.number,\r\n      description: values.description,\r\n      categoryId,\r\n      colors: values.colorsList,\r\n      thumbnail: image\r\n    }\r\n\r\n    switch (carAction) {\r\n      case \"create\": {\r\n        dispatch(postCar(formData))\r\n        break\r\n      }\r\n      case \"update\": {\r\n        dispatch(putCar(carToEdit.id, formData))\r\n        break\r\n      }\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories())\r\n  }, [])\r\n\r\n  if (carSuccess && carAction === \"update\") {\r\n    message.success(\"Успех! Машина обновлёна\")\r\n  } else if (carSuccess && carAction === \"create\") {\r\n    message.success(\"Успех! Машина добавлена\")\r\n  }\r\n\r\n  return <Form\r\n    name=\"editCar\"\r\n    labelCol={{span: 6}}\r\n    initialValues={{\r\n      priceMin: carToEdit?.priceMin || null,\r\n      priceMax: carToEdit?.priceMax || null,\r\n      name: carToEdit?.name || null,\r\n      number: carToEdit?.number || null,\r\n      description: carToEdit?.description || null,\r\n      categoryId: carToEdit?.categoryId?.name || null,\r\n    }}\r\n    onFinish={onFormSubmitHandle}\r\n  >\r\n    <Form.Item\r\n      label=\"Минимальная цена\"\r\n      name=\"priceMin\"\r\n      rules={[{required: true, message: 'Введите минимальную смоимость аренды авто'}]}\r\n    >\r\n      <Input placeholder=\"0\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Максимальная цена\"\r\n      name=\"priceMax\"\r\n      rules={[{required: true, message: 'Введите максимальную смоимость аренды авто'}]}\r\n    >\r\n      <Input placeholder=\"0\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Наименование\"\r\n      name=\"name\"\r\n      rules={[{required: true, message: 'Введите наименование авто'}]}\r\n    >\r\n      <Input placeholder=\"Ford Focus\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Номер\"\r\n      name=\"number\"\r\n      rules={[{required: true, message: 'Введите автомобильный номер'}]}\r\n    >\r\n      <Input placeholder=\"A000AA\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Описание\"\r\n      name=\"description\"\r\n    >\r\n      <Input.TextArea\r\n        showCount\r\n        maxLength={200}\r\n        autoSize\r\n        placeholder=\"Премиум-класс\"\r\n      />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Категория\"\r\n      name=\"categoryId\"\r\n      rules={[{required: true, message: 'Выберите категорию'}]}\r\n    >\r\n      <AutoComplete\r\n        style={{width: 200}}\r\n        options={options}\r\n        allowClear\r\n        placeholder=\"Выберите категорию...\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n      />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      className=\"carColorItem\"\r\n      label=\"Цвета\"\r\n    >\r\n      <Form.List name=\"colors\">\r\n        {() => (\r\n          <>\r\n            <Form.Item>\r\n              <Input placeholder=\"Добавьте цвет\" allowClear ref={addColor} className=\"carColorInput\"/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"dashed\" className=\"carColorAddButton\" onClick={() => {\r\n                setColors([\r\n                  ...colors,\r\n                  {\r\n                    id: colors.length,\r\n                    value: addColor.current.state.value\r\n                  }\r\n                ])\r\n                addColor.current.state.value = \"\"\r\n              }} block>\r\n                <PlusOutlined/>\r\n              </Button>\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n      </Form.List>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      name=\"colorsList\"\r\n      label=\"Выберите цвета\"\r\n    >\r\n      <Checkbox.Group className=\"colorsList\">\r\n        {colors.map((color) => <Checkbox value={color.value} key={color.id}>\r\n          {color.value}\r\n        </Checkbox>)}\r\n      </Checkbox.Group>\r\n    </Form.Item>\r\n\r\n    <div className=\"formButtons\">\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Сохранить\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      <Link to=\"/admin\">\r\n        {carSuccess\r\n          ? <Button className=\"cancelButton\">Вернуться</Button>\r\n          : <Button danger className=\"cancelButton\">Отменить</Button>\r\n        }\r\n      </Link>\r\n    </div>\r\n  </Form>\r\n}","import React, {useState} from \"react\";\r\nimport {Button, Layout, Row, Upload} from 'antd';\r\nimport './CarEditPage.css'\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\nimport {useSelector} from \"react-redux\";\r\nimport blankCar from '../../../assets/blankCar.png'\r\nimport {CarEditForm} from \"./CarEditForm\";\r\n\r\nexport const CarEditPage = () => {\r\n  const [image, setImage] = useState()\r\n\r\n  const carToEdit = useSelector(state => state.cars.carToEdit)\r\n\r\n  return <Layout className=\"editingContainer\">\r\n    <h1 className=\"pageTitle editingTitle\">Карточка автомобиля</h1>\r\n    <Row align=\"top\">\r\n      <div className=\"editingContent editingOne\">\r\n        <img\r\n          className=\"cardImage\"\r\n          src={carToEdit?.thumbnail?.path || blankCar}\r\n          alt=\"carImage\"\r\n        />\r\n        <p className=\"carName\">{carToEdit?.name || \"Марка авто\"}</p>\r\n        <p className=\"carCategory\">{carToEdit?.categoryId?.name || \"Категория\"}</p>\r\n        <Upload\r\n          name=\"file\"\r\n          beforeUpload={(e) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(e);\r\n            reader.onload = () => {\r\n              const tempThumbnail = {\r\n                mimetype: e.type,\r\n                originalname: e.name,\r\n                path: reader.result,\r\n                size: e.size\r\n              }\r\n              setImage(tempThumbnail)\r\n            };\r\n            return false\r\n          }}\r\n        >\r\n          <Button icon={<UploadOutlined/>}>Выберите файл...</Button>\r\n        </Upload>\r\n      </div>\r\n      <div className=\"editingContent editingTwo\">\r\n        <p className=\"EntityFormTitle\">Настройки автомобиля</p>\r\n        <CarEditForm image={image} carToEdit={carToEdit}/>\r\n      </div>\r\n    </Row>\r\n  </Layout>\r\n}","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Form, Input, message} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {postCity, putCity} from \"../../../redux/actions/citiesActions\";\r\n\r\nexport const CityEditForm = (props) => {\r\n  const {cityToEdit} = props\r\n\r\n  const citiesData = useSelector(state => state.cities)\r\n  const {cityAction, citySuccess} = citiesData\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmitHandle = (values) => {\r\n    switch (cityAction) {\r\n      case \"create\": {\r\n        dispatch(postCity(values))\r\n        break\r\n      }\r\n      case \"update\": {\r\n        dispatch(putCity(cityToEdit.id, values))\r\n        break\r\n      }\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  if (citySuccess && cityAction === \"update\") {\r\n    message.success(\"Успех! Город сохранён\")\r\n  } else if (citySuccess && cityAction === \"create\") {\r\n    message.success(\"Успех! Город добавлен\")\r\n  }\r\n\r\n  return <Form\r\n    name=\"editCity\"\r\n    labelCol={{span: 5}}\r\n    initialValues={{\r\n      name: cityToEdit?.name || null\r\n    }}\r\n    onFinish={onFormSubmitHandle}\r\n  >\r\n    <Form.Item\r\n      label=\"Наименование\"\r\n      name=\"name\"\r\n      rules={[{required: true, message: 'Введите название города'}]}\r\n    >\r\n      <Input placeholder=\"Москва...\"/>\r\n    </Form.Item>\r\n\r\n    <div className=\"formButtons cityFormButtons\">\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Сохранить\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      <Link to=\"/admin\">\r\n        {citySuccess\r\n          ? <Button className=\"cancelButton\">Вернуться</Button>\r\n          : <Button danger className=\"cancelButton\">Отменить</Button>\r\n        }\r\n      </Link>\r\n    </div>\r\n  </Form>\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Layout} from \"antd\";\r\nimport {CityEditForm} from \"./CityEditForm\";\r\nimport './CityEditPage.css'\r\n\r\nexport const CityEditPage = () => {\r\n  const cityToEdit = useSelector(state => state.cities.cityToEdit)\r\n\r\n  return <Layout className=\"editingContainer\">\r\n    <h1 className=\"pageTitle editingTitle\">Карточка города</h1>\r\n    <div className=\"editingContent cityEditContent\">\r\n      <p className=\"EntityFormTitle\">Настройки города</p>\r\n      <CityEditForm cityToEdit={cityToEdit}/>\r\n    </div>\r\n  </Layout>\r\n}","/* eslint-disable react/prop-types */\r\nimport React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AutoComplete, Button, Form, Input, message} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {postPoint, putPoint} from \"../../../redux/actions/pointsActions\";\r\nimport {getCities} from \"../../../redux/actions/citiesActions\";\r\n\r\nexport const PointEditForm = (props) => {\r\n  const {pointToEdit} = props\r\n\r\n  const pointData = useSelector(state => state.points)\r\n  const {pointAction, pointSuccess} = pointData\r\n  const cities = useSelector(state => state.cities.cities)\r\n  const options = cities.map(city => ({value: city.name}))\r\n  const dispatch = useDispatch()\r\n\r\n  const onFormSubmitHandle = (values) => {\r\n    let cityId = null\r\n    for (let i = 0; i < cities.length; i += 1) {\r\n      if (cities[i].name === values.cityId) {\r\n        cityId = cities[i].id\r\n        break\r\n      }\r\n    }\r\n\r\n    switch (pointAction) {\r\n      case \"create\": {\r\n        dispatch(postPoint({...values, cityId}))\r\n        break\r\n      }\r\n      case \"update\": {\r\n        dispatch(putPoint(pointToEdit.id, {...values, cityId}))\r\n        break\r\n      }\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getCities())\r\n  }, [])\r\n\r\n  if (pointSuccess && pointAction === \"update\") {\r\n    message.success(\"Успех! Пункт обновлён\")\r\n  } else if (pointSuccess && pointAction === \"create\") {\r\n    message.success(\"Успех! Пункт добавлен\")\r\n  }\r\n\r\n  return <Form\r\n    name=\"editPoint\"\r\n    labelCol={{span: 4}}\r\n    initialValues={{\r\n      name: pointToEdit?.name || null,\r\n      address: pointToEdit?.address || null,\r\n      cityId: pointToEdit?.cityId?.name || null,\r\n    }}\r\n    onFinish={onFormSubmitHandle}\r\n  >\r\n    <Form.Item\r\n      label=\"Наименование\"\r\n      name=\"name\"\r\n      rules={[{required: true, message: 'Введите наименование пункта'}]}\r\n    >\r\n      <Input placeholder=\"Пункт...\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Адрес\"\r\n      name=\"address\"\r\n      rules={[{required: true, message: 'Введите адрес пункта'}]}\r\n    >\r\n      <Input placeholder=\"ул. Стахановская, 29/1\"/>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Город\"\r\n      name=\"cityId\"\r\n      rules={[{required: true, message: 'Выберите город'}]}\r\n    >\r\n      <AutoComplete\r\n        style={{width: 200}}\r\n        options={options}\r\n        allowClear\r\n        placeholder=\"Выберите город...\"\r\n        filterOption={(inputValue, option) =>\r\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n      />\r\n    </Form.Item>\r\n\r\n    <div className=\"formButtons pointFormButtons\">\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Сохранить\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      <Link to=\"/admin\">\r\n        {pointSuccess\r\n          ? <Button className=\"cancelButton\">Вернуться</Button>\r\n          : <Button danger className=\"cancelButton\">Отменить</Button>\r\n        }\r\n      </Link>\r\n    </div>\r\n  </Form>\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Layout} from \"antd\";\r\nimport {PointEditForm} from \"./PointEditForm\";\r\nimport './PointEditPage.css'\r\n\r\nexport const PointEditPage = () => {\r\n  const pointToEdit = useSelector(state => state.points.pointToEdit)\r\n\r\n  return <Layout className=\"editingContainer\">\r\n    <h1 className=\"pageTitle editingTitle\">Карточка пункта</h1>\r\n    <div className=\"editingContent pointEditContent\">\r\n      <p className=\"EntityFormTitle\">Настройки пункта</p>\r\n      <PointEditForm pointToEdit={pointToEdit}/>\r\n    </div>\r\n  </Layout>\r\n}","import React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AdminPage} from \"./pages/adminPage/AdminPage\";\r\nimport {Login} from \"./pages/loginPage/Login\";\r\nimport {PrivateRoute} from \"./components/PrivateRoute\";\r\nimport {CarEditPage} from \"./pages/entityEditPage/carEdit/CarEditPage\";\r\nimport {CityEditPage} from \"./pages/entityEditPage/cityEdit/CityEditPage\";\r\nimport {PointEditPage} from \"./pages/entityEditPage/pointEdit/PointEditPage\";\r\n\r\nconst App = () => {\r\n  const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n  return <Switch>\r\n    <Route\r\n      exact\r\n      path=\"/\"\r\n      render={() => <Redirect to=\"/admin\"/>}\r\n    />\r\n\r\n    <PrivateRoute\r\n      path=\"/admin\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <AdminPage/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/login\"\r\n      redirect=\"/admin\"\r\n      isAuth={!isAuth}\r\n    >\r\n      <Login/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/car-edit\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <CarEditPage/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/city-edit\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <CityEditPage/>\r\n    </PrivateRoute>\r\n\r\n    <PrivateRoute\r\n      path=\"/point-edit\"\r\n      redirect=\"/login\"\r\n      isAuth={isAuth}\r\n    >\r\n      <PointEditPage/>\r\n    </PrivateRoute>\r\n  </Switch>\r\n}\r\n\r\nexport default App\r\n","const initialState = {\r\n  isAuth: false,\r\n  authStatus: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"AUTH/SET_AUTH_DATA\": {\r\n      return {\r\n        ...state,\r\n        isAuth: true\r\n      }\r\n    }\r\n    case \"AUTH/SET_AUTH_STATUS\": {\r\n      return {\r\n        ...state,\r\n        authStatus: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const initialState = {\r\n  orders: [],\r\n  totalCount: null,\r\n  orderStatus: []\r\n};\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ORDERS/SET_ORDERS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        orders: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/ORDERS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"ORDERS/SET_ORDER_STATUS\": {\r\n      return {\r\n        ...state,\r\n        orderStatus: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default ordersReducer;","const initialState = {\r\n  cars: [],\r\n  carToEdit: null,\r\n  currentPage: 1,\r\n  totalCount: null,\r\n  categories: [],\r\n  carAction: null,\r\n  carSuccess: false\r\n};\r\n\r\nconst carsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CARS/SET_CARS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        cars: action.payload\r\n      }\r\n    }\r\n    case \"CARS/CARS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CAR_TO_EDIT\": {\r\n      return {\r\n        ...state,\r\n        carToEdit: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CATEGORIES\": {\r\n      return {\r\n        ...state,\r\n        categories: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CAR_ACTION\": {\r\n      return {\r\n        ...state,\r\n        carAction: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CAR_SUCCESS\": {\r\n      return {\r\n        ...state,\r\n        carSuccess: action.payload\r\n      }\r\n    }\r\n    case \"CARS/SET_CURRENT_PAGE\": {\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default carsReducer;","const initialState = {\r\n  cities: [],\r\n  totalCount: null,\r\n  cityAction: null,\r\n  cityToEdit: null,\r\n  citySuccess: false\r\n};\r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CITIES/SET_CITIES_PORTION\": {\r\n      return {\r\n        ...state,\r\n        cities: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/CITIES_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/SET_CITY_TO_EDIT\": {\r\n      return {\r\n        ...state,\r\n        cityToEdit: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/SET_CITY_ACTION\": {\r\n      return {\r\n        ...state,\r\n        cityAction: action.payload\r\n      }\r\n    }\r\n    case \"CITIES/SET_CITY_SUCCESS\": {\r\n      return {\r\n        ...state,\r\n        citySuccess: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default citiesReducer;","const initialState = {\r\n  points: [],\r\n  totalCount: null,\r\n  pointToEdit: null,\r\n  pointAction: null,\r\n  pointSuccess: false\r\n};\r\n\r\nconst pointsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"POINTS/SET_POINTS_PORTION\": {\r\n      return {\r\n        ...state,\r\n        points: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/POINTS_TOTAL_COUNT\": {\r\n      return {\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/SET_POINT_TO_EDIT\": {\r\n      return {\r\n        ...state,\r\n        pointToEdit: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/SET_POINT_ACTION\": {\r\n      return {\r\n        ...state,\r\n        pointAction: action.payload\r\n      }\r\n    }\r\n    case \"POINTS/SET_POINT_SUCCESS\": {\r\n      return {\r\n        ...state,\r\n        pointSuccess: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default pointsReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport authReducer from \"./authReducer\";\r\nimport ordersReducer from \"./ordersReducer\";\r\nimport carsReducer from \"./carsReducer\";\r\nimport citiesReducer from \"./citiesReducer\";\r\nimport pointsReducer from \"./pointsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  orders: ordersReducer,\r\n  cars: carsReducer,\r\n  cities: citiesReducer,\r\n  points: pointsReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from './App';\r\nimport store from \"./redux/reduxStore\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}